{"version":3,"sources":["Sections/Header.js","Sections/Nav.js","MainPages/Home.js","Components/FoodEntry.js","Components/Note.js","Components/MealEntry.js","Components/FoodItem.js","MainPages/DailyMeals.js","MainPages/YourFood.js","MainPages/YourPlans.js","MainPages/YourStats.js","MainPages/GlobalStats.js","MainPages/GlobalData.js","MainPages/Profile.js","MainPages/Login.js","MainPages/Register.js","MainPages/Error.js","Sections/Main.js","Sections/Footer.js","App.js","index.js"],"names":["Header","props","updateUser","newIsLogged","newUsername","newPic","setState","isLogged","username","pic","onLogClick","state","app","changeMainPage","render","className","src","alt","onClick","id","defaultUser","React","Component","Nav","Home","FoodEntry","foodEntry","fatRes","carbsRes","proteinRes","foodname","brand","amount","fat","carbs","protein","defaultFoodEntry","entryid","foodid","sizeinfo","userid","price","isdish","noteid","measure","foodItem","toFixed","Note","grade","title","text","MealEntry","addNewFoodEntry","ev","newFoodEntry","foodEntries","foodCounter","push","key","addNewFoodEntryMacros","toggleHighlight","isHighlighted","toggleMinMax","isMin","stopPropagation","fe","aux","mealEntry","mealname","selectedChanged","removeMeal","componentDidMount","signalSelect","defaultMealEntry","portion","foodentries","selectedFoodEntry","f","FoodItem","toggleSelected","isSelected","defaultFoodItem","getServerURL","svData","serverLink","dateToStr","dateObj","getFullYear","getMonth","toString","getDate","DailyMeals","loadDailyMeals","day","a","mealEntries","mealCounter","userId","currentUser","fetch","method","headers","res","json","first","meals","m","onSelectedMealChanged","onRemoveMeal","selectedDay","dayEntry","loadSFoodItems","searchTerms","isAll","sFoodItems","sFoodCounter","onSelectedFoodChanged","onCommit","dayPutReq","date","body","JSON","stringify","alert","console","log","onAddNewMeal","selectedMeal","sender","filter","mealid","_reactInternalFiber","meal","onAddNewFoodEntry","selectedFood","amountInput","document","querySelector","isNaN","placeholder","currentEntry","value","onDayButtons","nrDays","d","Date","setDate","onChange","currentTarget","type","checked","readOnly","colSpan","YourFood","YourPlans","YourStats","GlobalStats","GlobalData","Profile","user","email","firstname","lastname","dob","sex","describe","defaultmeals","Login","onLogin","preventDefault","inputs","querySelectorAll","usernameText","passText","pass","status","warningMsg","message","onSubmit","name","Register","onRegister","Error","Main","changePage","newPage","page","Footer","refs","main","createRef","footer","header","nav","App","current","ref","default_meals","access","ReactDOM"],"mappings":"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","file":"static/js/main.3cfd605d.chunk.js","sourcesContent":["//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Header = () => {\r\n//    return (\r\n//        <header className=\"subblock boxShow\">\r\n//            <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n//            <div id=\"titleArea\">\r\n//                <NavLink to=\"/\">\r\n//                    <h1 id=\"title\">FoodTracker</h1>\r\n//                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n//                </NavLink>\r\n//            </div>\r\n//            <div id=\"profileArea\" className=\"boxShow\">\r\n//                <NavLink to=\"/Login\">\r\n//                    Guest<br />\r\n//                    <img src=\"SitePics/profileEmpty.png\" alt=\"[NO PIC]\" />\r\n//                </NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Register\">Register</NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Login\">Login</NavLink>\r\n//            </div>\r\n//        </header>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\nimport { app } from '../App';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            username: app.defaultUser.username,\r\n            pic: app.defaultUser.pic\r\n        };\r\n    }\r\n\r\n    updateUser = (newIsLogged, newUsername, newPic) => {\r\n        this.setState({\r\n            isLogged: newIsLogged,\r\n            username: newUsername,\r\n            pic: newPic\r\n        });\r\n    }\r\n\r\n    onLogClick = () => {\r\n        const { isLogged } = this.state;\r\n\r\n        if (isLogged) {\r\n            app.updateUser(null);\r\n            app.changeMainPage(\"Home\");\r\n        }\r\n        else\r\n            app.changeMainPage(\"Login\");\r\n    }\r\n\r\n    render = () => {\r\n        const { isLogged, username, pic } = this.state;\r\n\r\n        return (\r\n            <header className=\"subblock boxShow\">\r\n                <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n                <div onClick={() => app.changeMainPage(\"Home\")} id=\"titleArea\">\r\n                    <h1 id=\"title\">FoodTracker</h1>\r\n                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n                </div>\r\n                <div id=\"profileArea\" className=\"boxShow\">\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n                        {username}\r\n                        <br />\r\n                        <img src={`UserPics/${pic}`} alt=\"[NO PIC]\" />\r\n                    </span>\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")} className=\"navlink\">\r\n                        {isLogged ? \"Profile\" : \"Register\"}\r\n                    </span>\r\n                    <span onClick={this.onLogClick} className=\"navlink\">\r\n                        {isLogged ? \"Logout\" : \"Login\"}\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Nav = () => {\r\n//    return (\r\n//        <nav className=\"subblock boxShow\">\r\n//            <NavLink className=\"navlink textHigh\" to=\"/DailyMeals\">Daily Meals</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourFood\">Your Food</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourPlans\">Your Plans</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourStats\">Your Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalStats\">Global Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalData\">Global Data</NavLink>\r\n//        </nav>\r\n//    );\r\n//}\r\n\r\nclass Nav extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <nav className=\"subblock boxShow\">\r\n                <span onClick={() => app.changeMainPage(\"DailyMeals\")} className=\"navlink textHigh\">Daily Meals</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourFood\")} className=\"navlink textHigh\">Your Food</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourPlans\")} className=\"navlink textHigh\">Your Plans</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourStats\")} className=\"navlink textHigh\">Your Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalStats\")} className=\"navlink textHigh\">Global Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalData\")} className=\"navlink textHigh\">Global Data</span>\r\n            </nav>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>WELCOME HOME!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass FoodEntry extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultFoodEntry = {\r\n            entryid: 0,\r\n            foodid: 0,\r\n            foodname: \"Nothing\",\r\n            brand: \"Nobody\",\r\n            fat: 0, carbs: 0, protein: 0,\r\n            sizeinfo: null, userid: 0, pic: null, price: 0,\r\n            isdish: false,\r\n            noteid: null,\r\n            amount: 1,\r\n            measure: \"Pieces\"\r\n        };\r\n\r\n        let foodEntry;\r\n        if (props.foodEntry)\r\n            foodEntry = props.foodEntry;\r\n        else if (props.foodItem) {\r\n            foodEntry = props.foodItem;\r\n            foodEntry.amount = props.amount;\r\n            foodEntry.measure = props.measure;\r\n        }\r\n        else\r\n            foodEntry = this.defaultFoodEntry;\r\n\r\n        this.state = {\r\n            fatRes: (foodEntry.fat * foodEntry.amount / (foodEntry.sizeinfo === null ? 1 : 100)).toFixed(1),\r\n            carbsRes: (foodEntry.carbs * foodEntry.amount / (foodEntry.sizeinfo === null ? 1 : 100)).toFixed(1),\r\n            proteinRes: (foodEntry.protein * foodEntry.amount / (foodEntry.sizeinfo === null ? 1 : 100)).toFixed(1),\r\n            foodEntry:foodEntry\r\n        };\r\n    }\r\n\r\n    render = () => {        \r\n        const { foodEntry, fatRes, carbsRes, proteinRes } = this.state;\r\n        const { foodname, brand, amount, fat, carbs, protein} = foodEntry;\r\n\r\n        return (\r\n            <div className=\"foodEntry lineDown\">\r\n                <span className=\"amount\">{amount}</span>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"macroRes\">{`${fatRes}/${carbsRes}/${proteinRes}`}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FoodEntry;","import React from \"react\";\r\n\r\nconst Note = ({\r\n    grade = 0,\r\n    title = \"Note Title\",\r\n    text = \"Note text lalalaal lalalalal alaalalal lllaal lalala asdasdsd asdda asdsadssads LA!\"\r\n}) => {\r\n    return (\r\n        <div className=\"note boxShow\">\r\n            <img src=\"SitePics/star.png\" alt={\"[STAR]\" + grade} />\r\n            <div>\r\n                <span>{title}</span>\r\n                <span>{text}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport FoodEntry from './FoodEntry';\r\nimport Note from './Note';\r\n\r\nclass MealEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultMealEntry = {\r\n            mealname: \"New Meal\",\r\n            portion: 1,\r\n            noteid: null,\r\n            foodentries: []\r\n        }\r\n\r\n        this.state = {\r\n            mealEntry: props.mealEntry ? props.mealEntry : this.defaultMealEntry,\r\n            foodEntries: [],\r\n            foodCounter: 0,\r\n            selectedFoodEntry: null,//TODO:LATER FOR REPLACE\r\n            isHighlighted: false,\r\n            isMin: false,\r\n            fat: 0,\r\n            carbs: 0,\r\n            protein: 0\r\n        };\r\n\r\n        if (props.mealEntry)\r\n            for (let f of props.mealEntry.foodentries) {\r\n                this.state.foodEntries.push(<FoodEntry\r\n                    foodEntry={f}\r\n                    key={this.state.foodCounter++} />);\r\n                this.addNewFoodEntryMacros(f);\r\n            }\r\n    }\r\n\r\n    addNewFoodEntry = (ev, newFoodEntry) => {\r\n        const { foodEntries } = this.state;\r\n        let { foodCounter } = this.state;\r\n\r\n        foodEntries.push(<FoodEntry foodEntry={newFoodEntry} key={foodCounter++} />);\r\n        this.addNewFoodEntryMacros(newFoodEntry);\r\n\r\n        this.setState({\r\n            foodEntries: foodEntries,\r\n            foodCounter: foodCounter,\r\n            fat: this.state.fat,\r\n            carbs: this.state.carbs,\r\n            protein: this.state.protein\r\n        });\r\n    };\r\n\r\n    toggleHighlight = () => this.setState({\r\n        isHighlighted: !this.state.isHighlighted\r\n    });\r\n\r\n    toggleMinMax = (ev) => {\r\n        this.setState({\r\n            isMin: !this.state.isMin\r\n        });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    addNewFoodEntryMacros = (fe) => {\r\n        const { fat, carbs, protein } = this.state;\r\n        const aux = fe.sizeinfo === null ? 1 : 100;\r\n\r\n        this.state.fat = fat + (fe.fat * fe.amount / aux);\r\n        this.state.carbs = carbs + (fe.carbs * fe.amount / aux);\r\n        this.state.protein = protein + (fe.protein * fe.amount / aux);\r\n    }\r\n\r\n    render = () => {\r\n        const { mealEntry, isHighlighted, isMin, foodEntries, fat, carbs, protein } = this.state;\r\n        const { mealname } = mealEntry;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"mealArea boxShow\" + (isHighlighted ? \" highlight\" : \"\")}>\r\n                <div className=\"mealTitle\">\r\n                    {mealname}\r\n                    <img onClick={(ev) => this.props.removeMeal(ev, this)} src=\"PLACEHOLDER DROPDOWN\" alt=\"X\" />\r\n                    <img onClick={this.toggleMinMax} src=\"PLACEHOLDER DROPDOWN\" alt={isMin ? \"+\" : \"-\"} />\r\n                </div>\r\n                <hr />\r\n                <Note />\r\n                <hr />\r\n                <div className={\"foodEntries lineDown\" + (isMin ? \" hidden\" : \"\")}>\r\n                    {foodEntries}\r\n                </div>\r\n                <div className=\"mealTotal\">\r\n                    <span>Total:</span>\r\n                    <span>{`${fat.toFixed(1)}//${carbs.toFixed(1)}//${protein.toFixed(1)}`}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default MealEntry;","import React from 'react';\r\n\r\nclass FoodItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultFoodItem = {\r\n            entryid: 0,\r\n            foodid: 0,\r\n            foodname: \"Nothing\",\r\n            brand: \"Nowhere\",\r\n            fat: 0, carbs: 0, protein: 0,\r\n            sizeinfo: null, userid: 0, pic: null, price: 0,\r\n            isdish: false,\r\n            noteid: null,\r\n            measure: \"Pieces\"\r\n        };\r\n\r\n        this.state = {\r\n            foodItem: (props.foodItem) ? props.foodItem : this.defaultFoodItem,\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { foodItem, isSelected } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, sizeinfo } = foodItem;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"foodItem lineDown\" + (isSelected ? \" feSelected\" : \"\")}>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"per\">{sizeinfo === null ? `1` : `100g`}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default FoodItem;","import React from 'react';\r\nimport \"../Css/DailyMeals.css\";\r\n\r\nimport MealEntry from '../Components/MealEntry';\r\nimport FoodEntry from '../Components/FoodEntry';\r\nimport FoodItem from '../Components/FoodItem';\r\nimport Note from '../Components/Note';\r\nimport { app } from '../App';\r\nimport svData from '../svData.json';\r\n\r\nconst getServerURL = () => {\r\n    return svData.serverLink;\r\n}\r\n\r\nconst dateToStr = (dateObj) => {\r\n    return `${dateObj.getFullYear()}-${dateObj.getMonth() + 1 > 9 ? (dateObj.getMonth() + 1).toString() : \"0\" + (dateObj.getMonth() + 1).toString()}-${dateObj.getDate() > 9 ? dateObj.getDate().toString() : \"0\" + dateObj.getDate().toString()}`;\r\n};\r\n\r\nclass DailyMeals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDay: dateToStr(new Date()), //TODO: Eliminate and just user doc control?\r\n            dayEntry: {},\r\n            mealEntries: [],\r\n            mealCounter: 0,\r\n            sFoodItems: [],\r\n            sFoodCounter: 0,\r\n            amount: \"\",\r\n            selectedMeal: null,\r\n            selectedFood: null\r\n        };\r\n\r\n        //; (async () => {\r\n        this.loadDailyMeals(dateToStr(new Date()));\r\n        this.loadSFoodItems(\"\", false);\r\n        //})();\r\n    }\r\n\r\n    loadDailyMeals = async (day) => {\r\n        let { mealEntries, mealCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res = await fetch(getServerURL() + \"/dailymeals\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"reqdate\": day,\r\n                \"userid\": userId,\r\n            }\r\n        });\r\n        res = await res.json();\r\n\r\n        mealEntries = [];\r\n        let first = true;\r\n        for (let m of res.meals)\r\n            if (!first)\r\n                mealEntries.push(<MealEntry\r\n                    selectedChanged={this.onSelectedMealChanged}\r\n                    removeMeal={this.onRemoveMeal}\r\n                    mealEntry={m}\r\n                    key={mealCounter++} />);\r\n            else {\r\n                mealEntries.push(<MealEntry\r\n                    signalSelect={true}\r\n                    selectedChanged={this.onSelectedMealChanged}\r\n                    removeMeal={this.onRemoveMeal}\r\n                    mealEntry={m}\r\n                    key={mealCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            selectedDay: day,\r\n            dayEntry: res,\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter\r\n        });\r\n    }\r\n\r\n    loadSFoodItems = async (searchTerms, isAll) => {\r\n        let { sFoodItems, sFoodCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res;\r\n        res = await fetch(getServerURL() + \"/dailymeals/foodsearch\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"userid\": userId,\r\n                \"search\": searchTerms,\r\n                \"isall\": isAll\r\n            }\r\n        });\r\n        res = await res.json();\r\n\r\n\r\n        sFoodItems = [];\r\n        let first = true;\r\n        for (let f of res)\r\n            if (!first)\r\n                sFoodItems.push(<FoodItem\r\n                    selectedChanged={this.onSelectedFoodChanged}\r\n                    foodItem={f}\r\n                    key={sFoodCounter++} />);\r\n            else {\r\n                sFoodItems.push(<FoodItem\r\n                    signalSelect={true}\r\n                    selectedChanged={this.onSelectedFoodChanged}\r\n                    foodItem={f}\r\n                    key={sFoodCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            sFoodItems: sFoodItems,\r\n            sFoodCounter: sFoodCounter\r\n        });\r\n    };\r\n\r\n    onCommit = async (ev) => {\r\n        const { dayEntry, selectedDay } = this.state;\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        const dayPutReq = dayEntry;\r\n        dayPutReq.userid = userId;\r\n        dayPutReq.date = selectedDay;\r\n\r\n        let res = await fetch(getServerURL() + \"/dailymeals\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(dayPutReq)\r\n        });\r\n        res = await res.json();\r\n        alert(`Successfully entered date for day ${selectedDay}!\\n --You can view resulting entry in the console`);\r\n        console.log(res);\r\n    };\r\n\r\n    onAddNewMeal = (ev) => {    //TODO\r\n        const { mealEntries, dayEntry, selectedMeal } = this.state;\r\n        let { mealCounter } = this.state;\r\n\r\n        if (selectedMeal)\r\n            mealEntries.push(<MealEntry\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n        else\r\n            mealEntries.push(<MealEntry\r\n                signalSelect={true}\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n\r\n        dayEntry.meals.push({       //TODO: Must make Custamizable\r\n            key: mealCounter - 1,\r\n            mealname: \"New Meal\",\r\n            portion: 1,\r\n            noteid: null,\r\n            foodentries: []\r\n        });\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter,\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    onRemoveMeal = (ev, sender) => {\r\n        const { selectedMeal, mealEntries, dayEntry } = this.state;\r\n\r\n        dayEntry.meals = dayEntry.meals.filter((m) => !((m.mealid && m.mealid === sender.state.mealEntry.mealid)\r\n            || m.key == sender._reactInternalFiber.key));\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries.filter((meal) => meal.key !== sender._reactInternalFiber.key),\r\n            dayEntry: dayEntry\r\n        });\r\n\r\n\r\n        if (selectedMeal !== null && selectedMeal === sender)\r\n            this.setState({\r\n                selectedMeal: null\r\n            });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    onSelectedMealChanged = (ev, sender) => {\r\n        const { selectedMeal } = this.state;\r\n\r\n        if (sender !== selectedMeal) {\r\n            if (selectedMeal)\r\n                selectedMeal.toggleHighlight();\r\n            sender.toggleHighlight();\r\n\r\n            this.setState({\r\n                selectedMeal: sender\r\n            });\r\n        }\r\n    };\r\n\r\n    onAddNewFoodEntry = (ev) => {\r\n        const { selectedMeal, selectedFood, dayEntry, amount } = this.state;\r\n\r\n        if (selectedMeal === null)\r\n            alert(\"Must select a Meal !\");\r\n        else if (selectedFood === null)\r\n            alert(\"Must select a Food Item !\");\r\n        else {\r\n            const amountInput = document.querySelector(\"#amountSize\");\r\n\r\n            if (isNaN(amount)) {\r\n                alert(\"Must Enter Valid Number for Amount!\");\r\n                this.setState({\r\n                    amount: \"\"\r\n                });\r\n                return;\r\n            }\r\n            else {\r\n                const newFoodEntry = selectedFood.state.foodItem;\r\n                newFoodEntry.amount = amount ? amount : amountInput.placeholder;\r\n                newFoodEntry.measure = newFoodEntry.sizeinfo === null ? \"Pieces\" : \"Grams\";\r\n\r\n                selectedMeal.addNewFoodEntry(ev, newFoodEntry);\r\n                for (let m of dayEntry.meals)\r\n                    if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                        || selectedMeal._reactInternalFiber.key == m.key)\r\n                        m.foodentries.push(newFoodEntry);\r\n\r\n                this.setState({\r\n                    dayEntry: dayEntry\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onSelectedFoodChanged = (ev, sender) => {\r\n        const { selectedFood } = this.state;\r\n\r\n        if (sender !== selectedFood) {\r\n            if (selectedFood)\r\n                selectedFood.toggleSelected();\r\n            sender.toggleSelected();\r\n\r\n            this.setState({\r\n                selectedFood: sender,\r\n                amount: \"\"\r\n            });\r\n        }\r\n    };\r\n\r\n    currentEntry = () => {\r\n        const { selectedFood, amount } = this.state;\r\n\r\n        if (selectedFood) {\r\n            const measure = document.querySelector(\"#measureSelect\").value;\r\n            return <FoodEntry foodItem={selectedFood.state.foodItem}\r\n                amount={amount ? amount : (selectedFood.state.foodItem.sizeinfo === null ? 1 : 100)}\r\n                measure={measure}\r\n                key={selectedFood.state.foodItem.foodid.toString() + amount + measure} />\r\n        }\r\n        else\r\n            return <FoodEntry key={null} />\r\n    }\r\n\r\n    onDayButtons = (ev, nrDays) => {\r\n        const { selectedDay } = this.state;\r\n\r\n        let d = new Date(selectedDay);\r\n        d.setDate(d.getDate() + nrDays);\r\n\r\n        this.loadDailyMeals(dateToStr(d));\r\n    }\r\n\r\n    render = () => {\r\n        console.log(\"RENDER TEST:\", this.state.selectedDay);\r\n        const { selectedDay, mealEntries, selectedFood, amount } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainDailyMeals boxShow\">\r\n                <div id=\"dayArea\" className=\"subblock boxShow\">\r\n                    <div className=\"dayHeader\">\r\n                        <div className=\"datepick boxShow\">\r\n                            <label className=\"textHigh\">Day: </label>\r\n                            <button onClick={(ev) => this.onDayButtons(ev, -1)} className=\"ftButton\" > {\"<\"}</button>\r\n                            <input onChange={(ev) => this.loadDailyMeals(ev.currentTarget.value)} id=\"selectedDay\" type=\"date\" value={selectedDay} />\r\n                            <button onClick={(ev) => this.onDayButtons(ev, 1)} className=\"ftButton\">{\">\"}</button>\r\n                        </div>\r\n                        <hr />\r\n                        <Note />\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"mealsArea\">\r\n                        {mealEntries}\r\n                    </div>\r\n                    <div className=\"dayAreaButtons\">\r\n                        <button onClick={this.onCommit} className=\"ftButton\">COMMIT DAY!</button>\r\n                        <button onClick={this.onAddNewMeal} className=\"newMeal ftButton\">NEW MEAL</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"searchArea\" className=\"subblock boxShow\">\r\n                    <div className=\"searchInput boxShow\">\r\n                        <label className=\"textHigh\">Search Food: </label>\r\n                        <input onChange={(ev) => this.loadSFoodItems(document.querySelector(\"#search\").value,\r\n                            ev.currentTarget.checked)}\r\n                            id=\"isAll\" type=\"checkbox\" /> ALL Food\r\n                        <input onChange={(ev) => this.loadSFoodItems(ev.currentTarget.value,\r\n                            document.querySelector(\"#isAll\").checked)}\r\n                            id=\"search\"\r\n                            type=\"text\"\r\n                            placeholder=\"search terms\" />\r\n                    </div>\r\n                    <div className=\"searchResults boxShow\">\r\n                        {this.state.sFoodItems}\r\n                    </div>\r\n                    <div className=\"amountInput boxShow\">{/*<<<<<<<<<<<<<<<<<<<AMOUNT*/}\r\n                        <label className=\"textHigh\">Amount: </label>\r\n                        <input id=\"amountSize\" type=\"text\" value={amount}\r\n                            onChange={(ev) => this.setState({ amount: ev.currentTarget.value })}\r\n                            placeholder={selectedFood\r\n                                ? (selectedFood.state.foodItem.sizeinfo === null ? 1 : 100)\r\n                                : 0} />\r\n                        <select id=\"measureSelect\" value={selectedFood\r\n                            ? selectedFood.state.foodItem.sizeinfo === null ? \"Pieces\" : \"Grams\"\r\n                            : \"---\"}\r\n                            readOnly={true}>\r\n                            <option className={selectedFood\r\n                                ? selectedFood.state.foodItem.sizeinfo === null ? \"hidden\" : \"\"\r\n                                : \"hidden\"}>\r\n                                Grams</option>\r\n                            <option className={selectedFood\r\n                                ? selectedFood.state.foodItem.sizeinfo === 0 ? \"hidden\" : \"\"\r\n                                : \"hidden\"}>\r\n                                Pieces</option>\r\n                            <option className=\"hidden\">---</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"searchEntry boxShow\">\r\n                        <label className=\"textHigh lineDown\">Current Entry:</label>\r\n                        {this.currentEntry()}\r\n                        <button onClick={this.onAddNewFoodEntry} className=\"ftButton\">ADD TO MEAL</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                    <div className=\"foodDetailsHeader\">\r\n                        <div className=\"textHigh boxShow\">cottage cheese @delaco</div>\r\n                        <hr />\r\n                        <Note />\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"foodPic boxShow\">\r\n                        <img src=\"FoodPics/cottage cheese @delaco.jpg\" alt=\"[NO FOOD PIC]\" />\r\n                    </div>\r\n                    <div className=\"foodInfo\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr><th>Name</th><td colSpan=\"2\">Cottage Cheese</td></tr>\r\n                                <tr><th>Brand</th><td colSpan=\"2\">Delaco</td></tr>\r\n                                <tr><th>Macro</th><th>100g</th><th>1(175g)</th></tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr><td>Fat</td><td>4.5g</td><td>7.9g</td></tr>\r\n                                <tr><td>Carbs</td><td>2g</td><td>3.5g</td></tr>\r\n                                <tr><td>Protein</td><td>12g</td><td>21g</td></tr>\r\n                                <tr><td>Calories</td><td>96.5Kc</td><td>169.1Kc</td></tr>\r\n                                <tr><td>Price</td><td>2.57Lei</td><td>4.5Lei</td></tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"buffer\"></div>\r\n                        <div className=\"foodEntries boxShow\">\r\n                            <label className=\"textHigh lineDown\">Composition:</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        document.querySelector(\"#selectedDay\").value = this.state.selectedDay;\r\n    };\r\n}\r\n\r\nexport default DailyMeals;","import React from 'react';\r\n\r\nconst YourFood = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR FOOD!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourFood;","import React from 'react';\r\n\r\nconst YourPlans = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR PLANS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourPlans;","import React from 'react';\r\n\r\nconst YourStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourStats;","import React from 'react';\r\n\r\nconst GlobalStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalStats;","import React from 'react';\r\n\r\nconst GlobalData = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL DATA!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalData;","import React from 'react';\r\nimport \"../Css/RegLog.css\"; //TODO: Replace somehow! (this is just copy/pasted from register)\r\nimport { app } from '../App';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: app.state.currentUser\r\n        };\r\n    }\r\n\r\n    render = () => {    //TODO: Replace somehow! (this is just copy/pasted from register)\r\n        const { user } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <div id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">User Profile !</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: {user.username}</span>\r\n                        <span>Email: {user.email}</span>\r\n                        <span>First Name: {user.firstname}</span>\r\n                        <span>Last Name: {user.lastname}</span>\r\n                        <span>Date Of Birth: {user.dob}</span>\r\n                        <span>Sex: {user.sex===\"1\"?\"Male\":\"Female\"}</span>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src={`UserPics/${user.pic}`} alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea readOnly={true} value={user.describe}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Meal Plans: {user.defaultmeals}</span>\r\n                        <span>Diet Plans? </span>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\nimport { app } from '../App';\r\nimport svData from '../svData.json';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nconst getServerURL = () => {\r\n    return svData.serverLink;\r\n}\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            warningMsg: null\r\n        };\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        try {\r\n            ev.preventDefault();\r\n            const inputs = document.querySelectorAll(\"#logform input\");\r\n            const usernameText = inputs[0].value;\r\n            const passText = inputs[1].value;\r\n\r\n            let res = await fetch(getServerURL() + \"/login\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: usernameText,\r\n                    pass: passText\r\n                })\r\n            });\r\n            if (res.status === 200) {\r\n                res = await res.json();\r\n                if (typeof res === \"string\")\r\n                    this.setState({\r\n                        warningMsg: res\r\n                    });\r\n                else {\r\n                    app.updateUser(res);\r\n                    app.changeMainPage(\"Profile\");\r\n                }\r\n            }\r\n            else {\r\n                console.log(await res.json());\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"___________ERROR___________\\n\", err.message);\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onLogin} id=\"logform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Enter Username/Email and Password to Login!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username/Email: </span><input type=\"text\" name=\"username\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span>Remember Me? <input type=\"checkbox\" name=\"member\" /></span>\r\n                        <span className={this.state.warningMsg === null ? \"hidden\" : \"warning\"}>{this.state.warningMsg}</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"loglinks\">\r\n                        <NavLink to=\"/\">Forgot Password?</NavLink>\r\n                        <NavLink to=\"/Register\">New here? Go Register!</NavLink>\r\n                    </div>\r\n                    */}\r\n                    <div className=\"loglinks\">\r\n                        <span onClick={() => app.changeMainPage(\"Home\")}>Forgot Password?</span>\r\n                        <span onClick={() => app.changeMainPage(\"Register\")}>New here? Go Register!</span>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\n\r\nclass Register extends React.Component {\r\n\r\n    onRegister = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onClick={this.onRegister} id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Please Complete ALL fields to Register!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: </span><input type=\"text\" name=\"username\" />\r\n                        <span className=\"warning\">How DARE You, Sir!</span>\r\n                        <span>Email:</span> <input type=\"email\" name=\"email\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span className=\"detail\">Password must be at least 6characters long and have both numbers and letters!</span>\r\n                        <span>Confirm Password: </span><input type=\"password\" name=\"cpass\" />\r\n                        <span>First Name: </span><input type=\"text\" name=\"firstname\" />\r\n                        <span>Last Name: </span><input type=\"text\" name=\"lastname\" />\r\n                        <span>Date Of Birth: </span><input type=\"date\" name=\"dob\" />\r\n                        <div>\r\n                            <span>Sex: </span><input type=\"radio\" name=\"sex\" value=\"male\" /><span>Male </span>\r\n                            <input type=\"radio\" name=\"sex\" value=\"female\" /><span>Female</span>\r\n                        </div>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src=\"UserPics/profileEmpty.png\" alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea placeholder=\"Say who you are in a few short phrases..\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Diet Plans?</span>\r\n                        <select>\r\n                            <option>Paleo</option>\r\n                            <option>Keto</option>\r\n                            <option>Mediterranian</option>\r\n                            <option>Vegan</option>\r\n                            <option>Carnivore</option>\r\n                            <option>Low Carb</option>\r\n                            <option>Low Fat</option>\r\n                            <option>PSMF</option>\r\n                        </select>\r\n                        <span className=\"detail\">-Pick a Diet from list if any of them apply to You - Can always change it later!</span>\r\n                        <span className=\"detail\">(This Choice is simply for tracking stats - Will Not affect results &recommendations)</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>Error! Page does not exist!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Error;","//import { Route, Switch } from 'react-router-dom';\r\n//\r\n//const Main = () => {\r\n//    return (\r\n//        <Switch>\r\n//            <Route path=\"/\" component={Home} exact/>\r\n//            <Route path=\"/DailyMeals\" component={DailyMeals} />\r\n//            <Route path=\"/YourFood\" component={YourFood} />\r\n//            <Route path=\"/YourPlans\" component={YourPlans} />\r\n//            <Route path=\"/YourStats\" component={YourStats} />\r\n//            <Route path=\"/GlobalStats\" component={GlobalStats} />\r\n//            <Route path=\"/GlobalData\" component={GlobalData} />\r\n//            <Route path=\"/Login\" component={Login} />\r\n//            <Route path=\"/Register\" component={Register} />\r\n//            <Route component={Error} />\r\n//        </Switch>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\n\r\nimport Home from \"../MainPages/Home\";\r\nimport DailyMeals from '../MainPages/DailyMeals';\r\nimport YourFood from '../MainPages/YourFood';\r\nimport YourPlans from '../MainPages/YourPlans';\r\nimport YourStats from '../MainPages/YourStats';\r\nimport GlobalStats from '../MainPages/GlobalStats';\r\nimport GlobalData from '../MainPages/GlobalData';\r\nimport Profile from '../MainPages/Profile';\r\nimport Login from '../MainPages/Login';\r\nimport Register from '../MainPages/Register';\r\nimport Error from '../MainPages/Error';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: props.page ? props.page : \"Home\"\r\n        };\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { page } = this.state;\r\n\r\n        if (page !== newPage)\r\n            this.setState({\r\n                page: newPage\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        switch (this.state.page) {\r\n            case \"Home\":\r\n                return <Home />;\r\n            case \"DailyMeals\":\r\n                return <DailyMeals />;\r\n            case \"YourFood\":\r\n                return <YourFood />;\r\n            case \"YourPlans\":\r\n                return <YourPlans />;\r\n            case \"YourStats\":\r\n                return <YourStats />;\r\n            case \"GlobalStats\":\r\n                return <GlobalStats />;\r\n            case \"GlobalData\":\r\n                return <GlobalData />;\r\n            case \"Profile\":\r\n                return <Profile />;\r\n            case \"Register\":\r\n                return <Register />;\r\n            case \"Login\":\r\n                return <Login />;\r\n            default:\r\n                return <Error />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"subblock boxShow\">\r\n                <h3 id=\"author\">--Made by Rotariu Stefan<sub> - StravoS</sub></h3>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Sections/Header';\r\nimport Nav from './Sections/Nav';\r\nimport Main from './Sections/Main';\r\nimport Footer from './Sections/Footer';\r\n\r\nconst refs = {\r\n    main: React.createRef(),\r\n    footer: React.createRef(),\r\n    header: React.createRef(),\r\n    nav: React.createRef()\r\n};\r\n\r\nlet app = null;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultUser = {\r\n            userid: 0,\r\n            username: \"Guest\",\r\n            email: \"guest@nomail.none\",\r\n            firstname: \"John\",\r\n            lastname: \"Doe\",\r\n            dob: new Date(),\r\n            sex: 1,\r\n            describe: \"placeholder\",\r\n            pic: \"profileEmpty.png\",\r\n            default_meals: 'Breakfast,Lunch,Dinner',\r\n            access: \"Guest\"\r\n        };\r\n\r\n        this.state = {\r\n            currentUser: this.defaultUser\r\n        };\r\n        app = this;\r\n    }\r\n\r\n    updateUser = (res) => {\r\n        const { defaultUser } = this;\r\n\r\n        if (res === null) {\r\n            this.setState({\r\n                currentUser: defaultUser\r\n            });\r\n            refs.header.current.updateUser(false, defaultUser.username, defaultUser.pic);\r\n        }\r\n        else {\r\n            this.setState({\r\n                currentUser: res\r\n            });\r\n            refs.header.current.updateUser(true, res.username, res.pic);\r\n        }\r\n    };\r\n\r\n    changeMainPage = (newPage) => refs.main.current.changePage(newPage);\r\n\r\n    render = () => {\r\n        return (\r\n            [\r\n                <Header ref={refs.header} key=\"H\" />,\r\n                <Nav ref={refs.nav} key=\"N\" />,\r\n                <Main ref={refs.main} page=\"DailyMeals\" key=\"M\" />,\r\n                <Footer ref={refs.footer} key=\"F\" />\r\n            ]\r\n        );\r\n    };\r\n}\r\n\r\nexport { App, app };","//import { BrowserRouter } from 'react-router-dom';\r\n//\r\n//ReactDOM.render(\r\n//    <BrowserRouter>\r\n//        <Header />\r\n//        <Nav />\r\n//        <Main />\r\n//        <Footer />\r\n//    </BrowserRouter>,\r\n//    document.querySelector(\"#root\"));\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector(\"#root\"));"],"sourceRoot":""}