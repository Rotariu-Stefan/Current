{"version":3,"sources":["Sections/Header.js","Sections/Nav.js","MainPages/Home.js","Components/FoodEntry.js","Components/Note.js","Components/MealEntry.js","Components/FoodItem.js","MainPages/DailyMeals.js","MainPages/YourFood.js","MainPages/YourPlans.js","MainPages/YourStats.js","MainPages/GlobalStats.js","MainPages/GlobalData.js","MainPages/Profile.js","MainPages/Login.js","MainPages/Register.js","MainPages/Error.js","Sections/Main.js","Sections/Footer.js","App.js","index.js"],"names":["Header","props","updateUser","newIsLogged","newUsername","newPic","setState","isLogged","username","pic","onLogClick","state","app","changeMainPage","render","className","src","alt","onClick","id","defaultUser","React","Component","Nav","Home","FoodEntry","foodEntry","getMacroRes","mstr","amount","measure","toFixed","fatRes","carbsRes","proteinRes","foodname","brand","fat","carbs","protein","foodItem","defaultFoodEntry","addToMeal","entryid","foodid","sizeinfo","userid","price","isdish","noteid","Note","note","score","title","text","isEdit","MealEntry","addNewFoodEntry","ev","newFoodEntry","foodEntries","foodCounter","push","addNewFoodEntryMacros","key","toggleHighlight","isHighlighted","toggleMinMax","isMin","stopPropagation","newfat","newcarbs","newprotein","portion","mealEntry","mealname","selectedChanged","removeMeal","componentDidMount","signalSelect","defaultMealEntry","foodentries","f","FoodItem","toggleSelected","isSelected","defaultFoodItem","getServerURL","svData","serverLink","dateToStr","dateObj","getFullYear","getMonth","toString","getDate","DailyMeals","loadDailyMeals","day","a","mealEntries","mealCounter","userId","currentUser","fetch","method","headers","res","json","first","meals","m","onSelectedMealChanged","onRemoveMeal","selectedDay","dayEntry","loadSFoodItems","searchTerms","isAll","sFoodItems","sFoodCounter","onSelectedFoodChanged","selectedFood","onCommit","dayPutReq","date","body","JSON","stringify","alert","console","log","onAddNewMeal","selectedMeal","sender","filter","mealid","_reactInternalFiber","meal","onAddNewFoodEntry","amountInput","document","querySelector","isNaN","placeholder","select","composition","activeElement","selectedFoodDetails","currentEntry","value","onDayButtons","nrDays","d","Date","setDate","onSearchKey","preventDefault","i","length","querySelectorAll","click","onAmountKey","onChange","currentTarget","type","checked","onKeyDown","colSpan","YourFood","YourPlans","YourStats","GlobalStats","GlobalData","Profile","user","email","firstname","lastname","dob","sex","readOnly","describe","defaultmeals","Login","onLogin","inputs","usernameText","passText","pass","status","warningMsg","message","onSubmit","name","Register","onRegister","Error","Main","changePage","newPage","page","Footer","refs","main","createRef","footer","header","nav","App","current","ref","default_meals","access","ReactDOM"],"mappings":"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","file":"static/js/main.d0e30416.chunk.js","sourcesContent":["//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Header = () => {\r\n//    return (\r\n//        <header className=\"subblock boxShow\">\r\n//            <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n//            <div id=\"titleArea\">\r\n//                <NavLink to=\"/\">\r\n//                    <h1 id=\"title\">FoodTracker</h1>\r\n//                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n//                </NavLink>\r\n//            </div>\r\n//            <div id=\"profileArea\" className=\"boxShow\">\r\n//                <NavLink to=\"/Login\">\r\n//                    Guest<br />\r\n//                    <img src=\"SitePics/profileEmpty.png\" alt=\"[NO PIC]\" />\r\n//                </NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Register\">Register</NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Login\">Login</NavLink>\r\n//            </div>\r\n//        </header>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\nimport { app } from '../App';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            username: app.defaultUser.username,\r\n            pic: app.defaultUser.pic\r\n        };\r\n    }\r\n\r\n    updateUser = (newIsLogged, newUsername, newPic) => {\r\n        this.setState({\r\n            isLogged: newIsLogged,\r\n            username: newUsername,\r\n            pic: newPic\r\n        });\r\n    }\r\n\r\n    onLogClick = () => {\r\n        const { isLogged } = this.state;\r\n\r\n        if (isLogged) {\r\n            app.updateUser(null);\r\n            app.changeMainPage(\"Home\");\r\n        }\r\n        else\r\n            app.changeMainPage(\"Login\");\r\n    }\r\n\r\n    render = () => {\r\n        const { isLogged, username, pic } = this.state;\r\n\r\n        return (\r\n            <header className=\"subblock boxShow\">\r\n                <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n                <div onClick={() => app.changeMainPage(\"Home\")} id=\"titleArea\">\r\n                    <h1 id=\"title\">FoodTracker</h1>\r\n                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n                </div>\r\n                <div id=\"profileArea\" className=\"boxShow\">\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n                        {username}\r\n                        <br />\r\n                        <img src={`UserPics/${pic}`} alt=\"[NO PIC]\" />\r\n                    </span>\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")} className=\"navlink\">\r\n                        {isLogged ? \"Profile\" : \"Register\"}\r\n                    </span>\r\n                    <span onClick={this.onLogClick} className=\"navlink\">\r\n                        {isLogged ? \"Logout\" : \"Login\"}\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Nav = () => {\r\n//    return (\r\n//        <nav className=\"subblock boxShow\">\r\n//            <NavLink className=\"navlink textHigh\" to=\"/DailyMeals\">Daily Meals</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourFood\">Your Food</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourPlans\">Your Plans</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourStats\">Your Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalStats\">Global Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalData\">Global Data</NavLink>\r\n//        </nav>\r\n//    );\r\n//}\r\n\r\nclass Nav extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <nav className=\"subblock boxShow\">\r\n                <span onClick={() => app.changeMainPage(\"DailyMeals\")} className=\"navlink textHigh\">Daily Meals</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourFood\")} className=\"navlink textHigh\">Your Food</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourPlans\")} className=\"navlink textHigh\">Your Plans</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourStats\")} className=\"navlink textHigh\">Your Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalStats\")} className=\"navlink textHigh\">Global Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalData\")} className=\"navlink textHigh\">Global Data</span>\r\n            </nav>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>WELCOME HOME!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass FoodEntry extends React.Component {\r\n    static defaultFoodEntry = {\r\n        entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nobody\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: null, price: 0,\r\n        isdish: false,\r\n        noteid: null,\r\n        amount: 1,\r\n        measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let foodEntry;\r\n        if (props.foodEntry)\r\n            foodEntry = props.foodEntry;\r\n        else if (props.foodItem) {\r\n            foodEntry = props.foodItem;\r\n            foodEntry.amount = props.amount;\r\n            foodEntry.measure = props.measure;\r\n        }\r\n        else\r\n            foodEntry = FoodEntry.defaultFoodEntry;\r\n\r\n        this.state = {\r\n            foodEntry: foodEntry\r\n        };\r\n\r\n        this.state.fatRes = this.getMacroRes(\"fat\");\r\n        this.state.carbsRes = this.getMacroRes(\"carbs\");\r\n        this.state.proteinRes = this.getMacroRes(\"protein\");\r\n\r\n        if (this.props.addToMeal)\r\n            this.props.addToMeal(this.state.fatRes, this.state.carbsRes, this.state.proteinRes);\r\n    }\r\n\r\n    getMacroRes = (mstr) => {\r\n        const { amount, measure } = this.state.foodEntry;\r\n        return (this.state.foodEntry[mstr] * amount / (measure === \"Pieces\" ? 1 : 100)).toFixed(1);\r\n    };\r\n\r\n    render = () => {\r\n        const { foodEntry, fatRes, carbsRes, proteinRes } = this.state;\r\n        const { foodname, brand, amount, fat, carbs, protein } = foodEntry;\r\n\r\n        return (\r\n            <div className=\"foodEntry lineDown\">\r\n                <span className=\"amount\">{amount}</span>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"macroRes\">{`${fatRes}/${carbsRes}/${proteinRes}`}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FoodEntry;","import React from \"react\";\r\n\r\nclass Note extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEdit: false\r\n        };\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render = () => {\r\n        if (this.props.note) {\r\n            const { score, title, text } = this.props.note;\r\n\r\n            return (\r\n                <div className=\"note boxShow\">\r\n                    <img src=\"SitePics/starX.png\" alt={\"S=\" + (score ? score : 0)} />\r\n                    <div>\r\n                        <span>{title ? title : \"Untitled\"}</span>\r\n                        <span>{text ? text : \"[Empty]\"}</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                \"No Note\"//Add Note Button\r\n        );\r\n    }\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport FoodEntry from './FoodEntry';\r\nimport Note from './Note';\r\n\r\nclass MealEntry extends React.Component {\r\n    static defaultMealEntry = {\r\n        mealname: \"New Meal\",\r\n        portion: 1,\r\n        noteid: null,\r\n        foodentries: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mealEntry: props.mealEntry ? props.mealEntry : MealEntry.defaultMealEntry,\r\n            foodEntries: [],\r\n            foodCounter: 0,\r\n            isHighlighted: false,\r\n            isMin: false,\r\n            fat: 0,\r\n            carbs: 0,\r\n            protein: 0\r\n        };\r\n\r\n        if (props.mealEntry)\r\n            for (let f of props.mealEntry.foodentries) {\r\n                this.state.foodEntries.push(<FoodEntry\r\n                    foodEntry={f}\r\n                    addToMeal={this.addNewFoodEntryMacros}\r\n                    key={this.state.foodCounter} />);\r\n                this.state.foodCounter++;\r\n            }\r\n    }\r\n\r\n    addNewFoodEntry = (ev, newFoodEntry) => {\r\n        const { foodEntries } = this.state;\r\n        let { foodCounter } = this.state;\r\n\r\n        foodEntries.push(<FoodEntry foodEntry={newFoodEntry} addToMeal={this.addNewFoodEntryMacros} key={foodCounter++} />);\r\n\r\n        this.setState({\r\n            foodEntries: foodEntries,\r\n            foodCounter: foodCounter,\r\n            fat: this.state.fat,\r\n            carbs: this.state.carbs,\r\n            protein: this.state.protein\r\n        });\r\n    };\r\n\r\n    toggleHighlight = () => this.setState({\r\n        isHighlighted: !this.state.isHighlighted\r\n    });\r\n\r\n    toggleMinMax = (ev) => {\r\n        this.setState({\r\n            isMin: !this.state.isMin\r\n        });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    addNewFoodEntryMacros = (newfat, newcarbs, newprotein) => {\r\n        const { portion } = this.state.mealEntry;\r\n\r\n        this.state.fat += newfat * portion;\r\n        this.state.carbs += newcarbs * portion;\r\n        this.state.protein += newprotein * portion;\r\n    };\r\n\r\n    render = () => {\r\n        const { mealEntry, isHighlighted, isMin, foodEntries, fat, carbs, protein } = this.state;\r\n        const { mealname, note } = mealEntry;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"mealArea boxShow\" + (isHighlighted ? \" highlight\" : \"\")}>\r\n                <div className=\"mealTitle\">\r\n                    {mealname}\r\n                    <img onClick={(ev) => this.props.removeMeal(ev, this)} src=\"PLACEHOLDER DROPDOWN\" alt=\"X\" />\r\n                    <img onClick={this.toggleMinMax} src=\"PLACEHOLDER DROPDOWN\" alt={isMin ? \"+\" : \"-\"} />\r\n                </div>\r\n                <hr />\r\n                <Note note={note} />\r\n                <hr />\r\n                <div className={\"foodEntries lineDown\" + (isMin ? \" hidden\" : \"\")}>\r\n                    {foodEntries}\r\n                </div>\r\n                <div className=\"mealTotal\">\r\n                    <span>Total:</span>\r\n                    <span>{`${fat.toFixed(1)}//${carbs.toFixed(1)}//${protein.toFixed(1)}`}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n        else\r\n            this.setState({});\r\n    };\r\n}\r\n\r\nexport default MealEntry;","import React from 'react';\r\n\r\nclass FoodItem extends React.Component {\r\n    static defaultFoodItem = {\r\n        entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nowhere\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: \"empty.png\", price: 0,\r\n        isdish: false,\r\n        noteid: null,\r\n        measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            foodItem: (props.foodItem) ? props.foodItem : this.defaultFoodItem,\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { foodItem, isSelected } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, sizeinfo } = foodItem;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"foodItem lineDown\" + (isSelected ? \" feSelected\" : \"\")}>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"per\">{sizeinfo === null ? `1` : `100g`}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default FoodItem;","import React from 'react';\r\nimport \"../Css/DailyMeals.css\";\r\n\r\nimport MealEntry from '../Components/MealEntry';\r\nimport FoodEntry from '../Components/FoodEntry';\r\nimport FoodItem from '../Components/FoodItem';\r\nimport Note from '../Components/Note';\r\nimport { app } from '../App';\r\nimport svData from '../svData.json';\r\n\r\nconst getServerURL = () => {\r\n    return svData.serverLink;\r\n    //return \"http://localhost:3001\";\r\n}\r\n\r\nconst dateToStr = (dateObj) => {\r\n    return `${dateObj.getFullYear()}-${dateObj.getMonth() + 1 > 9 ? (dateObj.getMonth() + 1).toString() : \"0\" + (dateObj.getMonth() + 1).toString()}-${dateObj.getDate() > 9 ? dateObj.getDate().toString() : \"0\" + dateObj.getDate().toString()}`;\r\n};\r\n\r\nclass DailyMeals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDay: dateToStr(new Date()),\r\n            dayEntry: {},\r\n            mealEntries: [],\r\n            selectedMeal: null,\r\n            mealCounter: 0,\r\n            sFoodItems: [],\r\n            selectedFood: null,\r\n            sFoodCounter: 0,\r\n            selectedFoodDetails: null,\r\n            amount: \"\",\r\n            measure: \"---\",\r\n            composition: []\r\n        };\r\n\r\n        //; (async () => {\r\n        this.loadDailyMeals(this.state.selectedDay);\r\n        this.loadSFoodItems(\"\", false);\r\n        //})();\r\n    }\r\n\r\n    loadDailyMeals = async (day) => {\r\n        let { mealEntries, mealCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res = await fetch(getServerURL() + \"/dailymeals\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"reqdate\": day,\r\n                \"userid\": userId,\r\n            }\r\n        });\r\n        res = await res.json();\r\n\r\n        mealEntries = [];\r\n        let first = true;\r\n        for (let m of res.meals)\r\n            if (!first)\r\n                mealEntries.push(<MealEntry\r\n                    selectedChanged={this.onSelectedMealChanged}\r\n                    removeMeal={this.onRemoveMeal}\r\n                    mealEntry={m}\r\n                    key={mealCounter++} />);\r\n            else {\r\n                mealEntries.push(<MealEntry\r\n                    signalSelect={true}\r\n                    selectedChanged={this.onSelectedMealChanged}\r\n                    removeMeal={this.onRemoveMeal}\r\n                    mealEntry={m}\r\n                    key={mealCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            selectedDay: day,\r\n            dayEntry: res,\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter\r\n        });\r\n    }\r\n\r\n    loadSFoodItems = async (searchTerms, isAll) => {\r\n        let { sFoodItems, sFoodCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res;\r\n        res = await fetch(getServerURL() + \"/dailymeals/foodsearch\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"userid\": userId,\r\n                \"search\": searchTerms,\r\n                \"isall\": isAll\r\n            }\r\n        });\r\n        res = await res.json();\r\n\r\n\r\n        sFoodItems = [];\r\n        let first = true;\r\n        for (let f of res)\r\n            if (!first)\r\n                sFoodItems.push(<FoodItem\r\n                    selectedChanged={this.onSelectedFoodChanged}\r\n                    foodItem={f}\r\n                    key={sFoodCounter++} />);\r\n            else {\r\n                sFoodItems.push(<FoodItem\r\n                    signalSelect={true}\r\n                    selectedChanged={this.onSelectedFoodChanged}\r\n                    foodItem={f}\r\n                    key={sFoodCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            selectedFood: first ? null : this.state.selectedFood,\r\n            measure: first ? \"---\" : this.state.measure,\r\n            sFoodItems: sFoodItems,\r\n            sFoodCounter: sFoodCounter\r\n        });\r\n    };\r\n\r\n    onCommit = async (ev) => {\r\n        const { dayEntry, selectedDay } = this.state;\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        const dayPutReq = dayEntry;\r\n        dayPutReq.userid = userId;\r\n        dayPutReq.date = selectedDay;\r\n\r\n        let res = await fetch(getServerURL() + \"/dailymeals\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(dayPutReq)\r\n        });\r\n        res = await res.json();\r\n        alert(`Successfully entered date for day ${selectedDay}!\\n --You can view resulting entry in the console`);\r\n        console.log(res);\r\n    };\r\n\r\n    onAddNewMeal = (ev) => {    //TODO\r\n        const { mealEntries, dayEntry, selectedMeal } = this.state;\r\n        let { mealCounter } = this.state;\r\n\r\n        if (selectedMeal)\r\n            mealEntries.push(<MealEntry\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n        else\r\n            mealEntries.push(<MealEntry\r\n                signalSelect={true}\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n\r\n        dayEntry.meals.push({       //TODO: Must make Custamizable\r\n            key: mealCounter - 1,\r\n            mealname: \"New Meal\",\r\n            portion: 1,\r\n            noteid: null,\r\n            foodentries: []\r\n        });\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter,\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    onRemoveMeal = (ev, sender) => {\r\n        const { selectedMeal, mealEntries, dayEntry } = this.state;\r\n\r\n        dayEntry.meals = dayEntry.meals.filter((m) => !((m.mealid && m.mealid === sender.state.mealEntry.mealid)\r\n            || m.key == sender._reactInternalFiber.key));\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries.filter((meal) => meal.key !== sender._reactInternalFiber.key),\r\n            dayEntry: dayEntry\r\n        });\r\n\r\n\r\n        if (selectedMeal !== null && selectedMeal === sender)\r\n            this.setState({\r\n                selectedMeal: null\r\n            });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    onSelectedMealChanged = (ev, sender) => {\r\n        const { selectedMeal } = this.state;\r\n\r\n        if (sender !== selectedMeal) {\r\n            if (selectedMeal)\r\n                selectedMeal.toggleHighlight();\r\n            sender.toggleHighlight();\r\n\r\n            this.setState({\r\n                selectedMeal: sender\r\n            });\r\n        }\r\n    };\r\n\r\n    onAddNewFoodEntry = (ev) => {\r\n        const { selectedMeal, selectedFood, dayEntry, amount } = this.state;\r\n\r\n        if (selectedMeal === null)\r\n            alert(\"Must select a Meal !\");\r\n        else if (selectedFood === null)\r\n            alert(\"Must select a Food Item !\");\r\n        else {\r\n            const amountInput = document.querySelector(\"#amountSize\");\r\n\r\n            if (isNaN(amount)) {\r\n                alert(\"Must Enter Valid Number for Amount!\");\r\n                this.setState({\r\n                    amount: \"\"\r\n                });\r\n                return;\r\n            }\r\n            else {\r\n                const newFoodEntry = selectedFood.state.foodItem;\r\n                newFoodEntry.amount = amount ? amount : amountInput.placeholder;\r\n                newFoodEntry.measure = newFoodEntry.sizeinfo === null ? \"Pieces\" : \"Grams\";\r\n\r\n                selectedMeal.addNewFoodEntry(ev, newFoodEntry);\r\n                for (let m of dayEntry.meals)\r\n                    if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                        || selectedMeal._reactInternalFiber.key == m.key)\r\n                        m.foodentries.push(newFoodEntry);\r\n\r\n                this.setState({\r\n                    dayEntry: dayEntry\r\n                });\r\n            }\r\n            document.querySelector(\"#search\").select();\r\n        }\r\n    };\r\n\r\n    onSelectedFoodChanged = async (ev, sender) => {\r\n        const { selectedFood } = this.state;\r\n        let { sFoodCounter, composition } = this.state;\r\n        const { foodid, isdish, noteid } = sender.state.foodItem;\r\n\r\n        if (sender !== selectedFood) {\r\n            if (selectedFood)\r\n                selectedFood.toggleSelected();\r\n            sender.toggleSelected();\r\n            if (document.activeElement !== document.querySelector(\"#search\"))\r\n                document.querySelector(\"#search\").select();\r\n\r\n            let res = await fetch(getServerURL() + \"/dailymeals/fooddetails\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"foodid\": foodid,\r\n                    \"isdish\": isdish,\r\n                    \"noteid\": noteid ? noteid : null\r\n                }\r\n            });\r\n            res = await res.json();            \r\n\r\n            composition = [];\r\n            if (res.foodentries) {     \r\n                for (let f of res.foodentries)\r\n                    composition.push(<FoodEntry\r\n                        foodEntry={f}\r\n                        key={sFoodCounter++} />);\r\n            }\r\n\r\n            this.setState({\r\n                selectedFood: sender,\r\n                selectedFoodDetails: res,\r\n                sFoodCounter: sFoodCounter,\r\n                composition: composition,\r\n                amount: \"\",\r\n                measure: sender.state.foodItem.sizeinfo === null ? \"Pieces\" : \"Grams\"\r\n            });\r\n        }\r\n    };\r\n\r\n    currentEntry = () => {\r\n        const { selectedFood, amount } = this.state;\r\n\r\n        if (selectedFood) {\r\n            const measure = document.querySelector(\"#measureSelect\").value;\r\n            return <FoodEntry foodItem={selectedFood.state.foodItem}\r\n                amount={amount ? amount : (selectedFood.state.foodItem.sizeinfo === null ? 1 : 100)}\r\n                measure={measure}\r\n                key={selectedFood.state.foodItem.foodid.toString() + amount + measure} />\r\n        }\r\n        else\r\n            return <FoodEntry key={null} />\r\n    }\r\n\r\n    onDayButtons = (ev, nrDays) => {\r\n        const { selectedDay } = this.state;\r\n\r\n        let d = new Date(selectedDay);\r\n        d.setDate(d.getDate() + nrDays);\r\n\r\n        this.loadDailyMeals(dateToStr(d));\r\n    }\r\n\r\n    onSearchKey = (ev) => {\r\n        const { selectedFood, sFoodItems } = this.state;\r\n\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#amountSize\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#search\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === 0)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i - 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === sFoodItems.length - 1)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i + 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onAmountKey = (ev) => {\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#search\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#amountSize\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":     //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":   //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };//TODO?\r\n\r\n    render = () => {\r\n        const { selectedDay, mealEntries, selectedFood, amount, measure, dayEntry, selectedFoodDetails, composition } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, price, pic } = selectedFood ? selectedFood.state.foodItem : FoodItem.defaultFoodItem;\r\n\r\n        return (\r\n            <main className=\"mainDailyMeals boxShow\">\r\n                <div id=\"dayArea\" className=\"subblock boxShow\">\r\n                    <div className=\"dayHeader\">\r\n                        <div className=\"datepick boxShow\">\r\n                            <label className=\"textHigh\">Day: </label>\r\n                            <button onClick={(ev) => this.onDayButtons(ev, -1)} className=\"ftButton\" > {\"<\"}</button>\r\n                            <input onChange={(ev) => this.loadDailyMeals(ev.currentTarget.value)} id=\"selectedDay\" type=\"date\" value={selectedDay} />\r\n                            <button onClick={(ev) => this.onDayButtons(ev, 1)} className=\"ftButton\">{\">\"}</button>\r\n                        </div>\r\n                        <hr />\r\n                        <Note note={dayEntry.note} />\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"mealsArea\">\r\n                        {mealEntries}\r\n                    </div>\r\n                    <div className=\"dayAreaButtons\">\r\n                        <button onClick={this.onCommit} className=\"ftButton\">COMMIT DAY!</button>\r\n                        <button onClick={this.onAddNewMeal} className=\"newMeal ftButton\">NEW MEAL</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"searchArea\" className=\"subblock boxShow\">\r\n                    <div className=\"searchInput boxShow\">\r\n                        <label className=\"textHigh\">Search Food: </label>\r\n                        <input onChange={(ev) => this.loadSFoodItems(\r\n                            document.querySelector(\"#search\").value,\r\n                            ev.currentTarget.checked)}\r\n                            id=\"isAll\" type=\"checkbox\" />\r\n                        ALL Food\r\n                        <input onChange={(ev) => this.loadSFoodItems(\r\n                            ev.currentTarget.value,\r\n                            document.querySelector(\"#isAll\").checked)}\r\n                            onKeyDown={this.onSearchKey}\r\n                            id=\"search\" type=\"text\"\r\n                            placeholder=\"search terms\" />\r\n                    </div>\r\n                    <div className=\"searchResults boxShow\">\r\n                        {this.state.sFoodItems}\r\n                    </div>\r\n                    <div className=\"amountInput boxShow\">\r\n                        <label className=\"textHigh\">Amount: </label>\r\n                        <input id=\"amountSize\" type=\"text\" value={amount}\r\n                            onChange={(ev) => this.setState({ amount: ev.currentTarget.value })}\r\n                            onKeyDown={this.onAmountKey}\r\n                            placeholder={selectedFood ? (measure === \"Pieces\" ? 1 : 100) : 0} />\r\n                        <select id=\"measureSelect\" value={measure} onChange={() => { }}>\r\n                            <option className={selectedFood ? measure === \"Grams\" ? \"\" : \"hidden\" : \"hidden\"}>\r\n                                Grams</option>\r\n                            <option className={selectedFood ? measure === \"Pieces\" ? \"\" : \"hidden\" : \"hidden\"}>\r\n                                Pieces</option>\r\n                            <option className=\"hidden\">---</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"searchEntry boxShow\">\r\n                        <label className=\"textHigh lineDown\">Current Entry:</label>\r\n                        {this.currentEntry()}\r\n                        <button onClick={this.onAddNewFoodEntry} className=\"ftButton\">ADD TO MEAL</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                    <div className=\"foodDetailsHeader\">\r\n                        <div className=\"textHigh boxShow\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</div>\r\n                        <hr />\r\n                        <Note note={selectedFood ? selectedFoodDetails.note : null} />\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"foodPic boxShow\">\r\n                        <img src={`FoodPics/${pic ? pic : \"empty.png\"}`} alt=\"[NO FOOD PIC]\" />\r\n                    </div>\r\n                    <div className=\"foodInfo\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr><th>Name</th><td colSpan=\"2\">{foodname}</td></tr>\r\n                                <tr><th>Brand</th><td colSpan=\"2\">{brand ? brand : \"--\"}</td></tr>\r\n                                <tr><th>Macro</th><th>100g</th><th>1p</th></tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr><td>Fat</td>\r\n                                    <td>{measure === \"Grams\" ? fat + \"g\" : \"--\"}</td>\r\n                                    <td>{measure === \"Pieces\" ? fat + \"g\" : \"--\"}</td></tr>\r\n                                <tr><td>Carbs</td>\r\n                                    <td>{measure === \"Grams\" ? carbs + \"g\" : \"--\"}</td>\r\n                                    <td>{measure === \"Pieces\" ? carbs + \"g\" : \"--\"}</td></tr>\r\n                                <tr><td>Protein</td>\r\n                                    <td>{measure === \"Grams\" ? protein + \"g\" : \"--\"}</td>\r\n                                    <td>{measure === \"Pieces\" ? protein + \"g\" : \"--\"}</td></tr>\r\n                                <tr><td>Calories</td>\r\n                                    <td>{measure === \"Grams\" ? (fat * 9 + protein * 4 + carbs * 4).toFixed(1)\r\n                                        + \"Kc\" : \"--\"}</td>\r\n                                    <td>{measure === \"Pieces\" ? (fat * 9 + protein * 4 + carbs * 4).toFixed(1)\r\n                                        + \"Kc\" : \"--\"}</td></tr>\r\n                                <tr><td>Price</td>\r\n                                    <td>{measure === \"Grams\" ? price + \"Lei\" : \"--\"}</td>\r\n                                    <td>{measure === \"Pieces\" ? price + \"Lei\" : \"--\"}</td></tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"buffer\"></div>\r\n                        <div className=\"foodEntries boxShow\">\r\n                            <label className=\"textHigh lineDown\">Composition:</label>\r\n                            {composition}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DailyMeals;","import React from 'react';\r\n\r\nconst YourFood = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR FOOD!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourFood;","import React from 'react';\r\n\r\nconst YourPlans = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR PLANS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourPlans;","import React from 'react';\r\n\r\nconst YourStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourStats;","import React from 'react';\r\n\r\nconst GlobalStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalStats;","import React from 'react';\r\n\r\nconst GlobalData = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL DATA!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalData;","import React from 'react';\r\nimport \"../Css/RegLog.css\"; //TODO: Replace somehow! (this is just copy/pasted from register)\r\nimport { app } from '../App';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: app.state.currentUser\r\n        };\r\n    }\r\n\r\n    render = () => {    //TODO: Replace somehow! (this is just copy/pasted from register)\r\n        const { user } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <div id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">User Profile !</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: {user.username}</span>\r\n                        <span>Email: {user.email}</span>\r\n                        <span>First Name: {user.firstname}</span>\r\n                        <span>Last Name: {user.lastname}</span>\r\n                        <span>Date Of Birth: {user.dob}</span>\r\n                        <span>Sex: {user.sex===\"1\"?\"Male\":\"Female\"}</span>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src={`UserPics/${user.pic}`} alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea readOnly={true} value={user.describe}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Meal Plans: {user.defaultmeals}</span>\r\n                        <span>Diet Plans? </span>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\nimport { app } from '../App';\r\nimport svData from '../svData.json';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nconst getServerURL = () => {\r\n    return svData.serverLink;\r\n    //return \"http://localhost:3001\";\r\n}\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            warningMsg: null\r\n        };\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        try {\r\n            ev.preventDefault();\r\n            const inputs = document.querySelectorAll(\"#logform input\");\r\n            const usernameText = inputs[0].value;\r\n            const passText = inputs[1].value;\r\n\r\n            let res = await fetch(getServerURL() + \"/login\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: usernameText,\r\n                    pass: passText\r\n                })\r\n            });\r\n            if (res.status === 200) {\r\n                res = await res.json();\r\n                if (typeof res === \"string\")\r\n                    this.setState({\r\n                        warningMsg: res\r\n                    });\r\n                else {\r\n                    app.updateUser(res);\r\n                    app.changeMainPage(\"Profile\");\r\n                }\r\n            }\r\n            else {\r\n                console.log(await res.json());\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"___________ERROR___________\\n\", err.message);\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onLogin} id=\"logform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Enter Username/Email and Password to Login!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username/Email: </span><input type=\"text\" name=\"username\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span>Remember Me? <input type=\"checkbox\" name=\"member\" /></span>\r\n                        <span className={this.state.warningMsg === null ? \"hidden\" : \"warning\"}>{this.state.warningMsg}</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"loglinks\">\r\n                        <NavLink to=\"/\">Forgot Password?</NavLink>\r\n                        <NavLink to=\"/Register\">New here? Go Register!</NavLink>\r\n                    </div>\r\n                    */}\r\n                    <div className=\"loglinks\">\r\n                        <span onClick={() => app.changeMainPage(\"Home\")}>Forgot Password?</span>\r\n                        <span onClick={() => app.changeMainPage(\"Register\")}>New here? Go Register!</span>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\n\r\nclass Register extends React.Component {\r\n\r\n    onRegister = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onClick={this.onRegister} id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Please Complete ALL fields to Register!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: </span><input type=\"text\" name=\"username\" />\r\n                        <span className=\"warning\">How DARE You, Sir!</span>\r\n                        <span>Email:</span> <input type=\"email\" name=\"email\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span className=\"detail\">Password must be at least 6characters long and have both numbers and letters!</span>\r\n                        <span>Confirm Password: </span><input type=\"password\" name=\"cpass\" />\r\n                        <span>First Name: </span><input type=\"text\" name=\"firstname\" />\r\n                        <span>Last Name: </span><input type=\"text\" name=\"lastname\" />\r\n                        <span>Date Of Birth: </span><input type=\"date\" name=\"dob\" />\r\n                        <div>\r\n                            <span>Sex: </span><input type=\"radio\" name=\"sex\" value=\"male\" /><span>Male </span>\r\n                            <input type=\"radio\" name=\"sex\" value=\"female\" /><span>Female</span>\r\n                        </div>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src=\"UserPics/profileEmpty.png\" alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea placeholder=\"Say who you are in a few short phrases..\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Diet Plans?</span>\r\n                        <select>\r\n                            <option>Paleo</option>\r\n                            <option>Keto</option>\r\n                            <option>Mediterranian</option>\r\n                            <option>Vegan</option>\r\n                            <option>Carnivore</option>\r\n                            <option>Low Carb</option>\r\n                            <option>Low Fat</option>\r\n                            <option>PSMF</option>\r\n                        </select>\r\n                        <span className=\"detail\">-Pick a Diet from list if any of them apply to You - Can always change it later!</span>\r\n                        <span className=\"detail\">(This Choice is simply for tracking stats - Will Not affect results &recommendations)</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>Error! Page does not exist!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Error;","//import { Route, Switch } from 'react-router-dom';\r\n//\r\n//const Main = () => {\r\n//    return (\r\n//        <Switch>\r\n//            <Route path=\"/\" component={Home} exact/>\r\n//            <Route path=\"/DailyMeals\" component={DailyMeals} />\r\n//            <Route path=\"/YourFood\" component={YourFood} />\r\n//            <Route path=\"/YourPlans\" component={YourPlans} />\r\n//            <Route path=\"/YourStats\" component={YourStats} />\r\n//            <Route path=\"/GlobalStats\" component={GlobalStats} />\r\n//            <Route path=\"/GlobalData\" component={GlobalData} />\r\n//            <Route path=\"/Login\" component={Login} />\r\n//            <Route path=\"/Register\" component={Register} />\r\n//            <Route component={Error} />\r\n//        </Switch>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\n\r\nimport Home from \"../MainPages/Home\";\r\nimport DailyMeals from '../MainPages/DailyMeals';\r\nimport YourFood from '../MainPages/YourFood';\r\nimport YourPlans from '../MainPages/YourPlans';\r\nimport YourStats from '../MainPages/YourStats';\r\nimport GlobalStats from '../MainPages/GlobalStats';\r\nimport GlobalData from '../MainPages/GlobalData';\r\nimport Profile from '../MainPages/Profile';\r\nimport Login from '../MainPages/Login';\r\nimport Register from '../MainPages/Register';\r\nimport Error from '../MainPages/Error';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: props.page ? props.page : \"Home\"\r\n        };\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { page } = this.state;\r\n\r\n        if (page !== newPage)\r\n            this.setState({\r\n                page: newPage\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        switch (this.state.page) {\r\n            case \"Home\":\r\n                return <Home />;\r\n            case \"DailyMeals\":\r\n                return <DailyMeals />;\r\n            case \"YourFood\":\r\n                return <YourFood />;\r\n            case \"YourPlans\":\r\n                return <YourPlans />;\r\n            case \"YourStats\":\r\n                return <YourStats />;\r\n            case \"GlobalStats\":\r\n                return <GlobalStats />;\r\n            case \"GlobalData\":\r\n                return <GlobalData />;\r\n            case \"Profile\":\r\n                return <Profile />;\r\n            case \"Register\":\r\n                return <Register />;\r\n            case \"Login\":\r\n                return <Login />;\r\n            default:\r\n                return <Error />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"subblock boxShow\">\r\n                <h3 id=\"author\">--Made by Rotariu Stefan<sub> - StravoS</sub></h3>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Sections/Header';\r\nimport Nav from './Sections/Nav';\r\nimport Main from './Sections/Main';\r\nimport Footer from './Sections/Footer';\r\n\r\nconst refs = {\r\n    main: React.createRef(),\r\n    footer: React.createRef(),\r\n    header: React.createRef(),\r\n    nav: React.createRef()\r\n};\r\n\r\nlet app = null;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultUser = {\r\n            userid: 0,\r\n            username: \"Guest\",\r\n            email: \"guest@nomail.none\",\r\n            firstname: \"John\",\r\n            lastname: \"Doe\",\r\n            dob: new Date(),\r\n            sex: 1,\r\n            describe: \"placeholder\",\r\n            pic: \"profileEmpty.png\",\r\n            default_meals: 'Breakfast,Lunch,Dinner',\r\n            access: \"Guest\"\r\n        };\r\n\r\n        this.state = {\r\n            currentUser: this.defaultUser\r\n        };\r\n        app = this;\r\n    }\r\n\r\n    updateUser = (res) => {\r\n        const { defaultUser } = this;\r\n\r\n        if (res === null) {\r\n            this.setState({\r\n                currentUser: defaultUser\r\n            });\r\n            refs.header.current.updateUser(false, defaultUser.username, defaultUser.pic);\r\n        }\r\n        else {\r\n            this.setState({\r\n                currentUser: res\r\n            });\r\n            refs.header.current.updateUser(true, res.username, res.pic);\r\n        }\r\n    };\r\n\r\n    changeMainPage = (newPage) => refs.main.current.changePage(newPage);\r\n\r\n    render = () => {\r\n        return (\r\n            [\r\n                <Header ref={refs.header} key=\"H\" />,\r\n                <Nav ref={refs.nav} key=\"N\" />,\r\n                <Main ref={refs.main} page=\"DailyMeals\" key=\"M\" />,\r\n                <Footer ref={refs.footer} key=\"F\" />\r\n            ]\r\n        );\r\n    };\r\n}\r\n\r\nexport { App, app };","//import { BrowserRouter } from 'react-router-dom';\r\n//\r\n//ReactDOM.render(\r\n//    <BrowserRouter>\r\n//        <Header />\r\n//        <Nav />\r\n//        <Main />\r\n//        <Footer />\r\n//    </BrowserRouter>,\r\n//    document.querySelector(\"#root\"));\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector(\"#root\"));"],"sourceRoot":""}