{"version":3,"sources":["Sections/Header.js","Sections/Nav.js","MainPages/Home.js","Components/FoodEntry.js","Components/NoteView.js","Components/Note.js","Components/MealEntry.js","Components/FoodItem.js","MainPages/DailyMeals.js","MainPages/YourFood.js","MainPages/YourPlans.js","MainPages/YourStats.js","MainPages/GlobalStats.js","MainPages/GlobalData.js","MainPages/Profile.js","MainPages/Login.js","MainPages/Register.js","MainPages/Error.js","Sections/Main.js","Sections/Footer.js","App.js","index.js"],"names":["Header","props","updateUser","newIsLogged","newUsername","newPic","setState","isLogged","username","pic","onLogClick","state","app","changeMainPage","render","className","src","alt","onClick","id","defaultUser","React","Component","Nav","Home","FoodEntry","foodEntry","getMacroRes","mstr","amount","measure","sizeinfo","toFixed","fatRes","carbsRes","proteinRes","foodname","brand","fat","carbs","protein","componentDidMount","addToMeal","foodItem","defaultFoodEntry","foodid","userid","price","isdish","note","NoteView","toggleSelected","isSelected","score","title","notetext","ev","selectedChanged","signalSelect","Note","onEditAddNote","isValues","isEdit","isEditValues","loadNoteViews","searchTerms","noteViews","noteViewsIsLoading","searchCounter","sc","setTimeout","searchNoteViews","a","noteViewCounter","userId","currentUser","fetch","getServerURL","method","headers","res","json","first","n","push","onSelectedNoteViewChanged","key","sender","selectedNoteView","setNote","newScore","newTitle","newText","updateAttach","isMin","onChange","type","name","_reactInternalFiber","value","checked","currentTarget","defaultValue","options","removeNote","i","MealEntry","addNewFoodEntry","newFoodEntry","foodEntries","foodCounter","addNewFoodEntryMacros","toggleHighlight","isHighlighted","toggleMinMax","stopPropagation","onUpdateAttach","newNote","mealEntry","dayEntry","onRemoveNote","console","log","updateDay","newfat","newcarbs","newprotein","portion","addToDay","mealname","removeMeal","defaultMealEntry","foodentries","f","FoodItem","defaultFoodItem","dateToStr","dateObj","getFullYear","getMonth","toString","getDate","DailyMeals","loadDailyMeals","day","mealEntries","selectedMeal","mealareaIsLoading","dayFat","dayCarbs","dayProtein","mealCounter","meals","m","onSelectedMealChanged","onRemoveMeal","updateSelectedMealNote","selectedDay","loadSFoodItems","isAll","sFoodItems","searchareaIsLoading","xx","sFoodCounter","onSelectedFoodChanged","selectedFood","onCommit","dayPutReq","date","body","JSON","stringify","alert","onAddNewMeal","newFoodForm","newMPortion","document","querySelector","isNaN","newMName","newMeal","placeholder","noteid","select","filter","mealid","undefined","meal","newcarb","onAddNewFoodEntry","newFoodItem","sum","Number","activeElement","selectedFoodDetails","composition","currentEntry","newFoodKey","changeNewFoodValue","field","aux","psi","disabled","onDayButtons","nrDays","d","Date","setDate","onSearchKey","preventDefault","length","querySelectorAll","click","onAmountKey","onKeyDown","colSpan","YourFood","YourPlans","YourStats","GlobalStats","GlobalData","Profile","user","email","firstname","lastname","dob","sex","readOnly","describe","defaultmeals","Login","onLogin","inputs","usernameText","passText","pass","status","warningMsg","message","onSubmit","Register","onRegister","Error","Main","changePage","newPage","page","Footer","refs","main","createRef","footer","header","nav","App","svData","serverLink","current","ref","default_meals","access","ReactDOM"],"mappings":"wUAoFeA,E,kDAxDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,WAAa,SAACC,EAAaC,EAAaC,GACpC,EAAKC,SAAS,CACVC,SAAUJ,EACVK,SAAUJ,EACVK,IAAKJ,KAbM,EAiBnBK,WAAa,WACY,EAAKC,MAAlBJ,UAGJK,EAAIV,WAAW,MACfU,EAAIC,eAAe,SAGnBD,EAAIC,eAAe,UAzBR,EA4BnBC,OAAS,WAAO,IAAD,EACyB,EAAKH,MAAjCJ,EADG,EACHA,SAAUC,EADP,EACOA,SAAUC,EADjB,EACiBA,IAE5B,OACI,4BAAQM,UAAU,oBACd,yBAAKC,IAAI,oBAAoBC,IAAI,YAAYF,UAAU,SACvD,yBAAKG,QAAS,kBAAMN,EAAIC,eAAe,SAASM,GAAG,aAC/C,wBAAIA,GAAG,SAAP,eACA,wBAAIA,GAAG,YAAP,iEAEJ,yBAAKA,GAAG,cAAcJ,UAAU,WAC5B,0BAAMG,QAAS,kBAAMN,EAAIC,eAAeN,EAAW,UAAY,cAC1DC,EACD,6BACA,yBAAKQ,IAAG,mBAAcP,GAAOQ,IAAI,cAErC,0BAAMC,QAAS,kBAAMN,EAAIC,eAAeN,EAAW,UAAY,aAAaQ,UAAU,WACjFR,EAAW,UAAY,YAE5B,0BAAMW,QAAS,EAAKR,WAAYK,UAAU,WACrCR,EAAW,SAAW,YA9CvC,EAAKI,MAAQ,CACTJ,UAAU,EACVC,SAAUI,EAAIQ,YAAYZ,SAC1BC,IAAKG,EAAIQ,YAAYX,KALV,E,UADFY,IAAMC,WCMZC,E,4MAdXT,OAAS,WACL,OACI,yBAAKC,UAAU,oBACX,0BAAMG,QAAS,kBAAMN,EAAIC,eAAe,eAAeE,UAAU,oBAAjE,eADJ,IAEA,0BAAMG,QAAS,kBAAMN,EAAIC,eAAe,aAAaE,UAAU,oBAA/D,aAFA,IAGA,0BAAMG,QAAS,kBAAMN,EAAIC,eAAe,cAAcE,UAAU,oBAAhE,cAHA,IAIA,0BAAMG,QAAS,kBAAMN,EAAIC,eAAe,cAAcE,UAAU,oBAAhE,cAJA,IAKA,0BAAMG,QAAS,kBAAMN,EAAIC,eAAe,gBAAgBE,UAAU,oBAAlE,gBALA,IAMA,0BAAMG,QAAS,kBAAMN,EAAIC,eAAe,eAAeE,UAAU,oBAAjE,iB,YATMM,IAAMC,WCNTE,EAVF,WACT,OACI,0BAAMT,UAAU,WACZ,yBAAKA,UAAU,YACX,gD,6CCJVU,E,kDAcF,WAAYxB,GAAQ,IAAD,EAGXyB,EAHW,4BACf,cAAMzB,IAsBV0B,YAAc,SAACC,GAAU,IAAD,EACkB,EAAKjB,MAAMe,UAAzCG,EADY,EACZA,OAAQC,EADI,EACJA,QAASC,EADL,EACKA,SACzB,MAAgB,WAAZD,EACiB,OAAbC,GACQ,EAAKpB,MAAMe,UAAUE,GAAQC,GAAQG,QAAQ,IAE7C,EAAKrB,MAAMe,UAAUE,GAAQC,EAASE,EAAW,KAAKC,QAAQ,GAEzD,UAAZF,GACG,EAAKnB,MAAMe,UAAUE,GAAQC,EAAS,KAAKG,QAAQ,QAD1D,GA/BU,EAmCnBlB,OAAS,WAAO,IAAD,EACyC,EAAKH,MAAjDe,EADG,EACHA,UAAWO,EADR,EACQA,OAAQC,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,WAC7BC,EAAiDV,EAAjDU,SAAUC,EAAuCX,EAAvCW,MAAOR,EAAgCH,EAAhCG,OAAQS,EAAwBZ,EAAxBY,IAAKC,EAAmBb,EAAnBa,MAAOC,EAAYd,EAAZc,QAE7C,OACI,yBAAKzB,UAAW,aAAe,EAAKd,MAAMc,WACtC,0BAAMA,UAAU,UAAUc,GAC1B,0BAAMd,UAAU,cAAhB,UAAiCqB,EAAjC,YAA6CC,EAAQ,IAAMA,EAAQ,KACnE,0BAAMtB,UAAU,SAAhB,UAA4BuB,EAA5B,YAAmCC,EAAnC,YAA4CC,IAC5C,0BAAMzB,UAAU,YAAhB,UAA+BkB,EAA/B,YAAyCC,EAAzC,YAAqDC,MA5C9C,EAkDnBM,kBAAoB,WAAO,IAAD,EACmB,EAAK9B,MAAtCsB,EADc,EACdA,OAAQC,EADM,EACNA,SAAUC,EADJ,EACIA,WAEtB,EAAKlC,MAAMyC,WACX,EAAKzC,MAAMyC,UAAUT,EAAQC,EAAUC,IAlDvClC,EAAMyB,UACNA,EAAYzB,EAAMyB,UACbzB,EAAM0C,WACXjB,EAAYzB,EAAM0C,UACRd,OAAS5B,EAAM4B,OACzBH,EAAUI,QAAU7B,EAAM6B,SAG1BJ,EAAS,eAAQD,EAAUmB,kBAE/B,EAAKjC,MAAQ,CACTe,UAAWA,GAGf,EAAKf,MAAMsB,OAAS,EAAKN,YAAY,OACrC,EAAKhB,MAAMuB,SAAW,EAAKP,YAAY,SACvC,EAAKhB,MAAMwB,WAAa,EAAKR,YAAY,WApB1B,E,UAdCN,IAAMC,WAAxBG,EACKmB,iBAAmB,CAEtBC,OAAQ,EACRT,SAAU,UACVC,MAAO,SACPC,IAAK,EAAGC,MAAO,EAAGC,QAAS,EAC3BT,SAAU,KAAMe,OAAQ,EAAGrC,IAAK,KAAMsC,MAAO,EAC7CC,QAAQ,EACRC,KAAM,KACNpB,OAAQ,EACRC,QAAS,UA8DFL,QCvCAyB,E,kDAjCX,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAQVkD,eAAiB,kBAAM,EAAK7C,SAAS,CACjC8C,YAAa,EAAKzC,MAAMyC,cAVT,EAanBtC,OAAS,WAAO,IAAD,EACkB,EAAKH,MAA1ByC,EADG,EACHA,WAAYH,EADT,EACSA,KACZI,EAA2BJ,EAA3BI,MAAOC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAEtB,OACI,yBAAKrC,QAAS,SAACsC,GAAD,OAAM,EAAKvD,MAAMwD,gBAAgBD,EAA3B,iBAAqCzC,UAAW,oBAAsBqC,EAAa,aAAe,KAClH,yBAAKpC,IAAI,qBAAqBC,IAAK,KAAQoC,IAC3C,8BAAOC,GACP,8BAAO,MAAQC,GAAsB,cArB9B,EA2BnBd,kBAAoB,WACZ,EAAKxC,MAAMyD,cACX,EAAKzD,MAAMwD,gBAAgB,KAA3B,iBA1BJ,EAAK9C,MAAQ,CACTsC,KAAMhD,EAAMgD,KACZG,YAAY,GALD,E,UADA/B,IAAMC,WCmMdqC,E,kDAhMX,WAAY1D,GAAQ,IAAD,uBACf,cAAMA,IAuBV2D,cAAgB,SAACC,GACTA,EACA,EAAKvD,SAAS,CACVwD,QAAQ,EACRC,cAAc,KAGlB,EAAKzD,SAAS,CACVwD,QAAQ,EACRC,cAAc,IAElB,EAAKC,cAAc,MAnCR,EAuCnBA,cAAgB,SAACC,GACb,EAAK3D,SAAS,CACV4D,UAAW,GACXC,oBAAoB,EACpBC,cAAe,EAAKzD,MAAMyD,cAAgB,IAE9C,IAAMC,EAAK,EAAK1D,MAAMyD,cAAgB,EAEtCE,YAAW,kBAAM,EAAKC,gBAAgBN,EAAaI,KAAK,MA/CzC,EAkDnBE,gBAlDmB,uCAkDD,WAAON,EAAaG,GAApB,6BAAAI,EAAA,2DACVJ,EAAgB,EAAKzD,MAAMyD,eADjB,wDAIRK,EAAoB,EAAK9D,MAAzB8D,gBAEAC,EAA0C,IAAjC9D,EAAID,MAAMgE,YAAY7B,OAAe,EAAIlC,EAAID,MAAMgE,YAAY7B,OANhE,SAQE8B,MAAMhE,EAAIiE,eAAiB,yBAA0B,CACjEC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,OAAUL,EACV,OAAUT,KAbJ,cAQVe,EARU,gBAgBFA,EAAIC,OAhBF,UAgBdD,EAhBc,SAiBVZ,EAAgB,EAAKzD,MAAMyD,eAjBjB,mDAoBRF,EAAY,GACdgB,GAAQ,EArBE,cAsBAF,GAtBA,IAsBd,2BAASG,EAAT,QACSD,GAGDhB,EAAUkB,KAAK,kBAAC,EAAD,CAAUnC,KAAMkC,EAAGzB,cAAc,EAAMD,gBAAiB,EAAK4B,0BAA2BC,IAAKb,OAC5GS,GAAQ,GAHRhB,EAAUkB,KAAK,kBAAC,EAAD,CAAUnC,KAAMkC,EAAG1B,gBAAiB,EAAK4B,0BAA2BC,IAAKb,OAxBlF,8BA8Bd,EAAKnE,SAAS,CACV4D,UAAWA,EACXO,gBAAiBA,EACjBN,oBAAoB,IAjCV,4CAlDC,0DAuFnBkB,0BAA4B,SAAC7B,EAAI+B,GAAY,IACjCC,EAAqB,EAAK7E,MAA1B6E,iBAEJD,IAAWC,IACPA,GACAA,EAAiBrC,iBACrBoC,EAAOpC,iBAEP,EAAK7C,SAAS,CACVkF,iBAAkBD,MAhGX,EAqGnBE,QAAU,WAAO,IAAD,EAC0C,EAAK9E,MAAnDoD,EADI,EACJA,aAAc2B,EADV,EACUA,SAAUC,EADpB,EACoBA,SAAUC,EAD9B,EAC8BA,QAEtC7B,GACA,EAAK9D,MAAM4F,aAAa,CACpBxC,MAAOqC,EACPpC,MAAoB,KAAbqC,EAAkB,WAAaA,EACtCpC,SAAUqC,IAEd,EAAKtF,SAAS,CACV2C,KAAM,CACFI,MAAOqC,EACPpC,MAAoB,KAAbqC,EAAkB,WAAaA,EACtCpC,SAAUqC,GAEd9B,QAAQ,MAIZ,EAAK7D,MAAM4F,aAAa,EAAKlF,MAAM6E,iBAAiB7E,MAAMsC,MAC1D,EAAK3C,SAAS,CACV2C,KAAM,EAAKtC,MAAM6E,iBAAiB7E,MAAMsC,KACxCa,QAAQ,MA3HD,EAgInBhD,OAAS,WAAO,IAAD,EAC2D,EAAKH,MAAnEmD,EADG,EACHA,OAAQC,EADL,EACKA,aAAcd,EADnB,EACmBA,KAAMiB,EADzB,EACyBA,UAAWC,EADpC,EACoCA,mBAC/C,GAAI,EAAKlE,MAAM6F,MACX,OAAO,6BAEX,GAAIhC,EACA,OACI,yBAAK/C,UAAU,oBACX,yBAAKA,UAAU,eACX,2BAAOgF,SAAU,SAACvC,GAAD,OAAQ,EAAKI,eAAc,IAAQoC,KAAK,QAAQC,KAAM,EAAKC,oBAAoBZ,IAAM,SAAUa,MAAM,SAASC,SAAUrC,IAD7I,SAEA,2BAAOgC,SAAU,SAACvC,GAAD,OAAQ,EAAKI,eAAc,IAAOoC,KAAK,QAAQC,KAAM,EAAKC,oBAAoBZ,IAAM,SAAUa,MAAM,SAASC,QAASrC,IAFvI,SAGA,4BAAQ7C,QAAS,WAAQ,EAAKZ,SAAS,CAAEwD,QAAQ,MAAjD,WAECC,EACK,yBAAKhD,UAAU,WACb,wCACA,6BACI,4BAAQgF,SAAU,SAACvC,GAAD,OAAQ,EAAKlD,SAAS,CACpCoF,SAAUlC,EAAG6C,cAAcF,SAC3BG,aAAc,GACb,EAAKC,SAEV,4BAAQrF,QAAS,EAAKuE,SAAtB,iBAEJ,wCAAmB,2BAAOM,SAAU,SAACvC,GAAD,OAAQ,EAAKlD,SAAS,CAAEqF,SAAUnC,EAAG6C,cAAcF,SAAUH,KAAK,SACtG,uCAAkB,8BAAUD,SAAU,SAACvC,GAAD,OAAQ,EAAKlD,SAAS,CAAEsF,QAASpC,EAAG6C,cAAcF,YAE1F,6BACE,yBAAKpF,UAAU,cAAf,UACW,2BAAOgF,SAAU,SAACvC,GAAD,OAAQ,EAAKQ,cAAcR,EAAG6C,cAAcF,QAAQH,KAAK,SACjF,4BAAQ9E,QAAS,EAAKuE,SAAtB,gBAEJ,yBAAK1E,UAAU,kBACVoD,EAAqB,aAAeD,KAOzD,GAAIjB,EAAM,CAAC,IACCI,EAA2BJ,EAA3BI,MAAOC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAEtB,OACI,yBAAKxC,UAAU,gBACX,yBAAKC,IAAI,oBAAoBC,IAAK,KAAQoC,EAAQtC,UAAU,aAC5D,yBAAKG,QAAS,EAAKjB,MAAMuG,WAAYxF,IAAI,sCACrCC,IAAI,IAAIF,UAAU,eACtB,yBAAKG,QAAS,kBAAM,EAAK0C,eAAc,IAAO5C,IAAI,8BAC9CC,IAAI,MAAMF,UAAU,eACxB,0BAAMA,UAAU,SAASuC,GACzB,0BAAMvC,UAAU,YAAYwC,EAAW,KAAOA,EAAW,KAKjE,OACI,yBAAKxC,UAAU,gBAAf,UACW,yBAAKA,UAAU,aAAaC,IAAI,8BAA8BC,IAAI,MAAMC,QAAS,EAAK0C,kBAvL7G,EAAKjD,MAAQ,CACTsC,KAAMhD,EAAMgD,KAEZa,QAAQ,EACRC,cAAc,EAEdyB,iBAAkB,KAClBtB,UAAW,GACXC,oBAAoB,EACpBM,gBAAiB,EACjBL,cAAe,EAEfsB,SAAU,EACVC,SAAU,GACVC,QAAS,IAEb,EAAKW,QAAU,GACf,IAAK,IAAIE,GAAK,EAAGA,GAAK,EAAGA,IACrB,EAAKF,QAAQnB,KAAK,4BAAQE,IAAKmB,GAAIA,IArBxB,S,UADJpF,IAAMC,WCAnBoF,E,kDAQF,WAAYzG,GAAQ,IAAD,EAcf,GAde,qBACf,cAAMA,IAwBV0G,gBAAkB,SAACnD,EAAIoD,GAAkB,IAC7BC,EAAgB,EAAKlG,MAArBkG,YACFC,EAAgB,EAAKnG,MAArBmG,YAEND,EAAYzB,KAAK,kBAAC,EAAD,CAAW1D,UAAWkF,EAAclE,UAAW,EAAKqE,sBAAuBzB,IAAKwB,IAAe/F,UAAU,cAE1H,EAAKT,SAAS,CACVuG,YAAaA,EACbC,YAAaA,KAjCF,EAqCnBE,gBAAkB,kBAAM,EAAK1G,SAAS,CAClC2G,eAAgB,EAAKtG,MAAMsG,iBAtCZ,EAyCnBC,aAAe,SAAC1D,GACZ,EAAKlD,SAAS,CACVwF,OAAQ,EAAKnF,MAAMmF,QAEvBtC,EAAG2D,mBA7CY,EAgDnBC,eAAiB,SAACC,GAAa,IACnBC,EAAc,EAAK3G,MAAnB2G,UAERA,EAAUrE,KAAOoE,EACjB,EAAK/G,SAAS,CACViH,SAAUD,KArDC,EAyDnBE,aAAe,WACXC,QAAQC,IAAI,SADK,IAETJ,EAAc,EAAK3G,MAAnB2G,UAERA,EAAUrE,KAAO,KACjB,EAAK3C,SAAS,CACVgH,UAAWA,IAEf,EAAKrH,MAAM0H,aAjEI,EAoEnBZ,sBAAwB,SAACa,EAAQC,EAAUC,GAAgB,IAC/CC,EAAY,EAAKpH,MAAM2G,UAAvBS,QAER,EAAKpH,MAAM2B,KAAOsF,EAASG,EAC3B,EAAKpH,MAAM4B,OAASsF,EAAWE,EAC/B,EAAKpH,MAAM6B,SAAWsF,EAAaC,EACnC,EAAKzH,SAAS,IAEd,EAAKL,MAAM+H,SAASJ,EAASG,EAASF,EAAWE,EAASD,EAAaC,IA5ExD,EA+EnBjH,OAAS,WAAO,IAAD,EACmE,EAAKH,MAA3E2G,EADG,EACHA,UAAWL,EADR,EACQA,cAAenB,EADvB,EACuBA,MAAOe,EAD9B,EAC8BA,YAAavE,EAD3C,EAC2CA,IAAKC,EADhD,EACgDA,MAAOC,EADvD,EACuDA,QAC1DyF,EAA4BX,EAA5BW,SAAUhF,EAAkBqE,EAAlBrE,KAAM8E,EAAYT,EAAZS,QAExB,OACI,yBAAK7G,QAAS,SAACsC,GAAD,OAAQ,EAAKvD,MAAMwD,gBAAgBD,EAA3B,iBAClBzC,UAAW,oBAAsBkG,EAAgB,aAAe,KAChE,yBAAKlG,UAAU,aAAf,UACQkH,EADR,cACsBF,EADtB,KAEI,yBAAK7G,QAAS,SAACsC,GAAD,OAAQ,EAAKvD,MAAMiI,WAAW1E,EAAtB,iBAAiCxC,IAAI,gCAAgCC,IAAI,IAC3FF,UAAU,eACd,yBAAKG,QAAS,EAAKgG,aAAclG,IAAK8E,EAAQ,8BAAgC,+BAAgC7E,IAAK6E,EAAQ,IAAM,IAC7H/E,UAAU,gBAElB,kBAAC,EAAD,CAAMyF,WAAY,EAAKgB,aAAc3B,aAAc,EAAKuB,eAAgBnE,KAAMA,EAC1EqC,IAAK,EAAKY,oBAAoBZ,KAAOrC,EAAO,QAAU,KAAM6C,MAAOA,IACvE,yBAAK/E,UAAW,wBAA0B+E,EAAQ,UAAY,KACzDe,GAEL,yBAAK9F,UAAU,aACX,6CACA,wCAAUuB,EAAIN,QAAQ,GAAtB,YAA4BO,EAAMP,QAAQ,GAA1C,YAAgDQ,EAAQR,QAAQ,QApG7D,EA0GnBS,kBAAoB,WACZ,EAAKxC,MAAMyD,aACX,EAAKzD,MAAMwD,gBAAgB,KAA3B,gBAEA,EAAKnD,SAAS,KA3GlB,EAAKK,MAAQ,CACT2G,UAAWrH,EAAMqH,UAAYrH,EAAMqH,UAAxB,eAAyCZ,EAAUyB,kBAC9DtB,YAAa,GACbC,YAAa,EACbG,eAAe,EACfnB,OAAO,EACPxD,IAAK,EACLC,MAAO,EACPC,QAAS,GAGTvC,EAAMqH,UAAV,qBACkBrH,EAAMqH,UAAUc,aADlC,IACI,2BAA2C,CAAC,IAAnCC,EAAkC,QACvC,EAAK1H,MAAMkG,YAAYzB,KAAK,kBAAC,EAAD,CACxB1D,UAAW2G,EACXtH,UAAU,WACV2B,UAAW,EAAKqE,sBAChBzB,IAAK,EAAK3E,MAAMmG,eACpB,EAAKnG,MAAMmG,eAPnB,+BAde,S,UARCzF,IAAMC,WAAxBoF,EACKyB,iBAAmB,CACtBF,SAAU,WACVF,QAAS,EACT9E,KAAM,KACNmF,YAAa,IAqHN1B,QC5HT4B,E,kDAaF,WAAYrI,GAAQ,IAAD,8BACf,cAAMA,IAQVkD,eAAiB,kBAAM,EAAK7C,SAAS,CACjC8C,YAAa,EAAKzC,MAAMyC,cAVT,EAanBtC,OAAS,WAAO,IAAD,EACsB,EAAKH,MAA9BgC,EADG,EACHA,SAAUS,EADP,EACOA,WACVhB,EAAmDO,EAAnDP,SAAUC,EAAyCM,EAAzCN,MAAOC,EAAkCK,EAAlCL,IAAKC,EAA6BI,EAA7BJ,MAAOC,EAAsBG,EAAtBH,QAAST,EAAaY,EAAbZ,SAE9C,OACI,yBAAKb,QAAS,SAACsC,GAAD,OAAQ,EAAKvD,MAAMwD,gBAAgBD,EAA3B,iBAClBzC,UAAW,qBAAuBqC,EAAa,cAAgB,KAC/D,0BAAMrC,UAAU,cAAhB,UAAiCqB,EAAjC,YAA6CC,EAAQ,IAAMA,EAAQ,KACnE,0BAAMtB,UAAU,SAAhB,UAA4BuB,EAA5B,YAAmCC,EAAnC,YAA4CC,IAC5C,0BAAMzB,UAAU,OAAoB,OAAbgB,EAAA,cAtBhB,EA2BnBU,kBAAoB,WACZ,EAAKxC,MAAMyD,cACX,EAAKzD,MAAMwD,gBAAgB,KAA3B,iBA1BJ,EAAK9C,MAAQ,CACTgC,SAAW1C,EAAM0C,SAAY1C,EAAM0C,SAAzB,eAAyC2F,EAASC,iBAC5DnF,YAAY,GALD,E,UAbA/B,IAAMC,WAAvBgH,EACKC,gBAAkB,CAErB1F,OAAQ,EACRT,SAAU,UACVC,MAAO,UACPC,IAAK,EAAGC,MAAO,EAAGC,QAAS,EAC3BT,SAAU,KAAMe,OAAQ,EAAGrC,IAAK,YAAasC,MAAO,EACpDC,QAAQ,EACRC,KAAM,MAqCCqF,QCvCTE,EAAY,SAACC,GACf,MAAM,GAAN,OAAUA,EAAQC,cAAlB,YAAmCD,EAAQE,WAAa,EAAI,GAAKF,EAAQE,WAAa,GAAGC,WAAa,KAAOH,EAAQE,WAAa,GAAGC,WAArI,YAAmJH,EAAQI,UAAY,EAAIJ,EAAQI,UAAUD,WAAa,IAAMH,EAAQI,UAAUD,aA+tBvNE,E,kDA3tBX,WAAY7I,GAAQ,IAAD,8BACf,cAAMA,IA4CV8I,eAAiB,SAACC,GACd,EAAK1I,SAAS,CACV2I,YAAa,GACbC,aAAc,KACdC,mBAAmB,EACnBC,OAAQ,EACRC,SAAU,EACVC,WAAY,IAGd,sBAAC,0CAAA9E,EAAA,6DACO+E,EAAgB,EAAK5I,MAArB4I,YAEA7E,EAA0C,IAAjC9D,EAAID,MAAMgE,YAAY7B,OAAe,EAAIlC,EAAID,MAAMgE,YAAY7B,OAH/E,SAKiB8B,MAAMhE,EAAIiE,eAAiB,cAAe,CACtDC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,QAAWiE,EACX,OAAUtE,KAVnB,cAKKM,EALL,gBAaaA,EAAIC,OAbjB,OAaCD,EAbD,OAeOiE,EAAc,GAChB/D,GAAQ,EAhBb,cAiBeF,EAAIwE,OAjBnB,IAiBC,2BAASC,EAAT,QACSvE,GASD+D,EAAY7D,KAAK,kBAAC,EAAD,CACb1B,cAAc,EACdsE,SAAU,EAAKjB,sBACftD,gBAAiB,EAAKiG,sBACtBxB,WAAY,EAAKyB,aACjBrC,UAAWmC,EACX9B,UAAW,EAAKiC,uBAChBtE,IAAKiE,OACTrE,GAAQ,GAhBR+D,EAAY7D,KAAK,kBAAC,EAAD,CACb4C,SAAU,EAAKjB,sBACftD,gBAAiB,EAAKiG,sBACtBxB,WAAY,EAAKyB,aACjBrC,UAAWmC,EACX9B,UAAW,EAAKiC,uBAChBtE,IAAKiE,OAzBlB,8BAsCC,EAAKjJ,SAAS,CACVuJ,YAAab,EACbzB,SAAUvC,EACViE,YAAaA,EACbM,YAAaA,EACbJ,mBAAmB,IA3CxB,2CAAD,IAvDa,EAuGnBW,eAAiB,SAAC7F,EAAa8F,GAC3B,EAAKzJ,SAAS,CACV0J,WAAY,GACZC,qBAAqB,EACrB7F,cAAe,EAAKzD,MAAMyD,cAAgB,IAE9C,IAAM8F,EAAK,EAAKvJ,MAAMyD,cAAgB,EAEtCE,WAAU,sBAAC,wDAAAE,EAAA,4DAAOJ,EAAP,+BAAuB8F,GACV,EAAKvJ,MAAMyD,eADxB,wDAID+F,EAAiB,EAAKxJ,MAAtBwJ,aAEAzF,EAA0C,IAAjC9D,EAAID,MAAMgE,YAAY7B,OAAe,EAAIlC,EAAID,MAAMgE,YAAY7B,OANvE,SASK8B,MAAMhE,EAAIiE,eAAiB,yBAA0B,CAC7DC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,OAAUL,EACV,OAAUT,EACV,MAAS8F,KAfV,cASP/E,EATO,iBAkBKA,EAAIC,OAlBT,WAkBPD,EAlBO,SAmBHZ,EAAgB,EAAKzD,MAAMyD,eAnBxB,mDAsBD4F,EAAa,GACf9E,GAAQ,EAvBL,cAwBOF,GAxBP,IAwBP,2BAASqD,EAAT,QACSnD,GAMD8E,EAAW5E,KAAK,kBAAC,EAAD,CACZ1B,cAAc,EACdD,gBAAiB,EAAK2G,sBACtBzH,SAAU0F,EACV/C,IAAK6E,OACTjF,GAAQ,GAVR8E,EAAW5E,KAAK,kBAAC,EAAD,CACZ3B,gBAAiB,EAAK2G,sBACtBzH,SAAU0F,EACV/C,IAAK6E,OA7BV,8BAuCP,EAAK7J,SAAS,CACV+J,aAAcnF,EAAQ,KAAO,EAAKvE,MAAM0J,aACxCvI,QAASoD,EAAQ,MAAQ,EAAKvE,MAAMmB,QACpCkI,WAAYA,EACZG,aAAcA,EACdF,qBAAqB,IA5ClB,4CA8CR,MA7JY,EAgKnBK,SAAW,SAAC9G,IACN,uCAAC,WAAOY,GAAP,yBAAAI,EAAA,+DACmC,EAAK7D,MAA/B4G,EADT,EACSA,SAAUsC,EADnB,EACmBA,YAEZnF,EAA0C,IAAjC9D,EAAID,MAAMgE,YAAY7B,OAAe,EAAIlC,EAAID,MAAMgE,YAAY7B,QAExEyH,EAAYhD,GACRzE,OAAS4B,EACnB6F,EAAUC,KAAOX,EAPlB,SASiBjF,MAAMhE,EAAIiE,eAAiB,cAAe,CACtDC,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpB0F,KAAMC,KAAKC,UAAUJ,KAd1B,cASKvF,EATL,iBAgBaA,EAAIC,OAhBjB,QAgBCD,EAhBD,OAkBC,EAAK+D,eAAe,EAAKpI,MAAMkJ,aAE/Be,MAAM,qCAAD,OAAsCf,EAAtC,sDACLpC,QAAQC,IAAI1C,GArBb,4CAAD,yDAjKa,EA0LnB6F,aAAe,SAACrH,GAAQ,IAAD,EAC4B,EAAK7C,MAA5CsI,EADW,EACXA,YAAa1B,EADF,EACEA,SAAUuD,EADZ,EACYA,YACzBvB,EAAgB,EAAK5I,MAArB4I,YAEAwB,EAAcC,SAASC,cAAc,gBAC3C,GAAIC,MAAMH,EAAY5E,OAGlB,OAFAyE,MAAM,6CACNG,EAAY5E,MAAQ,IAGxB,IAAMgF,EAAWH,SAASC,cAAc,aAClCG,EAAU,CACZnD,SAA6B,KAAnBkD,EAAShF,MAAegF,EAASE,YAAcF,EAAShF,MAClE4B,QAA+B,KAAtBgD,EAAY5E,MAAe4E,EAAYM,YAAcN,EAAY5E,MAC1EmF,OAAQ,KACRlD,YAAa,IAGjBa,EAAY7D,KAAK,kBAAC,EAAD,CACb1B,cAAc,EACd4D,UAAW8D,EACXpD,SAAU,EAAKjB,sBACftD,gBAAiB,EAAKiG,sBACtBxB,WAAY,EAAKyB,aACjBrE,IAAKiE,KAGT6B,EAAQ9F,IAAMiE,EACdhC,EAASiC,MAAMpE,KAAKgG,GAEpBD,EAAShF,MAAQ,GACjB4E,EAAY5E,MAAQ,GACpB,EAAK7F,SAAS,CACV2I,YAAaA,EACbM,YAAaA,EAAc,EAC3BhC,SAAUA,IAETuD,GACDE,SAASC,cAAc,WAAWM,UAhOvB,EAmOnB5B,aAAe,SAACnG,EAAI+B,GAAY,IAAD,EACqB,EAAK5E,MAA7CuI,EADmB,EACnBA,aAAcD,EADK,EACLA,YAAa1B,EADR,EACQA,SAEnCA,EAASiC,MAAQjC,EAASiC,MAAMgC,QAAO,SAAC/B,GAAD,QAAUA,EAAEgC,QAAUhC,EAAEgC,SAAWlG,EAAO5E,MAAM2G,UAAUmE,aAC/EC,IAAVjC,EAAEnE,KAAqBmE,EAAEnE,IAAIsD,aAAerD,EAAOW,oBAAoBZ,QAE/E,EAAKhF,SAAS,CACV2I,YAAaA,EAAYuC,QAAO,SAACG,GAAD,OAAUA,EAAKrG,MAAQC,EAAOW,oBAAoBZ,OAClFiC,SAAUA,IAIO,OAAjB2B,GAAyBA,IAAiB3D,GAC1C,EAAKjF,SAAS,CACV4I,aAAc,OAEtB1F,EAAG2D,mBAnPY,EAsPnBuC,sBAAwB,SAAClG,EAAI+B,GAAY,IAC7B2D,EAAiB,EAAKvI,MAAtBuI,aAEJ3D,IAAW2D,IACPA,GACAA,EAAalC,kBACjBzB,EAAOyB,kBAEP,EAAK1G,SAAS,CACV4I,aAAc3D,MA/PP,EAoQnBwB,sBAAwB,SAACa,EAAQgE,EAAS9D,GACtC,EAAKnH,MAAMyI,QAAUxB,EACrB,EAAKjH,MAAM0I,UAAYuC,EACvB,EAAKjL,MAAM2I,YAAcxB,EACzB,EAAKxH,SAAS,KAxQC,EA2QnBkH,aAAe,WAAO,IACVD,EAAa,EAAK5G,MAAlB4G,SAERA,EAAStE,KAAO,KAChB,EAAK3C,SAAS,CACViH,SAAUA,KAhRC,EAoRnBqC,uBAAyB,WAAO,IAAD,IACQ,EAAKjJ,MAAhC4G,EADmB,EACnBA,SAAU2B,EADS,EACTA,aADS,cAGb3B,EAASiC,OAHI,IAG3B,gCAASC,EAAT,QACI,GAAKA,EAAEgC,QAAUvC,EAAavI,MAAM2G,UAAUmE,SAAWhC,EAAEgC,aACzCC,IAAVjC,EAAEnE,KAAqB4D,EAAahD,oBAAoBZ,MAAQmE,EAAEnE,IAAIsD,WAAa,CACvFa,EAAExG,KAAOiG,EAAavI,MAAM2G,UAAUrE,KACtC,QAPmB,8BAU3B,EAAK3C,SAAS,CACViH,SAAUA,KA/RC,EAmSnBsE,kBAAoB,SAACrI,GAAQ,IAAD,EACoE,EAAK7C,MAAzFuI,EADgB,EAChBA,aAAcmB,EADE,EACFA,aAAc9C,EADZ,EACYA,SAAU1F,EADtB,EACsBA,OAAQC,EAD9B,EAC8BA,QAASgJ,EADvC,EACuCA,YAAagB,EADpD,EACoDA,YAE5E,GAAqB,OAAjB5C,EAAJ,CAIA,GAAI4B,EAAa,CACb,GAA6B,KAAzBgB,EAAY1J,SAEZ,YADAwI,MAAM,+BAGV,IAAMmB,EAAMC,OAAOF,EAAYxJ,KAAO0J,OAAOF,EAAYvJ,OAASyJ,OAAOF,EAAYtJ,SACrF,GAAI0I,MAAMa,IAAqB,UAAZjK,IAAwBiK,EAAM,KAAOA,GAAO,GAE3D,YADAnB,MAAM,+BAIT,GAAqB,OAAjBP,EAEL,YADAO,MAAM,6BAGV,GAAIM,MAAMrJ,GAKN,OAJA+I,MAAM,4CACN,EAAKtK,SAAS,CACVuB,OAAQ,KAKhB,IAAM+E,EAAekE,EAAcgB,EAAczB,EAAa1J,MAAMgC,SACpEiE,EAAa/E,OAASA,GAAkBmJ,SAASC,cAAc,eAAeI,YAC9EzE,EAAa9E,QAAUA,EAEvBoH,EAAavC,gBAAgBnD,EAAIoD,GAlCT,oBAmCVW,EAASiC,OAnCC,IAmCxB,gCAASC,EAAT,QACI,GAAKA,EAAEgC,QAAUvC,EAAavI,MAAM2G,UAAUmE,SAAWhC,EAAEgC,aACzCC,IAAVjC,EAAEnE,KAAqB4D,EAAahD,oBAAoBZ,MAAQmE,EAAEnE,IAAIsD,WAAa,CACvFa,EAAErB,YAAYhD,KAAKwB,GACnB,QAvCgB,8BA0CxB,EAAKtG,SAAS,CACViH,SAAUA,EACVuD,aAAa,EACbgB,YAAa,CACT1J,SAAU,GACVC,MAAO,GACPC,IAAK,EAAGC,MAAO,EAAGC,QAAS,EAC3BO,MAAO,EACPhB,SAAU,IACViB,QAAQ,EACRvC,IAAK,YACLqC,OAAQ,EACRwI,OAAQ,QAGhBhH,YAAW,kBAAM0G,SAASC,cAAc,WAAWM,WAAU,QArDzDX,MAAM,yBAvSK,EA+VnBR,sBAAwB,SAAC5G,EAAI+B,GAAY,IAC7B8E,EAAiB,EAAK1J,MAAtB0J,aAEJ9E,IAAW8E,IACPA,GACAA,EAAalH,iBACjBoC,EAAOpC,iBACH6H,SAASiB,gBAAkBjB,SAASC,cAAc,YAClDD,SAASC,cAAc,WAAWM,SAEtC,EAAKjL,SAAS,CACV+J,aAAc9E,EACd1D,OAAQ,GACRC,QAA4C,OAAnCyD,EAAO5E,MAAMgC,SAASZ,SAAoB,SAAW,QAC9DmK,oBAAqB,OAGvB,sBAAC,gDAAA1H,EAAA,+DACqC,EAAK7D,MAAnCwJ,EADP,EACOA,aAAcgC,EADrB,EACqBA,YADrB,EAEoC5G,EAAO5E,MAAMgC,SAAxCE,EAFT,EAESA,OAAQG,EAFjB,EAEiBA,OAAQsI,EAFzB,EAEyBA,OAFzB,SAGiB1G,MAAMhE,EAAIiE,eAAiB,0BAA2B,CAClEC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,OAAUlC,EACV,OAAUG,EACV,OAAUsI,GAAkB,QATrC,cAGKtG,EAHL,gBAYaA,EAAIC,OAZjB,OAeC,GAHAD,EAZD,OAcCmH,EAAc,GACVnH,EAAIoD,YAAa,CAAC,EAAD,YACHpD,EAAIoD,aADD,IACjB,2BAASC,EAAT,QACI8D,EAAY/G,KAAK,kBAAC,EAAD,CACb1D,UAAW2G,EACX/C,IAAK6E,OAJI,+BAOrB,EAAK7J,SAAS,CACV4L,oBAAqBlH,EACrBmF,aAAcA,EACdgC,YAAaA,IAzBlB,2CAAD,KAhXS,EA+YnB/E,eAAiB,SAACC,GAAa,IACnBE,EAAa,EAAK5G,MAAlB4G,SAERA,EAAStE,KAAOoE,EAChB,EAAK/G,SAAS,CACViH,SAAUA,KApZC,EAwZnB6E,aAAe,WAAO,IAAD,EACmD,EAAKzL,MAAjE0J,EADS,EACTA,aAAcxI,EADL,EACKA,OAAQC,EADb,EACaA,QAASgJ,EADtB,EACsBA,YAAagB,EADnC,EACmCA,YAEpD,OAAIhB,GACA,EAAKuB,WAAiC,eAApB,EAAKA,WAA8B,aAAe,aAC7D,kBAAC,EAAD,CAAW1J,SAAUmJ,EACxBjK,OAAQA,EACRC,QAASA,EACTwD,IAAK,EAAK+G,cAGVhC,EACO,kBAAC,EAAD,CAAW1H,SAAU0H,EAAa1J,MAAMgC,SAC3Cd,OAAQA,IAAmBwI,EAA4B,WAAZvI,EAAuB,EACnB,IAAzCuI,EAAa1J,MAAMgC,SAASZ,SAAiB,IAAMsI,EAAa1J,MAAMgC,SAASZ,SAAY,GACjGD,QAASA,EACTwD,IAAK+E,EAAa1J,MAAMgC,SAASE,OAAO+F,WAAa/G,EAASC,IAG3D,kBAAC,EAAD,CAAWwD,IAAK,QA3ahB,EA8anBgH,mBAAqB,SAACC,EAAOpG,GACzB,IAAMqG,EAAM,EAAK7L,MAAMmL,YAEvB,GAAc,QAAVS,EAAiB,CACjB,IAAME,EAAMzB,SAASC,cAAc,YACrB,WAAV9E,GACAsG,EAAIC,UAAW,EACfD,EAAItG,MAAQ,GACZqG,EAAIzK,SAAW,KACf,EAAKpB,MAAMkB,OAAS,IAGpBmJ,SAASC,cAAc,YAAYyB,UAAW,EAC9CD,EAAItG,MAAQ,IACZqG,EAAIzK,SAAW,IACf,EAAKpB,MAAMkB,OAAS,SAIV,aAAV0K,IACApG,EAAkB,KAAVA,EAAe,KAAOA,GAClCqG,EAAID,GAASpG,EAEjB,EAAK7F,SAAS,CACVwL,YAAaU,EACb1K,QAA0B,OAAjB0K,EAAIzK,SAAoB,SAAW,WAvcjC,EA2cnB4K,aAAe,SAACnJ,EAAIoJ,GAAY,IACpB/C,EAAgB,EAAKlJ,MAArBkJ,YAEJgD,EAAI,IAAIC,KAAKjD,GACjBgD,EAAEE,QAAQF,EAAEhE,UAAY+D,GAExB,EAAK7D,eAAeP,EAAUqE,KAjdf,EAodnBG,YAAc,SAACxJ,GAAQ,IAAD,EACmB,EAAK7C,MAAlC0J,EADU,EACVA,aAAcL,EADJ,EACIA,WAEtB,OAAQxG,EAAG8B,KACP,IAAK,QACD,EAAKuG,oBACLrI,EAAGyJ,iBACH,MACJ,IAAK,MACDjC,SAASC,cAAc,eAAeM,SACtC/H,EAAGyJ,iBACH,MACJ,IAAK,SACDjC,SAASC,cAAc,WAAW9E,MAAQ,GAC1C3C,EAAGyJ,iBACH,MACJ,IAAK,UACD,GAAI5C,EACA,IAAK,IAAI5D,EAAI,EAAGA,EAAIuD,EAAWkD,OAAQzG,IACnC,GAAIuD,EAAWvD,GAAGnB,MAAQ+E,EAAanE,oBAAoBZ,IACvD,IAAU,IAANmB,EACA,MAEAuE,SAASmC,iBAAiB,aAAa1G,EAAI,GAAG2G,QAE9D5J,EAAGyJ,iBACH,MACJ,IAAK,YACD,GAAI5C,EACA,IAAK,IAAI5D,EAAI,EAAGA,EAAIuD,EAAWkD,OAAQzG,IACnC,GAAIuD,EAAWvD,GAAGnB,MAAQ+E,EAAanE,oBAAoBZ,IACvD,IAAImB,IAAMuD,EAAWkD,OAAS,EAC1B,MAEAlC,SAASmC,iBAAiB,aAAa1G,EAAI,GAAG2G,QAE9D5J,EAAGyJ,mBAxfI,EA+fnBI,YAAc,SAAC7J,GAGX,OAFAiE,QAAQC,IAAI,EAAK/G,MAAM4G,UAEf/D,EAAG8B,KACP,IAAK,QACD,EAAKuG,oBACLrI,EAAGyJ,iBACH,MACJ,IAAK,MACDjC,SAASC,cAAc,WAAWM,SAClC/H,EAAGyJ,iBACH,MACJ,IAAK,SACDjC,SAASC,cAAc,eAAe9E,MAAQ,GAC9C3C,EAAGyJ,iBACH,MACJ,IAAK,UAIL,IAAK,YACDxF,QAAQC,IAAIlE,EAAG8B,KACf9B,EAAGyJ,mBArhBI,EA4hBnBnM,OAAS,WAAO,IAAD,EACoM,EAAKH,MAA5MkJ,EADG,EACHA,YAAaZ,EADV,EACUA,YAAaoB,EADvB,EACuBA,aAAcxI,EADrC,EACqCA,OAAQC,EAD7C,EAC6CA,QAASyF,EADtD,EACsDA,SAAU2E,EADhE,EACgEA,oBAAqBC,EADrF,EACqFA,YAAahD,EADlG,EACkGA,kBAAmBc,EADrH,EACqHA,oBAAqBD,EAD1I,EAC0IA,WAAYZ,EADtJ,EACsJA,OAAQC,EAD9J,EAC8JA,SAAUC,EADxK,EACwKA,WAAYwB,EADpL,EACoLA,YADpL,EAEkDT,EAAeA,EAAa1J,MAAMgC,SAAW2F,EAASC,gBAA3GnG,EAFG,EAEHA,SAAUC,EAFP,EAEOA,MAAOC,EAFd,EAEcA,IAAKC,EAFnB,EAEmBA,MAAOC,EAF1B,EAE0BA,QAASO,EAFnC,EAEmCA,MAAOtC,EAF1C,EAE0CA,IAErD,OACI,0BAAMM,UAAU,0BACZ,yBAAKI,GAAG,UAAUJ,UAAU,oBACxB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,YAAjB,SACA,4BAAQ2L,SAAUvD,EAAmBjI,QAAS,SAACsC,GAAD,OAAQ,EAAKmJ,aAAanJ,GAAK,IAAIzC,UAAU,YAA3F,IAAyG,KACzG,2BAAO2L,SAAUvD,EAAmBpD,SAAU,SAACvC,GAAD,OAAQ,EAAKuF,eAAevF,EAAG6C,cAAcF,QAAQhF,GAAG,cAAc6E,KAAK,OAAOG,MAAO0D,IACvI,4BAAQ6C,SAAUvD,EAAmBjI,QAAS,SAACsC,GAAD,OAAQ,EAAKmJ,aAAanJ,EAAI,IAAIzC,UAAU,YAAY,MAEzGoI,EAAoB,aACf,kBAAC,EAAD,CAAM3C,WAAY,EAAKgB,aAAcvE,KAAMsE,EAAStE,KAAMqC,IAAK,KAAOiC,EAAStE,KAAOsE,EAAStE,KAAKqI,OAAS,MAAOzF,aAAc,EAAKuB,kBAEjJ,yBAAKrG,UAAU,aACVoI,EAAoB,aAAeF,GAExC,6BACA,yBAAKlI,UAAU,YACX,4CACA,wCAAUqI,EAAOpH,QAAQ,GAAzB,aAAgCqH,EAASrH,QAAQ,GAAjD,aAAwDsH,EAAWtH,QAAQ,MAE/E,4BAAQ0K,SAAUvD,EAAmBjI,QAAS,EAAKoJ,SAAUvJ,UAAU,YAAvE,gBAIJ,yBAAKI,GAAG,cAAcJ,UAAU,oBAC3B+J,EACK,yBAAK/J,UAAU,eACb,yBAAKA,UAAU,iBACX,2BAAOA,UAAU,YAAjB,oBACA,4BAAQG,QAAS,kBAAM,EAAKZ,SAAS,CAAEwK,aAAa,KAAU/J,UAAU,YAAxE,YAGJ,uCAAkB,2BAAOgF,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,WAAY9I,EAAG6C,cAAcF,QAAQkF,YAAY,OAAOrF,KAAK,SAChI,wCAAmB,2BAAOD,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,QAAS9I,EAAG6C,cAAcF,QAAQkF,YAAY,QAAQrF,KAAK,SAC/H,yCACA,6BACI,2BAAOD,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,MAAO9I,EAAG6C,cAAcF,QAAQH,KAAK,OAAOqF,YAAY,MAAM,qCAC/G,2BAAOtF,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,QAAS9I,EAAG6C,cAAcF,QAAQH,KAAK,OAAOqF,YAAY,MAAM,uCACjH,2BAAOtF,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,UAAW9I,EAAG6C,cAAcF,QAAQH,KAAK,OAAOqF,YAAY,MAAM,0CAEvH,sCACA,6BAAK,4BAAQtF,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,MAAO9I,EAAG6C,cAAcF,QAAQpF,UAAU,gBAC7F,4CACA,2CAWA,6CAAwB,2BAAOgF,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,WAAY9I,EAAG6C,cAAcF,QAAQpF,UAAU,uBAAuBuF,aAAa,MAAM+E,YAAY,OAAOrF,KAAK,UAY9L,wCACA,6BACI,2BAAOD,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,QAAS9I,EAAG6C,cAAcF,QAAQpF,UAAU,eAAesK,YAAY,IAAIrF,KAAK,SACjI,6BAAK,0CAAqB,2BAAOD,SAAU,SAACvC,GAAD,OAAQ,EAAK8I,mBAAmB,SAAU9I,EAAG6C,cAAcD,UAAUJ,KAAK,eAEzH,2BAAOjF,UAAU,WAAjB,2GAGF,CAAC,yBAAKA,UAAU,qBAAqBuE,IAAI,cACvC,2BAAOvE,UAAU,YAAjB,iBACA,2BAAOgF,SAAU,SAACvC,GAAD,OAAQ,EAAKsG,eAC1BkB,SAASC,cAAc,WAAW9E,MAClC3C,EAAG6C,cAAcD,UACjBjF,GAAG,QAAQ6E,KAAK,aALrB,MAOH,4BAAQ9E,QAAS,kBAAM,EAAKZ,SAAS,CAC7BwK,aAAa,EACbT,aAAc,KACdvI,QAAS,QACTD,OAAQ,OACRd,UAAU,YALlB,QAOI,2BAAOgF,SAAU,SAACvC,GAAD,OAAQ,EAAKsG,eAC1BtG,EAAG6C,cAAcF,MACjB6E,SAASC,cAAc,UAAU7E,UACjCkH,UAAW,EAAKN,YAChB7L,GAAG,SAAS6E,KAAK,OACjBqF,YAAY,kBAEpB,yBAAKtK,UAAU,wBAAwBuE,IAAI,iBACtC2E,EAAsB,aAAeD,IAE9C,yBAAKjJ,UAAU,sBACX,2BAAOA,UAAU,YAAjB,YACA,2BAAO2L,SAAUzC,EAAqB9I,GAAG,aAAa6E,KAAK,OAAOG,MAAOtE,EACrEkE,SAAU,SAACvC,GAAD,OAAQ,EAAKlD,SAAS,CAAEuB,OAAQ2B,EAAG6C,cAAcF,SAC3DmH,UAAW,EAAKD,YAChBhC,YAAahB,EAA4B,WAAZvI,EAAuB,EACL,IAAzCuI,EAAa1J,MAAMgC,SAASZ,SAAiB,IAAMsI,EAAa1J,MAAMgC,SAASZ,SAAY,IACrG,4BAAQgE,SAAU,SAACvC,GAAD,OAAQ,EAAKlD,SAAS,CAAEwB,QAAS0B,EAAG6C,cAAcF,SAAUuG,SAAUzC,EAAqB9I,GAAG,gBAAgBgF,MAAOrE,GACnI,4BAAQf,UAAWsJ,EAAyD,OAAzCA,EAAa1J,MAAMgC,SAASZ,SAAoB,SAAW,GAAM,UAApG,SAEA,4BAAQhB,UAAWsJ,EAAyD,IAAzCA,EAAa1J,MAAMgC,SAASZ,SAAiB,SAAW,GAAM,UAAjG,UAEA,4BAAQhB,UAAU,UAAlB,SAGR,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,qBAAjB,kBACC,EAAKqL,eACN,4BAAQM,SAAUzC,EAAqB/I,QAAS,EAAK2K,kBAAmB9K,UAAU,YAAlF,mBAEJ,6BACA,yBAAKA,UAAU,eACX,6BACI,2BAAOA,UAAU,YAAjB,cACA,2BAAOA,UAAU,WAAWiF,KAAK,OAAOqF,YAAa,QAAUpC,EAAYiE,OAAS,KACpF,2BAAOnM,UAAU,YAAjB,YACA,2BAAOA,UAAU,cAAciF,KAAK,OAAOqF,YAAY,OAE3D,4BAAQqB,SAAUvD,EAAmBjI,QAAS,EAAK2J,aAAc9J,UAAU,oBAA3E,kBAIPmL,EACG,yBAAK/K,GAAG,kBAAkBJ,UAAU,oBAChC,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBAAf,UAAsCqB,EAAtC,YAAkDC,EAAQ,IAAMA,EAAQ,KACxE,kBAAC,EAAD,CAAMmE,WAAY,aAAWvD,KAAMiJ,EAAsBA,EAAoBjJ,KAAO,KAChFqC,IAAK,KAAO4G,EAAoBjJ,KAAOiJ,EAAoBjJ,KAAKqI,OAAS,QAEjF,yBAAKvK,UAAU,mBACX,yBAAKC,IAAG,mBAAcP,GAAY,aAAeQ,IAAI,mBAEzD,yBAAKF,UAAU,YACX,+BACI,+BACI,4BAAI,oCAAa,wBAAIwM,QAAQ,KAAKnL,IAClC,4BAAI,qCAAc,wBAAImL,QAAQ,KAAKlL,GAAgB,OACnD,4BAAI,qCAAc,oCAAa,oCAEnC,+BACI,4BAAI,mCACA,4BAAiB,UAAZP,EAAsBQ,EAAM,IAAM,MACvC,4BAAiB,WAAZR,EAAuBQ,EAAM,IAAM,OAC5C,4BAAI,qCACA,4BAAiB,UAAZR,EAAsBS,EAAQ,IAAM,MACzC,4BAAiB,WAAZT,EAAuBS,EAAQ,IAAM,OAC9C,4BAAI,uCACA,4BAAiB,UAAZT,EAAsBU,EAAU,IAAM,MAC3C,4BAAiB,WAAZV,EAAuBU,EAAU,IAAM,OAChD,4BAAI,wCACA,4BAAiB,UAAZV,GAA6B,EAANQ,EAAoB,EAAVE,EAAsB,EAARD,GAC/CP,QAAQ,GACP,KAAO,MACb,4BAAiB,WAAZF,GAA8B,EAANQ,EAAoB,EAAVE,EAAsB,EAARD,GAChDP,QAAQ,GACP,KAAO,OACjB,4BAAI,qCACA,4BAAiB,UAAZF,EAAsBiB,EAAQ,MAAQ,MAC3C,4BAAiB,WAAZjB,EAAuBiB,EAAQ,MAAQ,SAGxD,yBAAKhC,UAAU,iBAAiBoL,EAAYe,OAAS,EAAI,eAAiB,IAC1E,yBAAKnM,UAAU,uBACVoL,KAKT,yBAAKhL,GAAG,kBAAkBJ,UAAU,oBAApC,gBA9sBhB,EAAKsL,WAAa,aAClB,EAAK1L,MAAQ,CACTkJ,YAAarB,EAAU,IAAIsE,MAC3BvF,SAAU,GACV6B,OAAQ,EACRC,SAAU,EACVC,WAAY,EAEZL,YAAa,GACbM,YAAa,EACbL,aAAc,KACdC,mBAAmB,EAEnBkB,aAAc,KACdL,WAAY,GACZG,aAAc,EACdF,qBAAqB,EACrB7F,cAAe,EACfvC,OAAQ,GACRC,QAAS,MAETgJ,aAAa,EACbgB,YAAa,CACT1J,SAAU,GACVC,MAAO,GACPC,IAAK,EAAGC,MAAO,EAAGC,QAAS,EAC3BO,MAAO,EACPhB,SAAU,IACViB,QAAQ,EACRvC,IAAK,YACLqC,OAAQ,EACRwI,OAAQ,MAGZY,oBAAqB,KACrBC,YAAa,IAGjB,EAAKpD,eAAe,EAAKpI,MAAMkJ,aAC/B,EAAKC,eAAe,IAAI,GA1CT,E,UADEzI,IAAMC,WCDhBkM,EAVE,WACb,OACI,0BAAMzM,UAAU,WACZ,yBAAKA,UAAU,YACX,6CCMD0M,EAVG,WACd,OACI,0BAAM1M,UAAU,WACZ,yBAAKA,UAAU,YACX,8CCMD2M,EAVG,WACd,OACI,0BAAM3M,UAAU,WACZ,yBAAKA,UAAU,YACX,8CCMD4M,EAVK,WAChB,OACI,0BAAM5M,UAAU,WACZ,yBAAKA,UAAU,YACX,gDCMD6M,EAVI,WACf,OACI,0BAAM7M,UAAU,WACZ,yBAAKA,UAAU,YACX,+CCwCD8M,G,uDAzCX,WAAY5N,GAAQ,IAAD,8BACf,cAAMA,IAOVa,OAAS,WAAM,IACHgN,EAAS,EAAKnN,MAAdmN,KAER,OACI,0BAAM/M,UAAU,sBACZ,yBAAKI,GAAG,UAAUJ,UAAU,oBACxB,wBAAIA,UAAU,YAAd,kBACA,yBAAKA,UAAU,UACX,2CAAiB+M,EAAKtN,UACtB,wCAAcsN,EAAKC,OACnB,6CAAmBD,EAAKE,WACxB,4CAAkBF,EAAKG,UACvB,gDAAsBH,EAAKI,KAC3B,sCAAuB,MAAXJ,EAAKK,IAAU,OAAO,UAClC,yBAAKpN,UAAU,YACX,6BACI,yBAAKC,IAAG,mBAAc8M,EAAKrN,KAAOQ,IAAI,aAAa,6BACnD,2CAEJ,6BACI,oDAA+B,6BAC/B,8BAAUmN,UAAU,EAAMjI,MAAO2H,EAAKO,aAG9C,6CAAmBP,EAAKQ,cACxB,kDA9BhB,EAAK3N,MAAQ,CACTmN,KAAMlN,EAAID,MAAMgE,aAJL,E,UADDtD,IAAMC,YC4EbiN,E,kDAzEX,WAAYtO,GAAQ,IAAD,8BACf,cAAMA,IAOVuO,QARmB,uCAQT,WAAOhL,GAAP,qBAAAgB,EAAA,sEAEFhB,EAAGyJ,iBACGwB,EAASzD,SAASmC,iBAAiB,kBACnCuB,EAAeD,EAAO,GAAGtI,MACzBwI,EAAWF,EAAO,GAAGtI,MALzB,SAOcvB,MAAMhE,EAAIiE,eAAiB,SAAU,CACjDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpB0F,KAAMC,KAAKC,UAAU,CACjBnK,SAAUkO,EACVE,KAAMD,MAdZ,UAiBiB,OAVf3J,EAPF,QAiBM6J,OAjBN,kCAkBc7J,EAAIC,OAlBlB,QAmBqB,kBADnBD,EAlBF,QAoBM,EAAK1E,SAAS,CACVwO,WAAY9J,KAGhBpE,EAAIV,WAAW8E,GACfpE,EAAIC,eAAe,YAzBzB,oCA6BE4G,QA7BF,UA6BoBzC,EAAIC,OA7BxB,yBA6BUyC,IA7BV,0EAiCFD,QAAQC,IAAI,gCAAiC,KAAIqH,SAjC/C,0DARS,wDA6CnBjO,OAAS,WACL,OACI,0BAAMC,UAAU,sBACZ,0BAAMiO,SAAU,EAAKR,QAASrN,GAAG,UAAUJ,UAAU,oBACjD,wBAAIA,UAAU,YAAd,+CACA,yBAAKA,UAAU,UACX,kDAA6B,2BAAOiF,KAAK,OAAOC,KAAK,aACrD,4CAAuB,2BAAOD,KAAK,WAAWC,KAAK,aACnD,8CAAmB,2BAAOD,KAAK,WAAWC,KAAK,YAC/C,0BAAMlF,UAAqC,OAA1B,EAAKJ,MAAMmO,WAAsB,SAAW,WAAY,EAAKnO,MAAMmO,YACpF,2BAAO/N,UAAU,WAAWiF,KAAK,SAASG,MAAM,WAQpD,yBAAKpF,UAAU,YACX,0BAAMG,QAAS,kBAAMN,EAAIC,eAAe,UAAxC,oBACA,0BAAMK,QAAS,kBAAMN,EAAIC,eAAe,cAAxC,8BA9DhB,EAAKF,MAAQ,CACTmO,WAAY,MAJD,E,UADHzN,IAAMC,WCqDX2N,E,4MAtDXC,WAAa,SAAC1L,GACVA,EAAGyJ,kB,EAGPnM,OAAS,WACL,OACI,0BAAMC,UAAU,sBACZ,0BAAMG,QAAS,EAAKgO,WAAY/N,GAAG,UAAUJ,UAAU,oBACnD,wBAAIA,UAAU,YAAd,2CACA,yBAAKA,UAAU,UACX,4CAAuB,2BAAOiF,KAAK,OAAOC,KAAK,aAC/C,0BAAMlF,UAAU,WAAhB,sBACA,wCAHJ,IAGwB,2BAAOiF,KAAK,QAAQC,KAAK,UAC7C,4CAAuB,2BAAOD,KAAK,WAAWC,KAAK,aACnD,0BAAMlF,UAAU,UAAhB,iFACA,oDAA+B,2BAAOiF,KAAK,WAAWC,KAAK,UAC3D,8CAAyB,2BAAOD,KAAK,OAAOC,KAAK,cACjD,6CAAwB,2BAAOD,KAAK,OAAOC,KAAK,aAChD,iDAA4B,2BAAOD,KAAK,OAAOC,KAAK,QACpD,6BACI,uCAAkB,2BAAOD,KAAK,QAAQC,KAAK,MAAME,MAAM,SAAS,uCAChE,2BAAOH,KAAK,QAAQC,KAAK,MAAME,MAAM,WAAW,yCAEpD,yBAAKpF,UAAU,YACX,6BACI,yBAAKC,IAAI,4BAA4BC,IAAI,aAAa,6BACtD,2CAEJ,6BACI,oDAA+B,6BAC/B,8BAAUoK,YAAY,+CAG9B,6CACA,gCACI,yCACA,wCACA,iDACA,yCACA,6CACA,4CACA,2CACA,yCAEJ,0BAAMtK,UAAU,UAAhB,oFACA,0BAAMA,UAAU,UAAhB,yFACA,2BAAOA,UAAU,WAAWiF,KAAK,SAASG,MAAM,iB,YAhDjD9E,IAAMC,WCSd6N,EAVD,WACV,OACI,0BAAMpO,UAAU,WACZ,yBAAKA,UAAU,YACX,8DCyEDqO,E,kDA7CX,WAAYnP,GAAQ,IAAD,8BACf,cAAMA,IAOVoP,WAAa,SAACC,GACO,EAAK3O,MAAd4O,OAEKD,GACT,EAAKhP,SAAS,CACViP,KAAMD,KAbC,EAiBnBxO,OAAS,WACL,OAAQ,EAAKH,MAAM4O,MACf,IAAK,OACD,OAAO,kBAAC,EAAD,MACX,IAAK,aACD,OAAO,kBAAC,EAAD,MACX,IAAK,WACD,OAAO,kBAAC,EAAD,MACX,IAAK,YACD,OAAO,kBAAC,EAAD,MACX,IAAK,YACD,OAAO,kBAAC,EAAD,MACX,IAAK,cACD,OAAO,kBAAC,EAAD,MACX,IAAK,aACD,OAAO,kBAAC,EAAD,MACX,IAAK,UACD,OAAO,kBAAC,EAAD,MACX,IAAK,WACD,OAAO,kBAAC,EAAD,MACX,IAAK,QACD,OAAO,kBAAC,EAAD,MACX,QACI,OAAO,kBAAC,EAAD,QArCf,EAAK5O,MAAQ,CACT4O,KAAMtP,EAAMsP,KAAOtP,EAAMsP,KAAO,QAJrB,E,UADJlO,IAAMC,WCrBVkO,E,4MATX1O,OAAS,WACL,OACI,4BAAQC,UAAU,oBACd,wBAAII,GAAG,UAAP,2BAAwC,8C,YAJnCE,IAAMC,W,QCKrBmO,EAAO,CACTC,KAAMrO,IAAMsO,YACZC,OAAQvO,IAAMsO,YACdE,OAAQxO,IAAMsO,YACdG,IAAKzO,IAAMsO,aAGX/O,EAAM,KAEJmP,E,kDACF,WAAY9P,GAAQ,IAAD,8BACf,cAAMA,IAqBV4E,aAAe,WACX,OAAOmL,EAAOC,YAvBC,EA2BnB/P,WAAa,SAAC8E,GAAS,IACX5D,EADU,eACVA,YAEI,OAAR4D,GACA,EAAK1E,SAAS,CACVqE,YAAavD,IAEjBqO,EAAKI,OAAOK,QAAQhQ,YAAW,EAAOkB,EAAYZ,SAAUY,EAAYX,OAGxE,EAAKH,SAAS,CACVqE,YAAaK,IAEjByK,EAAKI,OAAOK,QAAQhQ,YAAW,EAAM8E,EAAIxE,SAAUwE,EAAIvE,OAxC5C,EA4CnBI,eAAiB,SAACyO,GAAD,OAAaG,EAAKC,KAAKQ,QAAQb,WAAWC,IA5CxC,EA8CnBxO,OAAS,WACL,MACI,CACI,kBAAC,EAAD,CAAQqP,IAAKV,EAAKI,OAAQvK,IAAI,MAC9B,kBAAC,EAAD,CAAK6K,IAAKV,EAAKK,IAAKxK,IAAI,MACxB,kBAAC,EAAD,CAAM6K,IAAKV,EAAKC,KAAMH,KAAK,aAAajK,IAAI,MAC5C,kBAAC,EAAD,CAAQ6K,IAAKV,EAAKG,OAAQtK,IAAI,QAlDtC,EAAKlE,YAAc,CACf0B,OAAQ,EACRtC,SAAU,QACVuN,MAAO,oBACPC,UAAW,OACXC,SAAU,MACVC,IAAK,IAAIpB,KACTqB,IAAK,EACLE,SAAU,cACV5N,IAAK,mBACL2P,cAAe,yBACfC,OAAQ,SAGZ,EAAK1P,MAAQ,CACTgE,YAAa,EAAKvD,aAEtBR,EAAG,eAnBY,E,UADLS,IAAMC,WCDxBgP,IAASxP,OAAO,kBAAC,EAAD,MACZkK,SAASC,cAAc,W","file":"static/js/main.e1a6ba69.chunk.js","sourcesContent":["//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Header = () => {\r\n//    return (\r\n//        <header className=\"subblock boxShow\">\r\n//            <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n//            <div id=\"titleArea\">\r\n//                <NavLink to=\"/\">\r\n//                    <h1 id=\"title\">FoodTracker</h1>\r\n//                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n//                </NavLink>\r\n//            </div>\r\n//            <div id=\"profileArea\" className=\"boxShow\">\r\n//                <NavLink to=\"/Login\">\r\n//                    Guest<br />\r\n//                    <img src=\"SitePics/profileEmpty.png\" alt=\"[NO PIC]\" />\r\n//                </NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Register\">Register</NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Login\">Login</NavLink>\r\n//            </div>\r\n//        </header>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\nimport { app } from '../App';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            username: app.defaultUser.username,\r\n            pic: app.defaultUser.pic\r\n        };\r\n    }\r\n\r\n    updateUser = (newIsLogged, newUsername, newPic) => {\r\n        this.setState({\r\n            isLogged: newIsLogged,\r\n            username: newUsername,\r\n            pic: newPic\r\n        });\r\n    }\r\n\r\n    onLogClick = () => {\r\n        const { isLogged } = this.state;\r\n\r\n        if (isLogged) {\r\n            app.updateUser(null);\r\n            app.changeMainPage(\"Home\");\r\n        }\r\n        else\r\n            app.changeMainPage(\"Login\");\r\n    }\r\n\r\n    render = () => {\r\n        const { isLogged, username, pic } = this.state;\r\n\r\n        return (\r\n            <header className=\"subblock boxShow\">\r\n                <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n                <div onClick={() => app.changeMainPage(\"Home\")} id=\"titleArea\">\r\n                    <h1 id=\"title\">FoodTracker</h1>\r\n                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n                </div>\r\n                <div id=\"profileArea\" className=\"boxShow\">\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n                        {username}\r\n                        <br />\r\n                        <img src={`UserPics/${pic}`} alt=\"[NO PIC]\" />\r\n                    </span>\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")} className=\"navlink\">\r\n                        {isLogged ? \"Profile\" : \"Register\"}\r\n                    </span>\r\n                    <span onClick={this.onLogClick} className=\"navlink\">\r\n                        {isLogged ? \"Logout\" : \"Login\"}\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Nav = () => {\r\n//    return (\r\n//        <nav className=\"subblock boxShow\">\r\n//            <NavLink className=\"navlink textHigh\" to=\"/DailyMeals\">Daily Meals</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourFood\">Your Food</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourPlans\">Your Plans</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourStats\">Your Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalStats\">Global Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalData\">Global Data</NavLink>\r\n//        </nav>\r\n//    );\r\n//}\r\n\r\nclass Nav extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <nav className=\"subblock boxShow\">\r\n                <span onClick={() => app.changeMainPage(\"DailyMeals\")} className=\"navlink textHigh\">Daily Meals</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourFood\")} className=\"navlink textHigh\">Your Food</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourPlans\")} className=\"navlink textHigh\">Your Plans</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourStats\")} className=\"navlink textHigh\">Your Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalStats\")} className=\"navlink textHigh\">Global Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalData\")} className=\"navlink textHigh\">Global Data</span>\r\n            </nav>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>WELCOME HOME!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass FoodEntry extends React.Component {\r\n    static defaultFoodEntry = {\r\n        //entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nobody\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: null, price: 0,\r\n        isdish: false,\r\n        note: null,\r\n        amount: 1,\r\n        measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let foodEntry;\r\n        if (props.foodEntry)\r\n            foodEntry = props.foodEntry;\r\n        else if (props.foodItem) {\r\n            foodEntry = props.foodItem;\r\n            foodEntry.amount = props.amount;\r\n            foodEntry.measure = props.measure;\r\n        }\r\n        else\r\n            foodEntry = { ...FoodEntry.defaultFoodEntry };\r\n\r\n        this.state = {\r\n            foodEntry: foodEntry\r\n        };\r\n\r\n        this.state.fatRes = this.getMacroRes(\"fat\");\r\n        this.state.carbsRes = this.getMacroRes(\"carbs\");\r\n        this.state.proteinRes = this.getMacroRes(\"protein\");\r\n    }\r\n\r\n    getMacroRes = (mstr) => {\r\n        const { amount, measure, sizeinfo } = this.state.foodEntry;\r\n        if (measure === \"Pieces\")\r\n            if (sizeinfo === null)\r\n                return (this.state.foodEntry[mstr] * amount).toFixed(1);\r\n            else {\r\n                return (this.state.foodEntry[mstr] * amount * sizeinfo / 100).toFixed(1);\r\n            }\r\n        else if (measure === \"Grams\")\r\n            return (this.state.foodEntry[mstr] * amount / 100).toFixed(1);\r\n    };\r\n\r\n    render = () => {\r\n        const { foodEntry, fatRes, carbsRes, proteinRes } = this.state;\r\n        const { foodname, brand, amount, fat, carbs, protein } = foodEntry;\r\n\r\n        return (\r\n            <div className={\"foodEntry \" + this.props.className}>\r\n                <span className=\"amount\">{amount}</span>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"macroRes\">{`${fatRes}/${carbsRes}/${proteinRes}`}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { fatRes, carbsRes, proteinRes } = this.state;\r\n\r\n        if (this.props.addToMeal) {\r\n            this.props.addToMeal(fatRes, carbsRes, proteinRes);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FoodEntry;","import React from \"react\";\r\n\r\nclass NoteView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            note: props.note,\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { isSelected, note } = this.state;\r\n        const { score, title, notetext } = note;\r\n\r\n        return (\r\n            <div onClick={(ev)=>this.props.selectedChanged(ev,this)} className={\"noteView boxShow\" + (isSelected ? \" nSelected\" : \"\")}>\r\n                <img src=\"SitePics/starX.png\" alt={\"S=\" + (score)} />\r\n                <span>{title}</span>\r\n                <span>{\"--\" + (notetext ? notetext : \"<Empty>\")}</span>\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default NoteView;","import React from \"react\";\r\nimport NoteView from './NoteView';\r\nimport { app } from '../App';\r\n\r\nclass Note extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            note: props.note,\r\n\r\n            isEdit: false,\r\n            isEditValues: false,\r\n\r\n            selectedNoteView: null,\r\n            noteViews: [],\r\n            noteViewsIsLoading: true,\r\n            noteViewCounter: 0,\r\n            searchCounter: 0,\r\n\r\n            newScore: 0,\r\n            newTitle: \"\",\r\n            newText: \"\"\r\n        };\r\n        this.options = [];\r\n        for (let i = -5; i <= 5; i++)\r\n            this.options.push(<option key={i}>{i}</option>);\r\n    }\r\n\r\n    onEditAddNote = (isValues) => {\r\n        if (isValues)\r\n            this.setState({\r\n                isEdit: true,\r\n                isEditValues: true\r\n            });\r\n        else {\r\n            this.setState({\r\n                isEdit: true,\r\n                isEditValues: false\r\n            });\r\n            this.loadNoteViews(\"\");\r\n        }\r\n    };\r\n\r\n    loadNoteViews = (searchTerms) => {\r\n        this.setState({\r\n            noteViews: [],\r\n            noteViewsIsLoading: true,\r\n            searchCounter: this.state.searchCounter + 1\r\n        });\r\n        const sc = this.state.searchCounter + 1;\r\n\r\n        setTimeout(() => this.searchNoteViews(searchTerms, sc), 150);\r\n    };\r\n\r\n    searchNoteViews = async (searchTerms, searchCounter) => {\r\n        if (searchCounter < this.state.searchCounter)\r\n            return;\r\n\r\n        let { noteViewCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res = await fetch(app.getServerURL() + \"/dailymeals/notesearch\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"userid\": userId,\r\n                \"search\": searchTerms\r\n            }\r\n        });\r\n        res = await res.json();\r\n        if (searchCounter < this.state.searchCounter)\r\n            return;\r\n\r\n        const noteViews = [];\r\n        let first = true;\r\n        for (let n of res)\r\n            if (!first)\r\n                noteViews.push(<NoteView note={n} selectedChanged={this.onSelectedNoteViewChanged} key={noteViewCounter++} />);\r\n            else {\r\n                noteViews.push(<NoteView note={n} signalSelect={true} selectedChanged={this.onSelectedNoteViewChanged} key={noteViewCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            noteViews: noteViews,\r\n            noteViewCounter: noteViewCounter,\r\n            noteViewsIsLoading: false\r\n        });\r\n    };\r\n\r\n    onSelectedNoteViewChanged = (ev, sender) => {\r\n        const { selectedNoteView } = this.state;\r\n\r\n        if (sender !== selectedNoteView) {\r\n            if (selectedNoteView)\r\n                selectedNoteView.toggleSelected();\r\n            sender.toggleSelected();\r\n\r\n            this.setState({\r\n                selectedNoteView: sender,\r\n            });\r\n        }\r\n    }\r\n\r\n    setNote = () => {\r\n        const { isEditValues, newScore, newTitle, newText } = this.state;\r\n\r\n        if (isEditValues) {\r\n            this.props.updateAttach({\r\n                score: newScore,\r\n                title: newTitle === \"\" ? \"Untitled\" : newTitle,\r\n                notetext: newText\r\n            });\r\n            this.setState({\r\n                note: {\r\n                    score: newScore,\r\n                    title: newTitle === \"\" ? \"Untitled\" : newTitle,\r\n                    notetext: newText\r\n                },\r\n                isEdit: false\r\n            });\r\n        }\r\n        else {\r\n            this.props.updateAttach(this.state.selectedNoteView.state.note);\r\n            this.setState({\r\n                note: this.state.selectedNoteView.state.note,\r\n                isEdit: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { isEdit, isEditValues, note, noteViews, noteViewsIsLoading } = this.state;\r\n        if (this.props.isMin)\r\n            return <hr />;\r\n\r\n        if (isEdit) {\r\n            return (\r\n                <div className=\"noteEdit boxShow\">\r\n                    <div className=\"editChoices\">\r\n                        <input onChange={(ev) => this.onEditAddNote(false)} type=\"radio\" name={this._reactInternalFiber.key + \"_radio\"} value=\"select\" checked={!isEditValues} />Select\r\n                    <input onChange={(ev) => this.onEditAddNote(true)} type=\"radio\" name={this._reactInternalFiber.key + \"_radio\"} value=\"values\" checked={isEditValues} />Values\r\n                    <button onClick={() => { this.setState({ isEdit: false }) }}>Cancel</button>\r\n                    </div>\r\n                    {isEditValues\r\n                        ? <div className=\"newNote\">\r\n                            <span>Score:</span>\r\n                            <div>\r\n                                <select onChange={(ev) => this.setState({\r\n                                    newScore: ev.currentTarget.value\r\n                                })} defaultValue={0}>\r\n                                    {this.options}\r\n                                </select>\r\n                                <button onClick={this.setNote}>Set New Note</button>\r\n                            </div>\r\n                            <span>Title:</span><input onChange={(ev) => this.setState({ newTitle: ev.currentTarget.value })} type=\"text\" />\r\n                            <span>Text:</span><textarea onChange={(ev) => this.setState({ newText: ev.currentTarget.value })} />\r\n                        </div>\r\n                        : < div>\r\n                            <div className=\"noteSearch\">\r\n                                Search:<input onChange={(ev) => this.loadNoteViews(ev.currentTarget.value)} type=\"text\" />\r\n                                <button onClick={this.setNote}>Select Note</button>\r\n                            </div>\r\n                            <div className=\"noteSearchArea\">\r\n                                {noteViewsIsLoading ? \"LOADING...\" : noteViews}\r\n                            </div>\r\n                        </div>}\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            if (note) {\r\n                const { score, title, notetext } = note;\r\n\r\n                return (\r\n                    <div className=\"note boxShow\">\r\n                        <img src=\"SitePics/star.png\" alt={\"S=\" + (score)} className=\"scoreImg\" />\r\n                        <img onClick={this.props.removeNote} src=\"SitePics/icons8-close-window-16.png\"\r\n                            alt=\"X\" className=\"managerImg\" />\r\n                        <img onClick={() => this.onEditAddNote(true)} src=\"SitePics/icons8-edit-16.png\"\r\n                            alt=\"New\" className=\"managerImg\" />\r\n                        <span className=\"title\">{title}</span>\r\n                        <span className=\"notetext\">{notetext ? \"--\" + notetext : \"\"}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n                return (\r\n                    <div className=\"note boxShow\">\r\n                        No Note<img className=\"managerImg\" src=\"SitePics/icons8-plus-16.png\" alt=\"New\" onClick={this.onEditAddNote} />\r\n                    </div >\r\n                );\r\n    };\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport FoodEntry from './FoodEntry';\r\nimport Note from './Note';\r\n\r\nclass MealEntry extends React.Component {\r\n    static defaultMealEntry = {\r\n        mealname: \"New Meal\",\r\n        portion: 1,\r\n        note: null,\r\n        foodentries: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mealEntry: props.mealEntry ? props.mealEntry : { ...MealEntry.defaultMealEntry },\r\n            foodEntries: [],\r\n            foodCounter: 0,\r\n            isHighlighted: false,\r\n            isMin: false,\r\n            fat: 0,\r\n            carbs: 0,\r\n            protein: 0\r\n        };\r\n\r\n        if (props.mealEntry)\r\n            for (let f of props.mealEntry.foodentries) {\r\n                this.state.foodEntries.push(<FoodEntry\r\n                    foodEntry={f}\r\n                    className=\"lineDown\"\r\n                    addToMeal={this.addNewFoodEntryMacros}\r\n                    key={this.state.foodCounter} />);\r\n                this.state.foodCounter++;\r\n            }\r\n    }\r\n\r\n    addNewFoodEntry = (ev, newFoodEntry) => {\r\n        const { foodEntries } = this.state;\r\n        let { foodCounter } = this.state;\r\n\r\n        foodEntries.push(<FoodEntry foodEntry={newFoodEntry} addToMeal={this.addNewFoodEntryMacros} key={foodCounter++} className=\"lineDown\" />);\r\n\r\n        this.setState({\r\n            foodEntries: foodEntries,\r\n            foodCounter: foodCounter,\r\n        });\r\n    };\r\n\r\n    toggleHighlight = () => this.setState({\r\n        isHighlighted: !this.state.isHighlighted\r\n    });\r\n\r\n    toggleMinMax = (ev) => {\r\n        this.setState({\r\n            isMin: !this.state.isMin\r\n        });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    onUpdateAttach = (newNote) => {\r\n        const { mealEntry } = this.state;\r\n\r\n        mealEntry.note = newNote;\r\n        this.setState({\r\n            dayEntry: mealEntry\r\n        });\r\n    };\r\n\r\n    onRemoveNote = () => {\r\n        console.log(\"ASDAS\");\r\n        const { mealEntry } = this.state;\r\n\r\n        mealEntry.note = null;\r\n        this.setState({\r\n            mealEntry: mealEntry\r\n        });\r\n        this.props.updateDay();\r\n    };\r\n\r\n    addNewFoodEntryMacros = (newfat, newcarbs, newprotein) => {\r\n        const { portion } = this.state.mealEntry;\r\n\r\n        this.state.fat += newfat * portion;\r\n        this.state.carbs += newcarbs * portion;\r\n        this.state.protein += newprotein * portion;\r\n        this.setState({});\r\n\r\n        this.props.addToDay(newfat * portion, newcarbs * portion, newprotein * portion);\r\n    };\r\n\r\n    render = () => {\r\n        const { mealEntry, isHighlighted, isMin, foodEntries, fat, carbs, protein } = this.state;\r\n        const { mealname, note, portion } = mealEntry;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"mealArea boxShow\" + (isHighlighted ? \" highlight\" : \"\")}>\r\n                <div className=\"mealTitle\">\r\n                    {`${mealname} (x${portion})`}\r\n                    <img onClick={(ev) => this.props.removeMeal(ev, this)} src=\"SitePics/icons8-cancel-20.png\" alt=\"X\"\r\n                        className=\"managerImg\" />\r\n                    <img onClick={this.toggleMinMax} src={isMin ? \"SitePics/icons8-plus-20.png\" : \"SitePics/icons8-minus-20.png\"} alt={isMin ? \"+\" : \"-\"}\r\n                        className=\"managerImg\" />\r\n                </div>\r\n                <Note removeNote={this.onRemoveNote} updateAttach={this.onUpdateAttach} note={note}\r\n                    key={this._reactInternalFiber.key + (note ? \"_note\" : \"0\")} isMin={isMin} />\r\n                <div className={\"foodEntries lineDown\" + (isMin ? \" hidden\" : \"\")}>\r\n                    {foodEntries}\r\n                </div>\r\n                <div className=\"mealTotal\">\r\n                    <span>Meal Total:</span>\r\n                    <span>{`${fat.toFixed(1)}|${carbs.toFixed(1)}|${protein.toFixed(1)}`}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n        else\r\n            this.setState({});\r\n    };\r\n}\r\n\r\nexport default MealEntry;","import React from 'react';\r\n\r\nclass FoodItem extends React.Component {\r\n    static defaultFoodItem = {\r\n        //entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nowhere\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: \"empty.png\", price: 0,\r\n        isdish: false,\r\n        note: null,\r\n        //measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            foodItem: (props.foodItem) ? props.foodItem : { ...FoodItem.defaultFoodItem },\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { foodItem, isSelected } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, sizeinfo } = foodItem;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"foodItem lineDown\" + (isSelected ? \" feSelected\" : \"\")}>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"per\">{sizeinfo === null ? `1` : `100g`}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default FoodItem;","import React from 'react';\r\nimport \"../Css/DailyMeals.css\";\r\n\r\nimport MealEntry from '../Components/MealEntry';\r\nimport FoodEntry from '../Components/FoodEntry';\r\nimport FoodItem from '../Components/FoodItem';\r\nimport Note from '../Components/Note';\r\nimport { app } from '../App';\r\n\r\nconst dateToStr = (dateObj) => {\r\n    return `${dateObj.getFullYear()}-${dateObj.getMonth() + 1 > 9 ? (dateObj.getMonth() + 1).toString() : \"0\" + (dateObj.getMonth() + 1).toString()}-${dateObj.getDate() > 9 ? dateObj.getDate().toString() : \"0\" + dateObj.getDate().toString()}`;\r\n};\r\n\r\nclass DailyMeals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.newFoodKey = \"mustchange\";\r\n        this.state = {\r\n            selectedDay: dateToStr(new Date()),\r\n            dayEntry: {},\r\n            dayFat: 0,\r\n            dayCarbs: 0,\r\n            dayProtein: 0,\r\n\r\n            mealEntries: [],\r\n            mealCounter: 0,\r\n            selectedMeal: null,\r\n            mealareaIsLoading: true,\r\n\r\n            selectedFood: null,\r\n            sFoodItems: [],\r\n            sFoodCounter: 0,\r\n            searchareaIsLoading: true,\r\n            searchCounter: 0,\r\n            amount: \"\",\r\n            measure: \"---\",\r\n\r\n            newFoodForm: false,\r\n            newFoodItem: {\r\n                foodname: \"\",\r\n                brand: \"\",\r\n                fat: 0, carbs: 0, protein: 0,\r\n                price: 0,\r\n                sizeinfo: 100,\r\n                isdish: false,\r\n                pic: \"empty.png\",\r\n                userid: 0,\r\n                noteid: null,\r\n            },\r\n\r\n            selectedFoodDetails: null,\r\n            composition: []\r\n        };\r\n\r\n        this.loadDailyMeals(this.state.selectedDay);\r\n        this.loadSFoodItems(\"\", false);\r\n    }\r\n\r\n    loadDailyMeals = (day) => {\r\n        this.setState({\r\n            mealEntries: [],\r\n            selectedMeal: null,\r\n            mealareaIsLoading: true,\r\n            dayFat: 0,\r\n            dayCarbs: 0,\r\n            dayProtein: 0\r\n        });\r\n\r\n        ; (async () => {\r\n            let { mealCounter } = this.state;\r\n            //If app.currentUser is Guest pretend it's SV\r\n            const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"reqdate\": day,\r\n                    \"userid\": userId,\r\n                }\r\n            });\r\n            res = await res.json();\r\n\r\n            const mealEntries = [];\r\n            let first = true;\r\n            for (let m of res.meals)\r\n                if (!first)\r\n                    mealEntries.push(<MealEntry\r\n                        addToDay={this.addNewFoodEntryMacros}\r\n                        selectedChanged={this.onSelectedMealChanged}\r\n                        removeMeal={this.onRemoveMeal}\r\n                        mealEntry={m}\r\n                        updateDay={this.updateSelectedMealNote}\r\n                        key={mealCounter++} />);\r\n                else {\r\n                    mealEntries.push(<MealEntry\r\n                        signalSelect={true}\r\n                        addToDay={this.addNewFoodEntryMacros}\r\n                        selectedChanged={this.onSelectedMealChanged}\r\n                        removeMeal={this.onRemoveMeal}\r\n                        mealEntry={m}\r\n                        updateDay={this.updateSelectedMealNote}\r\n                        key={mealCounter++} />);\r\n                    first = false;\r\n                }\r\n\r\n            this.setState({\r\n                selectedDay: day,\r\n                dayEntry: res,\r\n                mealEntries: mealEntries,\r\n                mealCounter: mealCounter,\r\n                mealareaIsLoading: false,\r\n            });\r\n        })();\r\n    }\r\n\r\n    loadSFoodItems = (searchTerms, isAll) => {\r\n        this.setState({\r\n            sFoodItems: [],\r\n            searchareaIsLoading: true,\r\n            searchCounter: this.state.searchCounter + 1\r\n        });\r\n        const xx = this.state.searchCounter + 1;\r\n\r\n        setTimeout(async (searchCounter = xx) => {\r\n            if (searchCounter < this.state.searchCounter)\r\n                return;\r\n\r\n            let { sFoodCounter } = this.state;\r\n            //If app.currentUser is Guest pretend it's SV\r\n            const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n            let res;\r\n            res = await fetch(app.getServerURL() + \"/dailymeals/foodsearch\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"userid\": userId,\r\n                    \"search\": searchTerms,\r\n                    \"isall\": isAll\r\n                }\r\n            });\r\n            res = await res.json();\r\n            if (searchCounter < this.state.searchCounter)\r\n                return;\r\n\r\n            const sFoodItems = [];\r\n            let first = true;\r\n            for (let f of res)\r\n                if (!first)\r\n                    sFoodItems.push(<FoodItem\r\n                        selectedChanged={this.onSelectedFoodChanged}\r\n                        foodItem={f}\r\n                        key={sFoodCounter++} />);\r\n                else {\r\n                    sFoodItems.push(<FoodItem\r\n                        signalSelect={true}\r\n                        selectedChanged={this.onSelectedFoodChanged}\r\n                        foodItem={f}\r\n                        key={sFoodCounter++} />);\r\n                    first = false;\r\n                }\r\n\r\n            this.setState({\r\n                selectedFood: first ? null : this.state.selectedFood,\r\n                measure: first ? \"---\" : this.state.measure,\r\n                sFoodItems: sFoodItems,\r\n                sFoodCounter: sFoodCounter,\r\n                searchareaIsLoading: false\r\n            });\r\n        }, 150);\r\n    };\r\n\r\n    onCommit = (ev) => {\r\n        ; (async (searchCounter) => {\r\n            const { dayEntry, selectedDay } = this.state;\r\n            //IF Guest assume SV\r\n            const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n            const dayPutReq = dayEntry;\r\n            dayPutReq.userid = userId;\r\n            dayPutReq.date = selectedDay;\r\n\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals\", {\r\n                method: \"put\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(dayPutReq)\r\n            });\r\n            res = await res.json();\r\n\r\n            this.loadDailyMeals(this.state.selectedDay);\r\n\r\n            alert(`Successfully entered date for day ${selectedDay}!\\n --You can view resulting entry in the console`);\r\n            console.log(res);\r\n        })();\r\n    };\r\n\r\n    onAddNewMeal = (ev) => {\r\n        const { mealEntries, dayEntry, newFoodForm } = this.state;\r\n        let { mealCounter } = this.state;\r\n\r\n        const newMPortion = document.querySelector(\".newMPortion\");\r\n        if (isNaN(newMPortion.value)) {\r\n            alert(\"Must Enter Valid Number for Portion!\");\r\n            newMPortion.value = \"\";\r\n            return;\r\n        }\r\n        const newMName = document.querySelector(\".newMName\");\r\n        const newMeal = {\r\n            mealname: newMName.value === \"\" ? newMName.placeholder : newMName.value,\r\n            portion: newMPortion.value === \"\" ? newMPortion.placeholder : newMPortion.value,\r\n            noteid: null,\r\n            foodentries: []\r\n        };\r\n\r\n        mealEntries.push(<MealEntry\r\n            signalSelect={true}\r\n            mealEntry={newMeal}\r\n            addToDay={this.addNewFoodEntryMacros}\r\n            selectedChanged={this.onSelectedMealChanged}\r\n            removeMeal={this.onRemoveMeal}\r\n            key={mealCounter}\r\n        />);\r\n\r\n        newMeal.key = mealCounter;\r\n        dayEntry.meals.push(newMeal);\r\n\r\n        newMName.value = \"\";\r\n        newMPortion.value = \"\";\r\n        this.setState({\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter + 1,\r\n            dayEntry: dayEntry\r\n        });\r\n        if (!newFoodForm)\r\n            document.querySelector(\"#search\").select();\r\n    };\r\n\r\n    onRemoveMeal = (ev, sender) => {\r\n        const { selectedMeal, mealEntries, dayEntry } = this.state;\r\n\r\n        dayEntry.meals = dayEntry.meals.filter((m) => !((m.mealid && m.mealid === sender.state.mealEntry.mealid)\r\n            || (m.key !== undefined && m.key.toString() === sender._reactInternalFiber.key)));\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries.filter((meal) => meal.key !== sender._reactInternalFiber.key),\r\n            dayEntry: dayEntry\r\n        });\r\n\r\n\r\n        if (selectedMeal !== null && selectedMeal === sender)\r\n            this.setState({\r\n                selectedMeal: null\r\n            });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    onSelectedMealChanged = (ev, sender) => {\r\n        const { selectedMeal } = this.state;\r\n\r\n        if (sender !== selectedMeal) {\r\n            if (selectedMeal)\r\n                selectedMeal.toggleHighlight();\r\n            sender.toggleHighlight();\r\n\r\n            this.setState({\r\n                selectedMeal: sender\r\n            });\r\n        }\r\n    };\r\n\r\n    addNewFoodEntryMacros = (newfat, newcarb, newprotein) => {\r\n        this.state.dayFat += newfat;\r\n        this.state.dayCarbs += newcarb;\r\n        this.state.dayProtein += newprotein;\r\n        this.setState({});\r\n    };\r\n\r\n    onRemoveNote = () => {\r\n        const { dayEntry } = this.state;\r\n\r\n        dayEntry.note = null;\r\n        this.setState({\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    updateSelectedMealNote = () => {\r\n        const { dayEntry, selectedMeal } = this.state;\r\n\r\n        for (let m of dayEntry.meals)\r\n            if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                || (m.key !== undefined && selectedMeal._reactInternalFiber.key === m.key.toString())) {\r\n                m.note = selectedMeal.state.mealEntry.note;\r\n                break;\r\n            }\r\n\r\n        this.setState({\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    onAddNewFoodEntry = (ev) => {\r\n        const { selectedMeal, selectedFood, dayEntry, amount, measure, newFoodForm, newFoodItem } = this.state;\r\n\r\n        if (selectedMeal === null) {\r\n            alert(\"Must select a Meal !\");\r\n            return;\r\n        }\r\n        if (newFoodForm) {\r\n            if (newFoodItem.foodname === \"\") {\r\n                alert(\"New Food must have a Name !\");\r\n                return;\r\n            }\r\n            const sum = Number(newFoodItem.fat) + Number(newFoodItem.carbs) + Number(newFoodItem.protein);\r\n            if (isNaN(sum) || (measure === \"Grams\" && (sum > 100 || sum <= 0))) {\r\n                alert(\"Macro value are wrong!\");\r\n                return\r\n            }\r\n        }\r\n        else if (selectedFood === null) {\r\n            alert(\"Must select a Food Item !\");\r\n            return;\r\n        }\r\n        if (isNaN(amount)) {\r\n            alert(\"Must Enter Valid Number for Amount!\");\r\n            this.setState({\r\n                amount: \"\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newFoodEntry = newFoodForm ? newFoodItem : selectedFood.state.foodItem;\r\n        newFoodEntry.amount = amount ? amount : document.querySelector(\"#amountSize\").placeholder;\r\n        newFoodEntry.measure = measure;\r\n\r\n        selectedMeal.addNewFoodEntry(ev, newFoodEntry);\r\n        for (let m of dayEntry.meals)\r\n            if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                || (m.key !== undefined && selectedMeal._reactInternalFiber.key === m.key.toString())) {\r\n                m.foodentries.push(newFoodEntry);\r\n                break;\r\n            }\r\n\r\n        this.setState({\r\n            dayEntry: dayEntry,\r\n            newFoodForm: false,\r\n            newFoodItem: {\r\n                foodname: \"\",\r\n                brand: \"\",\r\n                fat: 0, carbs: 0, protein: 0,\r\n                price: 0,\r\n                sizeinfo: 100,\r\n                isdish: false,\r\n                pic: \"empty.png\",\r\n                userid: 0,\r\n                noteid: null,\r\n            }\r\n        });\r\n        setTimeout(() => document.querySelector(\"#search\").select(), 0);\r\n    };\r\n\r\n    onSelectedFoodChanged = (ev, sender) => {\r\n        const { selectedFood } = this.state;\r\n\r\n        if (sender !== selectedFood) {\r\n            if (selectedFood)\r\n                selectedFood.toggleSelected();\r\n            sender.toggleSelected();\r\n            if (document.activeElement !== document.querySelector(\"#search\"))\r\n                document.querySelector(\"#search\").select();\r\n\r\n            this.setState({\r\n                selectedFood: sender,\r\n                amount: \"\",\r\n                measure: sender.state.foodItem.sizeinfo === null ? \"Pieces\" : \"Grams\",\r\n                selectedFoodDetails: null\r\n            });\r\n\r\n            ; (async () => {\r\n                let { sFoodCounter, composition } = this.state;\r\n                const { foodid, isdish, noteid } = sender.state.foodItem;\r\n                let res = await fetch(app.getServerURL() + \"/dailymeals/fooddetails\", {\r\n                    method: \"get\",\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"foodid\": foodid,\r\n                        \"isdish\": isdish,\r\n                        \"noteid\": noteid ? noteid : null\r\n                    }\r\n                });\r\n                res = await res.json();\r\n\r\n                composition = [];\r\n                if (res.foodentries) {\r\n                    for (let f of res.foodentries)\r\n                        composition.push(<FoodEntry\r\n                            foodEntry={f}\r\n                            key={sFoodCounter++} />);\r\n                }\r\n\r\n                this.setState({\r\n                    selectedFoodDetails: res,\r\n                    sFoodCounter: sFoodCounter,\r\n                    composition: composition\r\n                });\r\n            })();\r\n        }\r\n    };\r\n\r\n    onUpdateAttach = (newNote) => {\r\n        const { dayEntry } = this.state;\r\n\r\n        dayEntry.note = newNote;\r\n        this.setState({\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    currentEntry = () => {\r\n        const { selectedFood, amount, measure, newFoodForm, newFoodItem } = this.state;\r\n\r\n        if (newFoodForm) {\r\n            this.newFoodKey = this.newFoodKey === \"mustchange\" ? \"willchange\" : \"mustchange\";\r\n            return <FoodEntry foodItem={newFoodItem}\r\n                amount={amount}\r\n                measure={measure}\r\n                key={this.newFoodKey} />\r\n        }\r\n        else\r\n            if (selectedFood) {\r\n                return <FoodEntry foodItem={selectedFood.state.foodItem}\r\n                    amount={amount ? amount : (selectedFood ? (measure === \"Pieces\" ? 1\r\n                        : selectedFood.state.foodItem.sizeinfo === 0 ? 100 : selectedFood.state.foodItem.sizeinfo) : 0)}\r\n                    measure={measure}\r\n                    key={selectedFood.state.foodItem.foodid.toString() + amount + measure} />\r\n            }\r\n            else\r\n                return <FoodEntry key={\"F0\"} />\r\n    };\r\n\r\n    changeNewFoodValue = (field, value) => {\r\n        const aux = this.state.newFoodItem;\r\n\r\n        if (field === \"per\") {\r\n            const psi = document.querySelector(\".PSInput\");\r\n            if (value === \"1Piece\") {\r\n                psi.disabled = true;\r\n                psi.value = \"\";\r\n                aux.sizeinfo = null;\r\n                this.state.amount = 1;\r\n            }\r\n            else {\r\n                document.querySelector(\".PSInput\").disabled = false;\r\n                psi.value = 100;\r\n                aux.sizeinfo = 100;\r\n                this.state.amount = 100;\r\n            }\r\n        }\r\n        else {\r\n            if (field === \"sizeinfo\")\r\n                value = value === \"\" ? null : value;\r\n            aux[field] = value;\r\n        }\r\n        this.setState({\r\n            newFoodItem: aux,\r\n            measure: aux.sizeinfo === null ? \"Pieces\" : \"Grams\",\r\n        });\r\n    };\r\n\r\n    onDayButtons = (ev, nrDays) => {\r\n        const { selectedDay } = this.state;\r\n\r\n        let d = new Date(selectedDay);\r\n        d.setDate(d.getDate() + nrDays);\r\n\r\n        this.loadDailyMeals(dateToStr(d));\r\n    }\r\n\r\n    onSearchKey = (ev) => {\r\n        const { selectedFood, sFoodItems } = this.state;\r\n\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#amountSize\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#search\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === 0)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i - 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === sFoodItems.length - 1)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i + 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onAmountKey = (ev) => {\r\n        console.log(this.state.dayEntry);\r\n\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#search\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#amountSize\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":     //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":   //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };//TODO?\r\n\r\n    render = () => {\r\n        const { selectedDay, mealEntries, selectedFood, amount, measure, dayEntry, selectedFoodDetails, composition, mealareaIsLoading, searchareaIsLoading, sFoodItems, dayFat, dayCarbs, dayProtein, newFoodForm } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, price, pic } = selectedFood ? selectedFood.state.foodItem : FoodItem.defaultFoodItem;\r\n\r\n        return (\r\n            <main className=\"mainDailyMeals boxShow\">\r\n                <div id=\"dayArea\" className=\"subblock boxShow\">\r\n                    <div className=\"dayHeader\">\r\n                        <div className=\"datepick boxShow\">\r\n                            <label className=\"textHigh\">Day: </label>\r\n                            <button disabled={mealareaIsLoading} onClick={(ev) => this.onDayButtons(ev, -1)} className=\"ftButton\" > {\"<\"}</button>\r\n                            <input disabled={mealareaIsLoading} onChange={(ev) => this.loadDailyMeals(ev.currentTarget.value)} id=\"selectedDay\" type=\"date\" value={selectedDay} />\r\n                            <button disabled={mealareaIsLoading} onClick={(ev) => this.onDayButtons(ev, 1)} className=\"ftButton\">{\">\"}</button>\r\n                        </div>\r\n                        {mealareaIsLoading ? \"LOADING...\"\r\n                            : <Note removeNote={this.onRemoveNote} note={dayEntry.note} key={\"D\" + (dayEntry.note ? dayEntry.note.noteid : \"D0\")} updateAttach={this.onUpdateAttach} />}\r\n                    </div>\r\n                    <div className=\"mealsArea\">\r\n                        {mealareaIsLoading ? \"LOADING...\" : mealEntries}\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"dayTotal\">\r\n                        <span>Day Total:</span>\r\n                        <span>{`${dayFat.toFixed(1)}||${dayCarbs.toFixed(1)}||${dayProtein.toFixed(1)}`}</span>\r\n                    </div>\r\n                    <button disabled={mealareaIsLoading} onClick={this.onCommit} className=\"ftButton\">COMMIT DAY!</button>\r\n                </div>\r\n\r\n\r\n                <div id=\"addFoodArea\" className=\"subblock boxShow\">\r\n                    {newFoodForm\r\n                        ? <div className=\"newFoodForm\">\r\n                            <div className=\"newFoodHeader\">\r\n                                <label className=\"textHigh\">Create New Food:</label>\r\n                                <button onClick={() => this.setState({ newFoodForm: false })} className=\"ftButton\">\r\n                                    +Select</button>\r\n                            </div>\r\n                            <span>Name:</span><input onChange={(ev) => this.changeNewFoodValue(\"foodname\", ev.currentTarget.value)} placeholder=\"name\" type=\"text\" />\r\n                            <span>Brand:</span><input onChange={(ev) => this.changeNewFoodValue(\"brand\", ev.currentTarget.value)} placeholder=\"brand\" type=\"text\" />\r\n                            <span>Macros:</span>\r\n                            <div>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"fat\", ev.currentTarget.value)} type=\"text\" placeholder=\"0\" /><span>Fat</span>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"carbs\", ev.currentTarget.value)} type=\"text\" placeholder=\"0\" /><span>Carbs</span>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"protein\", ev.currentTarget.value)} type=\"text\" placeholder=\"0\" /><span>Protein</span>\r\n                            </div>\r\n                            <span>Per:</span>\r\n                            <div><select onChange={(ev) => this.changeNewFoodValue(\"per\", ev.currentTarget.value)} className=\"smallerInput\">\r\n                                <option>100Grams</option>\r\n                                <option>1Piece</option>\r\n                            </select>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                <span>Piece Size:</span><input onChange={(ev) => this.changeNewFoodValue(\"sizeinfo\", ev.currentTarget.value)} className=\"PSInput smallerInput\" defaultValue=\"100\" placeholder=\"null\" type=\"text\" />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                            <span>Price:</span>\r\n                            <div>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"price\", ev.currentTarget.value)} className=\"smallerInput\" placeholder=\"0\" type=\"text\" />\r\n                                <div><span>Is Dish?</span><input onChange={(ev) => this.changeNewFoodValue(\"isdish\", ev.currentTarget.checked)} type=\"checkbox\" /></div>\r\n                            </div>\r\n                            <label className=\"afaInfo\">To add certain details (dish, composition, photo, note)or further edit foods go to Your Foods section.</label>\r\n                        </div>\r\n\r\n                        : [<div className=\"searchForm boxShow\" key=\"searchForm\">\r\n                            <label className=\"textHigh\">Search Food: </label>\r\n                            <input onChange={(ev) => this.loadSFoodItems(\r\n                                document.querySelector(\"#search\").value,\r\n                                ev.currentTarget.checked)}\r\n                                id=\"isAll\" type=\"checkbox\" />\r\n                            ALL\r\n                        <button onClick={() => this.setState({\r\n                                newFoodForm: true,\r\n                                selectedFood: null,\r\n                                measure: \"Grams\",\r\n                                amount: 100\r\n                            })} className=\"ftButton\">\r\n                                +New</button>\r\n                            <input onChange={(ev) => this.loadSFoodItems(\r\n                                ev.currentTarget.value,\r\n                                document.querySelector(\"#isAll\").checked)}\r\n                                onKeyDown={this.onSearchKey}\r\n                                id=\"search\" type=\"text\"\r\n                                placeholder=\"search terms\" />\r\n                        </div>,\r\n                        <div className=\"searchResults boxShow\" key=\"searchResults\">\r\n                            {searchareaIsLoading ? \"LOADING...\" : sFoodItems}\r\n                        </div>]}\r\n                    <div className=\"amountForm boxShow\">\r\n                        <label className=\"textHigh\">Amount: </label>{/*aaaaaaaaaaaaaaaaaa*/}\r\n                        <input disabled={searchareaIsLoading} id=\"amountSize\" type=\"text\" value={amount}\r\n                            onChange={(ev) => this.setState({ amount: ev.currentTarget.value })}\r\n                            onKeyDown={this.onAmountKey}\r\n                            placeholder={selectedFood ? (measure === \"Pieces\" ? 1\r\n                                : selectedFood.state.foodItem.sizeinfo === 0 ? 100 : selectedFood.state.foodItem.sizeinfo) : 0} />\r\n                        <select onChange={(ev) => this.setState({ measure: ev.currentTarget.value })} disabled={searchareaIsLoading} id=\"measureSelect\" value={measure} >\r\n                            <option className={selectedFood ? (selectedFood.state.foodItem.sizeinfo === null ? \"hidden\" : \"\") : \"hidden\"}>\r\n                                Grams</option>\r\n                            <option className={selectedFood ? (selectedFood.state.foodItem.sizeinfo === 0 ? \"hidden\" : \"\") : \"hidden\"}>\r\n                                Pieces</option>\r\n                            <option className=\"hidden\">---</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"searchEntry boxShow\">\r\n                        <label className=\"textHigh lineDown\">Current Entry:</label>\r\n                        {this.currentEntry()}\r\n                        <button disabled={searchareaIsLoading} onClick={this.onAddNewFoodEntry} className=\"ftButton\">ADD FOOD ENTRY</button>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"addMealArea\">\r\n                        <div>\r\n                            <label className=\"textHigh\">Meal Name:</label>\r\n                            <input className=\"newMName\" type=\"text\" placeholder={\"Meal\" + (mealEntries.length + 1)} />\r\n                            <label className=\"textHigh\">Portion:</label>\r\n                            <input className=\"newMPortion\" type=\"text\" placeholder=\"1\" />\r\n                        </div>\r\n                        <button disabled={mealareaIsLoading} onClick={this.onAddNewMeal} className=\"newMeal ftButton\">ADD NEW MEAL</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedFoodDetails ? (\r\n                    <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                        <div className=\"foodDetailsHeader\">\r\n                            <div className=\"textHigh boxShow\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</div>\r\n                            <Note removeNote={() => { }} note={selectedFoodDetails ? selectedFoodDetails.note : null}\r\n                                key={\"F\" + (selectedFoodDetails.note ? selectedFoodDetails.note.noteid : \"0\")} />\r\n                        </div>\r\n                        <div className=\"foodPic boxShow\">\r\n                            <img src={`FoodPics/${pic ? pic : \"empty.png\"}`} alt=\"[NO FOOD PIC]\" />\r\n                        </div>\r\n                        <div className=\"foodInfo\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr><th>Name</th><td colSpan=\"2\">{foodname}</td></tr>\r\n                                    <tr><th>Brand</th><td colSpan=\"2\">{brand ? brand : \"--\"}</td></tr>\r\n                                    <tr><th>Macro</th><th>100g</th><th>1p</th></tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr><td>Fat</td>\r\n                                        <td>{measure === \"Grams\" ? fat + \"g\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? fat + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Carbs</td>\r\n                                        <td>{measure === \"Grams\" ? carbs + \"g\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? carbs + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Protein</td>\r\n                                        <td>{measure === \"Grams\" ? protein + \"g\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? protein + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Calories</td>\r\n                                        <td>{measure === \"Grams\" ? (fat * 9 + protein * 4 + carbs * 4)\r\n                                            .toFixed(1)\r\n                                            + \"Kc\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? (fat * 9 + protein * 4 + carbs * 4)\r\n                                            .toFixed(1)\r\n                                            + \"Kc\" : \"--\"}</td></tr>\r\n                                    <tr><td>Price</td>\r\n                                        <td>{measure === \"Grams\" ? price + \"Lei\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? price + \"Lei\" : \"--\"}</td></tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"comp textHigh\">{composition.length > 0 ? \"Composition:\" : \"\"}</div>\r\n                            <div className=\"foodEntries boxShow\">\r\n                                {composition}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                            LOADING...\r\n                        </div>\r\n                    )\r\n                }\r\n            </main >\r\n        );\r\n    };\r\n}\r\n\r\nexport default DailyMeals;","import React from 'react';\r\n\r\nconst YourFood = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR FOOD!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourFood;","import React from 'react';\r\n\r\nconst YourPlans = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR PLANS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourPlans;","import React from 'react';\r\n\r\nconst YourStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourStats;","import React from 'react';\r\n\r\nconst GlobalStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalStats;","import React from 'react';\r\n\r\nconst GlobalData = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL DATA!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalData;","import React from 'react';\r\nimport \"../Css/RegLog.css\"; //TODO: Replace somehow! (this is just copy/pasted from register)\r\nimport { app } from '../App';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: app.state.currentUser\r\n        };\r\n    }\r\n\r\n    render = () => {    //TODO: Replace somehow! (this is just copy/pasted from register)\r\n        const { user } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <div id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">User Profile !</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: {user.username}</span>\r\n                        <span>Email: {user.email}</span>\r\n                        <span>First Name: {user.firstname}</span>\r\n                        <span>Last Name: {user.lastname}</span>\r\n                        <span>Date Of Birth: {user.dob}</span>\r\n                        <span>Sex: {user.sex===\"1\"?\"Male\":\"Female\"}</span>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src={`UserPics/${user.pic}`} alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea readOnly={true} value={user.describe}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Meal Plans: {user.defaultmeals}</span>\r\n                        <span>Diet Plans? </span>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            warningMsg: null\r\n        };\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        try {\r\n            ev.preventDefault();\r\n            const inputs = document.querySelectorAll(\"#logform input\");\r\n            const usernameText = inputs[0].value;\r\n            const passText = inputs[1].value;\r\n\r\n            let res = await fetch(app.getServerURL() + \"/login\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: usernameText,\r\n                    pass: passText\r\n                })\r\n            });\r\n            if (res.status === 200) {\r\n                res = await res.json();\r\n                if (typeof res === \"string\")\r\n                    this.setState({\r\n                        warningMsg: res\r\n                    });\r\n                else {\r\n                    app.updateUser(res);\r\n                    app.changeMainPage(\"Profile\");\r\n                }\r\n            }\r\n            else {\r\n                console.log(await res.json());\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"___________ERROR___________\\n\", err.message);\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onLogin} id=\"logform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Enter Username/Email and Password to Login!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username/Email: </span><input type=\"text\" name=\"username\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span>Remember Me? <input type=\"checkbox\" name=\"member\" /></span>\r\n                        <span className={this.state.warningMsg === null ? \"hidden\" : \"warning\"}>{this.state.warningMsg}</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"loglinks\">\r\n                        <NavLink to=\"/\">Forgot Password?</NavLink>\r\n                        <NavLink to=\"/Register\">New here? Go Register!</NavLink>\r\n                    </div>\r\n                    */}\r\n                    <div className=\"loglinks\">\r\n                        <span onClick={() => app.changeMainPage(\"Home\")}>Forgot Password?</span>\r\n                        <span onClick={() => app.changeMainPage(\"Register\")}>New here? Go Register!</span>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\n\r\nclass Register extends React.Component {\r\n\r\n    onRegister = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onClick={this.onRegister} id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Please Complete ALL fields to Register!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: </span><input type=\"text\" name=\"username\" />\r\n                        <span className=\"warning\">How DARE You, Sir!</span>\r\n                        <span>Email:</span> <input type=\"email\" name=\"email\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span className=\"detail\">Password must be at least 6characters long and have both numbers and letters!</span>\r\n                        <span>Confirm Password: </span><input type=\"password\" name=\"cpass\" />\r\n                        <span>First Name: </span><input type=\"text\" name=\"firstname\" />\r\n                        <span>Last Name: </span><input type=\"text\" name=\"lastname\" />\r\n                        <span>Date Of Birth: </span><input type=\"date\" name=\"dob\" />\r\n                        <div>\r\n                            <span>Sex: </span><input type=\"radio\" name=\"sex\" value=\"male\" /><span>Male </span>\r\n                            <input type=\"radio\" name=\"sex\" value=\"female\" /><span>Female</span>\r\n                        </div>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src=\"UserPics/profileEmpty.png\" alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea placeholder=\"Say who you are in a few short phrases..\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Diet Plans?</span>\r\n                        <select>\r\n                            <option>Paleo</option>\r\n                            <option>Keto</option>\r\n                            <option>Mediterranian</option>\r\n                            <option>Vegan</option>\r\n                            <option>Carnivore</option>\r\n                            <option>Low Carb</option>\r\n                            <option>Low Fat</option>\r\n                            <option>PSMF</option>\r\n                        </select>\r\n                        <span className=\"detail\">-Pick a Diet from list if any of them apply to You - Can always change it later!</span>\r\n                        <span className=\"detail\">(This Choice is simply for tracking stats - Will Not affect results &recommendations)</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>Error! Page does not exist!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Error;","//import { Route, Switch } from 'react-router-dom';\r\n//\r\n//const Main = () => {\r\n//    return (\r\n//        <Switch>\r\n//            <Route path=\"/\" component={Home} exact/>\r\n//            <Route path=\"/DailyMeals\" component={DailyMeals} />\r\n//            <Route path=\"/YourFood\" component={YourFood} />\r\n//            <Route path=\"/YourPlans\" component={YourPlans} />\r\n//            <Route path=\"/YourStats\" component={YourStats} />\r\n//            <Route path=\"/GlobalStats\" component={GlobalStats} />\r\n//            <Route path=\"/GlobalData\" component={GlobalData} />\r\n//            <Route path=\"/Login\" component={Login} />\r\n//            <Route path=\"/Register\" component={Register} />\r\n//            <Route component={Error} />\r\n//        </Switch>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\n\r\nimport Home from \"../MainPages/Home\";\r\nimport DailyMeals from '../MainPages/DailyMeals';\r\nimport YourFood from '../MainPages/YourFood';\r\nimport YourPlans from '../MainPages/YourPlans';\r\nimport YourStats from '../MainPages/YourStats';\r\nimport GlobalStats from '../MainPages/GlobalStats';\r\nimport GlobalData from '../MainPages/GlobalData';\r\nimport Profile from '../MainPages/Profile';\r\nimport Login from '../MainPages/Login';\r\nimport Register from '../MainPages/Register';\r\nimport Error from '../MainPages/Error';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: props.page ? props.page : \"Home\"\r\n        };\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { page } = this.state;\r\n\r\n        if (page !== newPage)\r\n            this.setState({\r\n                page: newPage\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        switch (this.state.page) {\r\n            case \"Home\":\r\n                return <Home />;\r\n            case \"DailyMeals\":\r\n                return <DailyMeals />;\r\n            case \"YourFood\":\r\n                return <YourFood />;\r\n            case \"YourPlans\":\r\n                return <YourPlans />;\r\n            case \"YourStats\":\r\n                return <YourStats />;\r\n            case \"GlobalStats\":\r\n                return <GlobalStats />;\r\n            case \"GlobalData\":\r\n                return <GlobalData />;\r\n            case \"Profile\":\r\n                return <Profile />;\r\n            case \"Register\":\r\n                return <Register />;\r\n            case \"Login\":\r\n                return <Login />;\r\n            default:\r\n                return <Error />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"subblock boxShow\">\r\n                <h3 id=\"author\">--Made by Rotariu Stefan<sub> - StravoS</sub></h3>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Sections/Header';\r\nimport Nav from './Sections/Nav';\r\nimport Main from './Sections/Main';\r\nimport Footer from './Sections/Footer';\r\nimport svData from './svData.json';\r\n\r\nconst refs = {\r\n    main: React.createRef(),\r\n    footer: React.createRef(),\r\n    header: React.createRef(),\r\n    nav: React.createRef()\r\n};\r\n\r\nlet app = null;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultUser = {\r\n            userid: 0,\r\n            username: \"Guest\",\r\n            email: \"guest@nomail.none\",\r\n            firstname: \"John\",\r\n            lastname: \"Doe\",\r\n            dob: new Date(),\r\n            sex: 1,\r\n            describe: \"placeholder\",\r\n            pic: \"profileEmpty.png\",\r\n            default_meals: 'Breakfast,Lunch,Dinner',\r\n            access: \"Guest\"\r\n        };\r\n\r\n        this.state = {\r\n            currentUser: this.defaultUser\r\n        };\r\n        app = this;\r\n    }\r\n\r\n    getServerURL = () => {\r\n        return svData.serverLink;\r\n        //return \"http://localhost:3001\";\r\n    }\r\n\r\n    updateUser = (res) => {\r\n        const { defaultUser } = this;\r\n\r\n        if (res === null) {\r\n            this.setState({\r\n                currentUser: defaultUser\r\n            });\r\n            refs.header.current.updateUser(false, defaultUser.username, defaultUser.pic);\r\n        }\r\n        else {\r\n            this.setState({\r\n                currentUser: res\r\n            });\r\n            refs.header.current.updateUser(true, res.username, res.pic);\r\n        }\r\n    };\r\n\r\n    changeMainPage = (newPage) => refs.main.current.changePage(newPage);\r\n\r\n    render = () => {\r\n        return (\r\n            [\r\n                <Header ref={refs.header} key=\"H\" />,\r\n                <Nav ref={refs.nav} key=\"N\" />,\r\n                <Main ref={refs.main} page=\"DailyMeals\" key=\"M\" />,\r\n                <Footer ref={refs.footer} key=\"F\" />\r\n            ]\r\n        );\r\n    };\r\n}\r\n\r\nexport { App, app };","//import { BrowserRouter } from 'react-router-dom';\r\n//\r\n//ReactDOM.render(\r\n//    <BrowserRouter>\r\n//        <Header />\r\n//        <Nav />\r\n//        <Main />\r\n//        <Footer />\r\n//    </BrowserRouter>,\r\n//    document.querySelector(\"#root\"));\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector(\"#root\"));"],"sourceRoot":""}