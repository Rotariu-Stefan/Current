{"version":3,"sources":["Sections/Header.js","Sections/Nav.js","MainPages/Home.js","Components/FoodEntry.js","Components/NoteView.js","Components/Note.js","Components/MealEntry.js","Components/FoodItem.js","MainPages/DailyMeals.js","MainPages/YourFood.js","MainPages/YourPlans.js","MainPages/YourStats.js","MainPages/GlobalStats.js","MainPages/GlobalData.js","MainPages/Profile.js","MainPages/Login.js","MainPages/Register.js","MainPages/Error.js","Sections/Main.js","Sections/Footer.js","App.js","index.js"],"names":["Header","props","updateUser","newIsLogged","newUsername","newPic","setState","isLogged","username","pic","onLogClick","state","app","changeMainPage","render","className","src","alt","onClick","id","defaultUser","React","Component","Nav","Home","FoodEntry","foodEntry","getMacroRes","mstr","amount","measure","sizeinfo","toFixed","fatRes","carbsRes","proteinRes","foodname","brand","fat","carbs","protein","foodItem","defaultFoodEntry","addToMeal","entryid","foodid","userid","price","isdish","noteid","NoteView","toggleSelected","isSelected","note","score","title","notetext","Note","onEditTypeChange","ev","isNewAdd","currentTarget","value","onAddNote","isEdit","loadNoteViews","searchTerms","noteViews","noteViewsIsLoading","searchCounter","sc","setTimeout","searchNoteViews","a","noteViewCounter","userId","currentUser","fetch","getServerURL","method","headers","res","json","n","push","key","isExist","onChange","type","name","checked","options","i","MealEntry","addNewFoodEntry","newFoodEntry","foodEntries","foodCounter","addNewFoodEntryMacros","toggleHighlight","isHighlighted","toggleMinMax","isMin","stopPropagation","newfat","newcarbs","newprotein","portion","mealEntry","mealname","selectedChanged","removeMeal","componentDidMount","signalSelect","defaultMealEntry","foodentries","f","FoodItem","defaultFoodItem","dateToStr","dateObj","getFullYear","getMonth","toString","getDate","DailyMeals","loadDailyMeals","day","mealEntries","mealareaIsLoading","mealCounter","first","meals","m","onSelectedMealChanged","onRemoveMeal","selectedDay","dayEntry","loadSFoodItems","isAll","sFoodItems","searchareaIsLoading","xx","console","log","sFoodCounter","onSelectedFoodChanged","selectedFood","onCommit","dayPutReq","date","body","JSON","stringify","alert","onAddNewMeal","selectedMeal","sender","filter","mealid","_reactInternalFiber","meal","onAddNewFoodEntry","isNaN","document","querySelector","placeholder","select","activeElement","selectedFoodDetails","composition","currentEntry","onDayButtons","nrDays","d","Date","setDate","onSearchKey","preventDefault","length","querySelectorAll","click","onAmountKey","disabled","onKeyDown","colSpan","YourFood","YourPlans","YourStats","GlobalStats","GlobalData","Profile","user","email","firstname","lastname","dob","sex","readOnly","describe","defaultmeals","Login","onLogin","inputs","usernameText","passText","pass","status","warningMsg","message","onSubmit","Register","onRegister","Error","Main","changePage","newPage","page","Footer","refs","main","createRef","footer","header","nav","App","svData","serverLink","current","ref","default_meals","access","ReactDOM"],"mappings":"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","file":"static/js/main.367de140.chunk.js","sourcesContent":["//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Header = () => {\r\n//    return (\r\n//        <header className=\"subblock boxShow\">\r\n//            <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n//            <div id=\"titleArea\">\r\n//                <NavLink to=\"/\">\r\n//                    <h1 id=\"title\">FoodTracker</h1>\r\n//                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n//                </NavLink>\r\n//            </div>\r\n//            <div id=\"profileArea\" className=\"boxShow\">\r\n//                <NavLink to=\"/Login\">\r\n//                    Guest<br />\r\n//                    <img src=\"SitePics/profileEmpty.png\" alt=\"[NO PIC]\" />\r\n//                </NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Register\">Register</NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Login\">Login</NavLink>\r\n//            </div>\r\n//        </header>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\nimport { app } from '../App';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            username: app.defaultUser.username,\r\n            pic: app.defaultUser.pic\r\n        };\r\n    }\r\n\r\n    updateUser = (newIsLogged, newUsername, newPic) => {\r\n        this.setState({\r\n            isLogged: newIsLogged,\r\n            username: newUsername,\r\n            pic: newPic\r\n        });\r\n    }\r\n\r\n    onLogClick = () => {\r\n        const { isLogged } = this.state;\r\n\r\n        if (isLogged) {\r\n            app.updateUser(null);\r\n            app.changeMainPage(\"Home\");\r\n        }\r\n        else\r\n            app.changeMainPage(\"Login\");\r\n    }\r\n\r\n    render = () => {\r\n        const { isLogged, username, pic } = this.state;\r\n\r\n        return (\r\n            <header className=\"subblock boxShow\">\r\n                <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n                <div onClick={() => app.changeMainPage(\"Home\")} id=\"titleArea\">\r\n                    <h1 id=\"title\">FoodTracker</h1>\r\n                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n                </div>\r\n                <div id=\"profileArea\" className=\"boxShow\">\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n                        {username}\r\n                        <br />\r\n                        <img src={`UserPics/${pic}`} alt=\"[NO PIC]\" />\r\n                    </span>\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")} className=\"navlink\">\r\n                        {isLogged ? \"Profile\" : \"Register\"}\r\n                    </span>\r\n                    <span onClick={this.onLogClick} className=\"navlink\">\r\n                        {isLogged ? \"Logout\" : \"Login\"}\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Nav = () => {\r\n//    return (\r\n//        <nav className=\"subblock boxShow\">\r\n//            <NavLink className=\"navlink textHigh\" to=\"/DailyMeals\">Daily Meals</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourFood\">Your Food</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourPlans\">Your Plans</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourStats\">Your Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalStats\">Global Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalData\">Global Data</NavLink>\r\n//        </nav>\r\n//    );\r\n//}\r\n\r\nclass Nav extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <nav className=\"subblock boxShow\">\r\n                <span onClick={() => app.changeMainPage(\"DailyMeals\")} className=\"navlink textHigh\">Daily Meals</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourFood\")} className=\"navlink textHigh\">Your Food</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourPlans\")} className=\"navlink textHigh\">Your Plans</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourStats\")} className=\"navlink textHigh\">Your Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalStats\")} className=\"navlink textHigh\">Global Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalData\")} className=\"navlink textHigh\">Global Data</span>\r\n            </nav>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>WELCOME HOME!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass FoodEntry extends React.Component {\r\n    static defaultFoodEntry = {\r\n        entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nobody\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: null, price: 0,\r\n        isdish: false,\r\n        noteid: null,\r\n        amount: 1,\r\n        measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let foodEntry;\r\n        if (props.foodEntry)\r\n            foodEntry = props.foodEntry;\r\n        else if (props.foodItem) {\r\n            foodEntry = props.foodItem;\r\n            foodEntry.amount = props.amount;\r\n            foodEntry.measure = props.measure;\r\n        }\r\n        else\r\n            foodEntry = FoodEntry.defaultFoodEntry;\r\n\r\n        this.state = {\r\n            foodEntry: foodEntry\r\n        };\r\n\r\n        this.state.fatRes = this.getMacroRes(\"fat\");\r\n        this.state.carbsRes = this.getMacroRes(\"carbs\");\r\n        this.state.proteinRes = this.getMacroRes(\"protein\");\r\n\r\n        if (this.props.addToMeal)\r\n            this.props.addToMeal(this.state.fatRes, this.state.carbsRes, this.state.proteinRes);\r\n    }\r\n\r\n    getMacroRes = (mstr) => {\r\n        const { amount, measure, sizeinfo } = this.state.foodEntry;\r\n        if (measure === \"Pieces\")\r\n            if (sizeinfo === null)\r\n                return (this.state.foodEntry[mstr] * amount).toFixed(1);\r\n            else {\r\n                return (this.state.foodEntry[mstr] * amount * sizeinfo / 100).toFixed(1);\r\n            }\r\n        else if (measure === \"Grams\")\r\n            return (this.state.foodEntry[mstr] * amount / 100).toFixed(1);\r\n    };\r\n\r\n    render = () => {\r\n        const { foodEntry, fatRes, carbsRes, proteinRes } = this.state;\r\n        const { foodname, brand, amount, fat, carbs, protein } = foodEntry;\r\n\r\n        return (\r\n            <div className=\"foodEntry lineDown\">\r\n                <span className=\"amount\">{amount}</span>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"macroRes\">{`${fatRes}/${carbsRes}/${proteinRes}`}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FoodEntry;","import React from \"react\";\r\n\r\nclass NoteView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            note: props.note,\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { isSelected, note } = this.state;\r\n        const { score, title, notetext } = note ? note : {\r\n            score: 0,\r\n            title: \"PTitle\",\r\n            notetext: \"PText lalallaalaal\"\r\n        };\r\n\r\n        return (\r\n            <div className={\"note boxShow\" + (isSelected ? \" feSelected\" : \"\")}>\r\n                <img src=\"SitePics/starX.png\" alt={\"S=\" + (score)} />\r\n                <span>{title}</span>\r\n                <span>{\"--\" + (notetext ? notetext : \"<Empty>\")}</span>\r\n            </div>\r\n        );\r\n\r\n    };\r\n}\r\n\r\nexport default NoteView;","import React from \"react\";\r\nimport NoteView from './NoteView';\r\nimport { app } from '../App';\r\n\r\nclass Note extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            note: props.note,\r\n\r\n            isExist: props.note ? true : false,\r\n            isEdit: false,\r\n            isNewAdd: false,\r\n\r\n            noteViews: [],\r\n            noteViewsIsLoading: true,\r\n            noteViewCounter: 0,\r\n            searchCounter: 0\r\n        };\r\n        this.options = [];\r\n        for (let i = -5; i <= 5; i++)\r\n            this.options.push(<option>{i}</option>);\r\n    }\r\n\r\n    onEditTypeChange = (ev) => {\r\n        this.setState({\r\n            isNewAdd: ev.currentTarget.value === \"new\"\r\n        })\r\n    };\r\n\r\n    onAddNote = () => {\r\n        this.setState({\r\n            isEdit: true\r\n        });\r\n        this.loadNoteViews(\"\");\r\n    };\r\n\r\n    loadNoteViews = (searchTerms) => {\r\n        this.setState({\r\n            noteViews: [],\r\n            noteViewsIsLoading: true,\r\n            searchCounter: this.state.searchCounter + 1\r\n        });\r\n        const sc = this.state.searchCounter + 1;\r\n\r\n        setTimeout(() => this.searchNoteViews(searchTerms, sc), 250);\r\n    };\r\n\r\n    searchNoteViews = async (searchTerms, searchCounter) => {\r\n        if (searchCounter < this.state.searchCounter)\r\n            return;\r\n\r\n        let { noteViewCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res = await fetch(app.getServerURL() + \"/dailymeals/notesearch\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"userid\": userId,\r\n                \"search\": searchTerms\r\n            }\r\n        });\r\n        res = await res.json();\r\n        if (searchCounter < this.state.searchCounter)       //TODO: Figure out if Necessarry !!\r\n            return;\r\n\r\n        const noteViews = [];\r\n        for (let n of res)\r\n            noteViews.push(<NoteView note={n} key={noteViewCounter++} />);\r\n\r\n        this.setState({\r\n            noteViews: noteViews,\r\n            noteViewCounter: noteViewCounter,\r\n            noteViewsIsLoading: false\r\n        });\r\n    };  //TODO\r\n\r\n    render = () => {\r\n        const { isExist, isEdit, isNewAdd, note, noteViews, noteViewsIsLoading } = this.state;\r\n\r\n        if (isEdit) {\r\n            return (\r\n                <div className=\"note boxShow\">\r\n                    <input onChange={this.onEditTypeChange} type=\"radio\" name=\"editType\"\r\n                        value=\"select\" checked={!isNewAdd} />Select\r\n                    <input onChange={this.onEditTypeChange} type=\"radio\" name=\"editType\" value=\"new\" />New\r\n                    <button onClick={() => { this.setState({ isEdit: false }) }}>Cancel</button>\r\n                    {isNewAdd\r\n                        ? <div>\r\n                            Score:<select>\r\n                                {this.options}\r\n                            </select>\r\n                            <br />Title:<input type=\"text\" />\r\n                            <br />Text:<input type=\"text\" />\r\n                            <br /><button>Add New Note</button>\r\n                        </div>\r\n                        : < div >\r\n                            Search:<input onChange={(ev) => this.loadNoteViews(ev.currentTarget.value)} type=\"text\" />\r\n                            <br />Results:<div>\r\n                                {noteViewsIsLoading ? \"LOADING...\" : noteViews}\r\n                            </div>\r\n                            <button>Select Note</button>\r\n                        </div>}\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            if (isExist) {\r\n                const { score, title, notetext } = note;\r\n\r\n                return (\r\n                    <div className=\"note boxShow\">\r\n                        <img src=\"SitePics/starX.png\" alt={\"S=\" + (score)} />\r\n                        <div>\r\n                            <span>{title}</span>\r\n                            <span>{\"--\" + (notetext ? notetext : \"<Empty>\")}</span>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n                return (\r\n                    <div className=\"note boxShow\">\r\n                        No Note<button onClick={this.onAddNote} >Add Note</button>\r\n                    </div >\r\n                );\r\n    };\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport FoodEntry from './FoodEntry';\r\nimport Note from './Note';\r\n\r\nclass MealEntry extends React.Component {\r\n    static defaultMealEntry = {\r\n        mealname: \"New Meal\",\r\n        portion: 1,\r\n        noteid: null,\r\n        foodentries: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mealEntry: props.mealEntry ? props.mealEntry : MealEntry.defaultMealEntry,\r\n            foodEntries: [],\r\n            foodCounter: 0,\r\n            isHighlighted: false,\r\n            isMin: false,\r\n            fat: 0,\r\n            carbs: 0,\r\n            protein: 0\r\n        };\r\n\r\n        if (props.mealEntry)\r\n            for (let f of props.mealEntry.foodentries) {\r\n                this.state.foodEntries.push(<FoodEntry\r\n                    foodEntry={f}\r\n                    addToMeal={this.addNewFoodEntryMacros}\r\n                    key={this.state.foodCounter} />);\r\n                this.state.foodCounter++;\r\n            }\r\n    }\r\n\r\n    addNewFoodEntry = (ev, newFoodEntry) => {\r\n        const { foodEntries } = this.state;\r\n        let { foodCounter } = this.state;\r\n\r\n        foodEntries.push(<FoodEntry foodEntry={newFoodEntry} addToMeal={this.addNewFoodEntryMacros} key={foodCounter++} />);\r\n\r\n        this.setState({\r\n            foodEntries: foodEntries,\r\n            foodCounter: foodCounter,\r\n            fat: this.state.fat,\r\n            carbs: this.state.carbs,\r\n            protein: this.state.protein\r\n        });\r\n    };\r\n\r\n    toggleHighlight = () => this.setState({\r\n        isHighlighted: !this.state.isHighlighted\r\n    });\r\n\r\n    toggleMinMax = (ev) => {\r\n        this.setState({\r\n            isMin: !this.state.isMin\r\n        });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    addNewFoodEntryMacros = (newfat, newcarbs, newprotein) => {\r\n        const { portion } = this.state.mealEntry;\r\n\r\n        this.state.fat += newfat * portion;\r\n        this.state.carbs += newcarbs * portion;\r\n        this.state.protein += newprotein * portion;\r\n    };\r\n\r\n    render = () => {\r\n        const { mealEntry, isHighlighted, isMin, foodEntries, fat, carbs, protein } = this.state;\r\n        const { mealname, note } = mealEntry;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"mealArea boxShow\" + (isHighlighted ? \" highlight\" : \"\")}>\r\n                <div className=\"mealTitle\">\r\n                    {mealname}\r\n                    <img onClick={(ev) => this.props.removeMeal(ev, this)} src=\"PLACEHOLDER DROPDOWN\" alt=\"X\" />\r\n                    <img onClick={this.toggleMinMax} src=\"PLACEHOLDER DROPDOWN\" alt={isMin ? \"+\" : \"-\"} />\r\n                </div>\r\n                <hr />\r\n                <Note note={note} />\r\n                <hr />\r\n                <div className={\"foodEntries lineDown\" + (isMin ? \" hidden\" : \"\")}>\r\n                    {foodEntries}\r\n                </div>\r\n                <div className=\"mealTotal\">\r\n                    <span>Total:</span>\r\n                    <span>{`${fat.toFixed(1)}//${carbs.toFixed(1)}//${protein.toFixed(1)}`}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n        else\r\n            this.setState({});\r\n    };\r\n}\r\n\r\nexport default MealEntry;","import React from 'react';\r\n\r\nclass FoodItem extends React.Component {\r\n    static defaultFoodItem = {\r\n        entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nowhere\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: \"empty.png\", price: 0,\r\n        isdish: false,\r\n        noteid: null,\r\n        measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            foodItem: (props.foodItem) ? props.foodItem : this.defaultFoodItem,\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { foodItem, isSelected } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, sizeinfo } = foodItem;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"foodItem lineDown\" + (isSelected ? \" feSelected\" : \"\")}>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"per\">{sizeinfo === null ? `1` : `100g`}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default FoodItem;","import React from 'react';\r\nimport \"../Css/DailyMeals.css\";\r\n\r\nimport MealEntry from '../Components/MealEntry';\r\nimport FoodEntry from '../Components/FoodEntry';\r\nimport FoodItem from '../Components/FoodItem';\r\nimport Note from '../Components/Note';\r\nimport { app } from '../App';\r\n\r\nconst dateToStr = (dateObj) => {\r\n    return `${dateObj.getFullYear()}-${dateObj.getMonth() + 1 > 9 ? (dateObj.getMonth() + 1).toString() : \"0\" + (dateObj.getMonth() + 1).toString()}-${dateObj.getDate() > 9 ? dateObj.getDate().toString() : \"0\" + dateObj.getDate().toString()}`;\r\n};\r\n\r\nclass DailyMeals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDay: dateToStr(new Date(\"2020-05-16\")),\r\n            dayEntry: {},\r\n\r\n            mealEntries: [],\r\n            selectedMeal: null,\r\n            mealCounter: 0,\r\n            mealareaIsLoading: true,\r\n\r\n            selectedFood: null,\r\n            sFoodItems: [],\r\n            sFoodCounter: 0,\r\n            searchareaIsLoading: true,\r\n            searchCounter: 0,\r\n            amount: \"\",\r\n            measure: \"---\",\r\n\r\n            selectedFoodDetails: null,\r\n            composition: []\r\n        };\r\n\r\n        //; (async () => {\r\n        this.loadDailyMeals(this.state.selectedDay);\r\n        this.loadSFoodItems(\"\", false);\r\n        //})();\r\n    }\r\n\r\n    loadDailyMeals = (day) => {\r\n        this.setState({\r\n            mealEntries: [],\r\n            mealareaIsLoading: true\r\n        });\r\n\r\n        ; (async () => {\r\n            let { mealCounter } = this.state;\r\n            //If app.currentUser is Guest pretend it's SV\r\n            const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"reqdate\": day,\r\n                    \"userid\": userId,\r\n                }\r\n            });\r\n            res = await res.json();\r\n\r\n            const mealEntries = [];\r\n            let first = true;\r\n            for (let m of res.meals)\r\n                if (!first)\r\n                    mealEntries.push(<MealEntry\r\n                        selectedChanged={this.onSelectedMealChanged}\r\n                        removeMeal={this.onRemoveMeal}\r\n                        mealEntry={m}\r\n                        key={mealCounter++} />);\r\n                else {\r\n                    mealEntries.push(<MealEntry\r\n                        signalSelect={true}\r\n                        selectedChanged={this.onSelectedMealChanged}\r\n                        removeMeal={this.onRemoveMeal}\r\n                        mealEntry={m}\r\n                        key={mealCounter++} />);\r\n                    first = false;\r\n                }\r\n\r\n            this.setState({\r\n                selectedDay: day,\r\n                dayEntry: res,\r\n                mealEntries: mealEntries,\r\n                mealCounter: mealCounter,\r\n                mealareaIsLoading: false,\r\n            });\r\n        })();\r\n    }\r\n\r\n    loadSFoodItems = (searchTerms, isAll) => {\r\n        this.setState({\r\n            sFoodItems: [],\r\n            searchareaIsLoading: true,\r\n            searchCounter: this.state.searchCounter + 1\r\n        });\r\n        const xx = this.state.searchCounter + 1;\r\n\r\n        setTimeout(async (searchCounter = xx) => {\r\n            console.log(\"F:\", searchCounter, \"T:\", this.state.searchCounter);\r\n            if (searchCounter < this.state.searchCounter)\r\n                return;\r\n\r\n            let { sFoodCounter } = this.state;\r\n            //If app.currentUser is Guest pretend it's SV\r\n            const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n            let res;\r\n            res = await fetch(app.getServerURL() + \"/dailymeals/foodsearch\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"userid\": userId,\r\n                    \"search\": searchTerms,\r\n                    \"isall\": isAll\r\n                }\r\n            });\r\n            res = await res.json();\r\n            if (searchCounter < this.state.searchCounter)\r\n                return;\r\n\r\n            const sFoodItems = [];\r\n            let first = true;\r\n            for (let f of res)\r\n                if (!first)\r\n                    sFoodItems.push(<FoodItem\r\n                        selectedChanged={this.onSelectedFoodChanged}\r\n                        foodItem={f}\r\n                        key={sFoodCounter++} />);\r\n                else {\r\n                    sFoodItems.push(<FoodItem\r\n                        signalSelect={true}\r\n                        selectedChanged={this.onSelectedFoodChanged}\r\n                        foodItem={f}\r\n                        key={sFoodCounter++} />);\r\n                    first = false;\r\n                }\r\n\r\n            this.setState({\r\n                selectedFood: first ? null : this.state.selectedFood,\r\n                measure: first ? \"---\" : this.state.measure,\r\n                sFoodItems: sFoodItems,\r\n                sFoodCounter: sFoodCounter,\r\n                searchareaIsLoading: false\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    onCommit = (ev) => {\r\n        ; (async (searchCounter) => {\r\n            const { dayEntry, selectedDay } = this.state;\r\n            const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n            const dayPutReq = dayEntry;\r\n            dayPutReq.userid = userId;\r\n            dayPutReq.date = selectedDay;\r\n\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals\", {\r\n                method: \"put\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(dayPutReq)\r\n            });\r\n            res = await res.json();\r\n\r\n            alert(`Successfully entered date for day ${selectedDay}!\\n --You can view resulting entry in the console`);\r\n            console.log(res);\r\n        })();\r\n    };\r\n\r\n    onAddNewMeal = (ev) => {    //TODO\r\n        const { mealEntries, dayEntry, selectedMeal } = this.state;\r\n        let { mealCounter } = this.state;\r\n\r\n        if (selectedMeal)\r\n            mealEntries.push(<MealEntry\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n        else\r\n            mealEntries.push(<MealEntry\r\n                signalSelect={true}\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n\r\n        dayEntry.meals.push({       //TODO: Must make Custamizable\r\n            key: mealCounter - 1,\r\n            mealname: \"New Meal\",\r\n            portion: 1,\r\n            noteid: null,\r\n            foodentries: []\r\n        });\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter,\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    onRemoveMeal = (ev, sender) => {\r\n        const { selectedMeal, mealEntries, dayEntry } = this.state;\r\n\r\n        dayEntry.meals = dayEntry.meals.filter((m) => !((m.mealid && m.mealid === sender.state.mealEntry.mealid)\r\n            || m.key == sender._reactInternalFiber.key));\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries.filter((meal) => meal.key !== sender._reactInternalFiber.key),\r\n            dayEntry: dayEntry\r\n        });\r\n\r\n\r\n        if (selectedMeal !== null && selectedMeal === sender)\r\n            this.setState({\r\n                selectedMeal: null\r\n            });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    onSelectedMealChanged = (ev, sender) => {\r\n        const { selectedMeal } = this.state;\r\n\r\n        if (sender !== selectedMeal) {\r\n            if (selectedMeal)\r\n                selectedMeal.toggleHighlight();\r\n            sender.toggleHighlight();\r\n\r\n            this.setState({\r\n                selectedMeal: sender\r\n            });\r\n        }\r\n    };\r\n\r\n    onAddNewFoodEntry = (ev) => {\r\n        const { selectedMeal, selectedFood, dayEntry, amount, measure } = this.state;\r\n\r\n        if (selectedMeal === null)\r\n            alert(\"Must select a Meal !\");\r\n        else if (selectedFood === null)\r\n            alert(\"Must select a Food Item !\");\r\n        else {\r\n            if (isNaN(amount)) {\r\n                alert(\"Must Enter Valid Number for Amount!\");\r\n                this.setState({\r\n                    amount: \"\"\r\n                });\r\n                return;\r\n            }\r\n            else {\r\n                const newFoodEntry = selectedFood.state.foodItem;\r\n                newFoodEntry.amount = amount ? amount : document.querySelector(\"#amountSize\").placeholder;\r\n                newFoodEntry.measure = measure;\r\n\r\n                selectedMeal.addNewFoodEntry(ev, newFoodEntry);\r\n                for (let m of dayEntry.meals)\r\n                    if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                        || selectedMeal._reactInternalFiber.key == m.key)\r\n                        m.foodentries.push(newFoodEntry);\r\n\r\n                this.setState({\r\n                    dayEntry: dayEntry\r\n                });\r\n            }\r\n            document.querySelector(\"#search\").select();\r\n        }\r\n    };\r\n\r\n    onSelectedFoodChanged = (ev, sender) => {\r\n        const { selectedFood } = this.state;\r\n\r\n        if (sender !== selectedFood) {\r\n            if (selectedFood)\r\n                selectedFood.toggleSelected();\r\n            sender.toggleSelected();\r\n            if (document.activeElement !== document.querySelector(\"#search\"))\r\n                document.querySelector(\"#search\").select();\r\n\r\n            this.setState({\r\n                selectedFood: sender,\r\n                amount: \"\",\r\n                measure: sender.state.foodItem.sizeinfo === null ? \"Pieces\" : \"Grams\",\r\n                selectedFoodDetails: null\r\n            });\r\n\r\n            ; (async () => {\r\n                let { sFoodCounter, composition } = this.state;\r\n                const { foodid, isdish, noteid } = sender.state.foodItem;\r\n                let res = await fetch(app.getServerURL() + \"/dailymeals/fooddetails\", {\r\n                    method: \"get\",\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                        \"foodid\": foodid,\r\n                        \"isdish\": isdish,\r\n                        \"noteid\": noteid ? noteid : null\r\n                    }\r\n                });\r\n                res = await res.json();\r\n\r\n                composition = [];\r\n                if (res.foodentries) {\r\n                    for (let f of res.foodentries)\r\n                        composition.push(<FoodEntry\r\n                            foodEntry={f}\r\n                            key={sFoodCounter++} />);\r\n                }\r\n\r\n                this.setState({\r\n                    selectedFoodDetails: res,\r\n                    sFoodCounter: sFoodCounter,\r\n                    composition: composition\r\n                });\r\n            })();\r\n        }\r\n    };\r\n\r\n    currentEntry = () => {\r\n        const { selectedFood, amount, measure } = this.state;\r\n\r\n        if (selectedFood) {\r\n            return <FoodEntry foodItem={selectedFood.state.foodItem}\r\n                amount={amount ? amount : (selectedFood ? (measure === \"Pieces\" ? 1\r\n                    : selectedFood.state.foodItem.sizeinfo === 0 ? 100 : selectedFood.state.foodItem.sizeinfo) : 0)}\r\n                measure={measure}\r\n                key={selectedFood.state.foodItem.foodid.toString() + amount + measure} />\r\n        }\r\n        else\r\n            return <FoodEntry key={null} />\r\n    }\r\n\r\n    onDayButtons = (ev, nrDays) => {\r\n        const { selectedDay } = this.state;\r\n\r\n        let d = new Date(selectedDay);\r\n        d.setDate(d.getDate() + nrDays);\r\n\r\n        this.loadDailyMeals(dateToStr(d));\r\n    }\r\n\r\n    onSearchKey = (ev) => {\r\n        const { selectedFood, sFoodItems } = this.state;\r\n\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#amountSize\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#search\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === 0)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i - 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === sFoodItems.length - 1)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i + 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onAmountKey = (ev) => {\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#search\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#amountSize\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":     //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":   //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };//TODO?\r\n\r\n    render = () => {\r\n        const { selectedDay, mealEntries, selectedFood, amount, measure, dayEntry, selectedFoodDetails, composition, mealareaIsLoading, searchareaIsLoading, sFoodItems } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, price, pic } = selectedFood ? selectedFood.state.foodItem : FoodItem.defaultFoodItem;\r\n\r\n        return (\r\n            <main className=\"mainDailyMeals boxShow\">\r\n                <div id=\"dayArea\" className=\"subblock boxShow\">\r\n                    <div className=\"dayHeader\">\r\n                        <div className=\"datepick boxShow\">\r\n                            <label className=\"textHigh\">Day: </label>\r\n                            <button disabled={mealareaIsLoading} onClick={(ev) => this.onDayButtons(ev, -1)} className=\"ftButton\" > {\"<\"}</button>\r\n                            <input disabled={mealareaIsLoading} onChange={(ev) => this.loadDailyMeals(ev.currentTarget.value)} id=\"selectedDay\" type=\"date\" value={selectedDay} />\r\n                            <button disabled={mealareaIsLoading} onClick={(ev) => this.onDayButtons(ev, 1)} className=\"ftButton\">{\">\"}</button>\r\n                        </div>\r\n                        <hr />\r\n                        <Note note={dayEntry.note} key={\"D\" + (dayEntry.note ? dayEntry.note.noteid : \"0\")} />\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"mealsArea\">\r\n                        {mealareaIsLoading ? \"LOADING...\" : mealEntries}\r\n                    </div>\r\n                    <div className=\"dayAreaButtons\">\r\n                        <button disabled={mealareaIsLoading} onClick={this.onCommit} className=\"ftButton\">COMMIT DAY!</button>\r\n                        <button disabled={mealareaIsLoading} onClick={this.onAddNewMeal} className=\"newMeal ftButton\">NEW MEAL</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div id=\"searchArea\" className=\"subblock boxShow\">\r\n                    <div className=\"searchInput boxShow\">\r\n                        <label className=\"textHigh\">Search Food: </label>\r\n                        <input onChange={(ev) => this.loadSFoodItems(\r\n                            document.querySelector(\"#search\").value,\r\n                            ev.currentTarget.checked)}\r\n                            id=\"isAll\" type=\"checkbox\" />\r\n                        ALL Food\r\n                        <input onChange={(ev) => this.loadSFoodItems(\r\n                            ev.currentTarget.value,\r\n                            document.querySelector(\"#isAll\").checked)}\r\n                            onKeyDown={this.onSearchKey}\r\n                            id=\"search\" type=\"text\"\r\n                            placeholder=\"search terms\" />\r\n                    </div>\r\n                    <div className=\"searchResults boxShow\">\r\n                        {searchareaIsLoading ? \"LOADING...\" : sFoodItems}\r\n                    </div>\r\n                    <div className=\"amountInput boxShow\">\r\n                        <label className=\"textHigh\">Amount: </label>\r\n                        <input disabled={searchareaIsLoading} id=\"amountSize\" type=\"text\" value={amount}\r\n                            onChange={(ev) => this.setState({ amount: ev.currentTarget.value })}\r\n                            onKeyDown={this.onAmountKey}\r\n                            placeholder={selectedFood ? (measure === \"Pieces\" ? 1\r\n                                : selectedFood.state.foodItem.sizeinfo === 0 ? 100 : selectedFood.state.foodItem.sizeinfo) : 0} />\r\n                        <select onChange={(ev) => this.setState({ measure: ev.currentTarget.value })} disabled={searchareaIsLoading} id=\"measureSelect\" value={measure} >\r\n                            <option className={selectedFood ? (selectedFood.state.foodItem.sizeinfo === null ? \"hidden\" : \"\") : \"hidden\"}>\r\n                                Grams</option>\r\n                            <option className={selectedFood ? (selectedFood.state.foodItem.sizeinfo === 0 ? \"hidden\" : \"\") : \"hidden\"}>\r\n                                Pieces</option>\r\n                            <option className=\"hidden\">---</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"searchEntry boxShow\">\r\n                        <label className=\"textHigh lineDown\">Current Entry:</label>\r\n                        {this.currentEntry()}\r\n                        <button disabled={searchareaIsLoading} onClick={this.onAddNewFoodEntry} className=\"ftButton\">ADD TO MEAL</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedFoodDetails ? (\r\n                    <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                        <div className=\"foodDetailsHeader\">\r\n                            <div className=\"textHigh boxShow\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</div>\r\n                            <hr />\r\n                            <Note note={selectedFoodDetails ? selectedFoodDetails.note : null}\r\n                                key={\"F\" + (selectedFoodDetails.note ? selectedFoodDetails.note.noteid : \"0\")} />\r\n                            <hr />\r\n                        </div>\r\n                        <div className=\"foodPic boxShow\">\r\n                            <img src={`FoodPics/${pic ? pic : \"empty.png\"}`} alt=\"[NO FOOD PIC]\" />\r\n                        </div>\r\n                        <div className=\"foodInfo\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr><th>Name</th><td colSpan=\"2\">{foodname}</td></tr>\r\n                                    <tr><th>Brand</th><td colSpan=\"2\">{brand ? brand : \"--\"}</td></tr>\r\n                                    <tr><th>Macro</th><th>100g</th><th>1p</th></tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr><td>Fat</td>\r\n                                        <td>{measure === \"Grams\" ? fat + \"g\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? fat + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Carbs</td>\r\n                                        <td>{measure === \"Grams\" ? carbs + \"g\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? carbs + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Protein</td>\r\n                                        <td>{measure === \"Grams\" ? protein + \"g\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? protein + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Calories</td>\r\n                                        <td>{measure === \"Grams\" ? (fat * 9 + protein * 4 + carbs * 4).toFixed(1)\r\n                                            + \"Kc\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? (fat * 9 + protein * 4 + carbs * 4).toFixed(1)\r\n                                            + \"Kc\" : \"--\"}</td></tr>\r\n                                    <tr><td>Price</td>\r\n                                        <td>{measure === \"Grams\" ? price + \"Lei\" : \"--\"}</td>\r\n                                        <td>{measure === \"Pieces\" ? price + \"Lei\" : \"--\"}</td></tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"buffer\"></div>\r\n                            <div className=\"foodEntries boxShow\">\r\n                                <label className=\"textHigh lineDown\">Composition:</label>\r\n                                {composition}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                            LOADING...\r\n                        </div>\r\n                    )\r\n                }\r\n            </main >\r\n        );\r\n    };\r\n}\r\n\r\nexport default DailyMeals;","import React from 'react';\r\n\r\nconst YourFood = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR FOOD!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourFood;","import React from 'react';\r\n\r\nconst YourPlans = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR PLANS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourPlans;","import React from 'react';\r\n\r\nconst YourStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourStats;","import React from 'react';\r\n\r\nconst GlobalStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalStats;","import React from 'react';\r\n\r\nconst GlobalData = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL DATA!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalData;","import React from 'react';\r\nimport \"../Css/RegLog.css\"; //TODO: Replace somehow! (this is just copy/pasted from register)\r\nimport { app } from '../App';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: app.state.currentUser\r\n        };\r\n    }\r\n\r\n    render = () => {    //TODO: Replace somehow! (this is just copy/pasted from register)\r\n        const { user } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <div id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">User Profile !</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: {user.username}</span>\r\n                        <span>Email: {user.email}</span>\r\n                        <span>First Name: {user.firstname}</span>\r\n                        <span>Last Name: {user.lastname}</span>\r\n                        <span>Date Of Birth: {user.dob}</span>\r\n                        <span>Sex: {user.sex===\"1\"?\"Male\":\"Female\"}</span>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src={`UserPics/${user.pic}`} alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea readOnly={true} value={user.describe}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Meal Plans: {user.defaultmeals}</span>\r\n                        <span>Diet Plans? </span>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            warningMsg: null\r\n        };\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        try {\r\n            ev.preventDefault();\r\n            const inputs = document.querySelectorAll(\"#logform input\");\r\n            const usernameText = inputs[0].value;\r\n            const passText = inputs[1].value;\r\n\r\n            let res = await fetch(app.getServerURL()() + \"/login\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: usernameText,\r\n                    pass: passText\r\n                })\r\n            });\r\n            if (res.status === 200) {\r\n                res = await res.json();\r\n                if (typeof res === \"string\")\r\n                    this.setState({\r\n                        warningMsg: res\r\n                    });\r\n                else {\r\n                    app.updateUser(res);\r\n                    app.changeMainPage(\"Profile\");\r\n                }\r\n            }\r\n            else {\r\n                console.log(await res.json());\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"___________ERROR___________\\n\", err.message);\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onLogin} id=\"logform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Enter Username/Email and Password to Login!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username/Email: </span><input type=\"text\" name=\"username\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span>Remember Me? <input type=\"checkbox\" name=\"member\" /></span>\r\n                        <span className={this.state.warningMsg === null ? \"hidden\" : \"warning\"}>{this.state.warningMsg}</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"loglinks\">\r\n                        <NavLink to=\"/\">Forgot Password?</NavLink>\r\n                        <NavLink to=\"/Register\">New here? Go Register!</NavLink>\r\n                    </div>\r\n                    */}\r\n                    <div className=\"loglinks\">\r\n                        <span onClick={() => app.changeMainPage(\"Home\")}>Forgot Password?</span>\r\n                        <span onClick={() => app.changeMainPage(\"Register\")}>New here? Go Register!</span>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\n\r\nclass Register extends React.Component {\r\n\r\n    onRegister = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onClick={this.onRegister} id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Please Complete ALL fields to Register!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: </span><input type=\"text\" name=\"username\" />\r\n                        <span className=\"warning\">How DARE You, Sir!</span>\r\n                        <span>Email:</span> <input type=\"email\" name=\"email\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span className=\"detail\">Password must be at least 6characters long and have both numbers and letters!</span>\r\n                        <span>Confirm Password: </span><input type=\"password\" name=\"cpass\" />\r\n                        <span>First Name: </span><input type=\"text\" name=\"firstname\" />\r\n                        <span>Last Name: </span><input type=\"text\" name=\"lastname\" />\r\n                        <span>Date Of Birth: </span><input type=\"date\" name=\"dob\" />\r\n                        <div>\r\n                            <span>Sex: </span><input type=\"radio\" name=\"sex\" value=\"male\" /><span>Male </span>\r\n                            <input type=\"radio\" name=\"sex\" value=\"female\" /><span>Female</span>\r\n                        </div>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src=\"UserPics/profileEmpty.png\" alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea placeholder=\"Say who you are in a few short phrases..\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Diet Plans?</span>\r\n                        <select>\r\n                            <option>Paleo</option>\r\n                            <option>Keto</option>\r\n                            <option>Mediterranian</option>\r\n                            <option>Vegan</option>\r\n                            <option>Carnivore</option>\r\n                            <option>Low Carb</option>\r\n                            <option>Low Fat</option>\r\n                            <option>PSMF</option>\r\n                        </select>\r\n                        <span className=\"detail\">-Pick a Diet from list if any of them apply to You - Can always change it later!</span>\r\n                        <span className=\"detail\">(This Choice is simply for tracking stats - Will Not affect results &recommendations)</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>Error! Page does not exist!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Error;","//import { Route, Switch } from 'react-router-dom';\r\n//\r\n//const Main = () => {\r\n//    return (\r\n//        <Switch>\r\n//            <Route path=\"/\" component={Home} exact/>\r\n//            <Route path=\"/DailyMeals\" component={DailyMeals} />\r\n//            <Route path=\"/YourFood\" component={YourFood} />\r\n//            <Route path=\"/YourPlans\" component={YourPlans} />\r\n//            <Route path=\"/YourStats\" component={YourStats} />\r\n//            <Route path=\"/GlobalStats\" component={GlobalStats} />\r\n//            <Route path=\"/GlobalData\" component={GlobalData} />\r\n//            <Route path=\"/Login\" component={Login} />\r\n//            <Route path=\"/Register\" component={Register} />\r\n//            <Route component={Error} />\r\n//        </Switch>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\n\r\nimport Home from \"../MainPages/Home\";\r\nimport DailyMeals from '../MainPages/DailyMeals';\r\nimport YourFood from '../MainPages/YourFood';\r\nimport YourPlans from '../MainPages/YourPlans';\r\nimport YourStats from '../MainPages/YourStats';\r\nimport GlobalStats from '../MainPages/GlobalStats';\r\nimport GlobalData from '../MainPages/GlobalData';\r\nimport Profile from '../MainPages/Profile';\r\nimport Login from '../MainPages/Login';\r\nimport Register from '../MainPages/Register';\r\nimport Error from '../MainPages/Error';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: props.page ? props.page : \"Home\"\r\n        };\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { page } = this.state;\r\n\r\n        if (page !== newPage)\r\n            this.setState({\r\n                page: newPage\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        switch (this.state.page) {\r\n            case \"Home\":\r\n                return <Home />;\r\n            case \"DailyMeals\":\r\n                return <DailyMeals />;\r\n            case \"YourFood\":\r\n                return <YourFood />;\r\n            case \"YourPlans\":\r\n                return <YourPlans />;\r\n            case \"YourStats\":\r\n                return <YourStats />;\r\n            case \"GlobalStats\":\r\n                return <GlobalStats />;\r\n            case \"GlobalData\":\r\n                return <GlobalData />;\r\n            case \"Profile\":\r\n                return <Profile />;\r\n            case \"Register\":\r\n                return <Register />;\r\n            case \"Login\":\r\n                return <Login />;\r\n            default:\r\n                return <Error />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"subblock boxShow\">\r\n                <h3 id=\"author\">--Made by Rotariu Stefan<sub> - StravoS</sub></h3>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Sections/Header';\r\nimport Nav from './Sections/Nav';\r\nimport Main from './Sections/Main';\r\nimport Footer from './Sections/Footer';\r\nimport svData from './svData.json';\r\n\r\nconst refs = {\r\n    main: React.createRef(),\r\n    footer: React.createRef(),\r\n    header: React.createRef(),\r\n    nav: React.createRef()\r\n};\r\n\r\nlet app = null;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultUser = {\r\n            userid: 0,\r\n            username: \"Guest\",\r\n            email: \"guest@nomail.none\",\r\n            firstname: \"John\",\r\n            lastname: \"Doe\",\r\n            dob: new Date(),\r\n            sex: 1,\r\n            describe: \"placeholder\",\r\n            pic: \"profileEmpty.png\",\r\n            default_meals: 'Breakfast,Lunch,Dinner',\r\n            access: \"Guest\"\r\n        };\r\n\r\n        this.state = {\r\n            currentUser: this.defaultUser\r\n        };\r\n        app = this;\r\n    }\r\n\r\n    getServerURL = () => {\r\n        return svData.serverLink;\r\n        //return \"http://localhost:3001\";\r\n    }\r\n\r\n    updateUser = (res) => {\r\n        const { defaultUser } = this;\r\n\r\n        if (res === null) {\r\n            this.setState({\r\n                currentUser: defaultUser\r\n            });\r\n            refs.header.current.updateUser(false, defaultUser.username, defaultUser.pic);\r\n        }\r\n        else {\r\n            this.setState({\r\n                currentUser: res\r\n            });\r\n            refs.header.current.updateUser(true, res.username, res.pic);\r\n        }\r\n    };\r\n\r\n    changeMainPage = (newPage) => refs.main.current.changePage(newPage);\r\n\r\n    render = () => {\r\n        return (\r\n            [\r\n                <Header ref={refs.header} key=\"H\" />,\r\n                <Nav ref={refs.nav} key=\"N\" />,\r\n                <Main ref={refs.main} page=\"DailyMeals\" key=\"M\" />,\r\n                <Footer ref={refs.footer} key=\"F\" />\r\n            ]\r\n        );\r\n    };\r\n}\r\n\r\nexport { App, app };","//import { BrowserRouter } from 'react-router-dom';\r\n//\r\n//ReactDOM.render(\r\n//    <BrowserRouter>\r\n//        <Header />\r\n//        <Nav />\r\n//        <Main />\r\n//        <Footer />\r\n//    </BrowserRouter>,\r\n//    document.querySelector(\"#root\"));\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector(\"#root\"));"],"sourceRoot":""}