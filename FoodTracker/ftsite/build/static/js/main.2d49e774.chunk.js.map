{"version":3,"sources":["Sections/Header.js","Sections/Nav.js","MainPages/Home.js","Components/FoodEntry.js","Components/Note.js","Components/MealEntry.js","Components/FoodItem.js","MainPages/DailyMeals.js","MainPages/YourFood.js","MainPages/YourPlans.js","MainPages/YourStats.js","MainPages/GlobalStats.js","MainPages/GlobalData.js","MainPages/Profile.js","MainPages/Login.js","MainPages/Register.js","MainPages/Error.js","Sections/Main.js","Sections/Footer.js","App.js","index.js"],"names":["Header","props","updateUser","newIsLogged","newUsername","newPic","setState","isLogged","username","pic","onLogClick","state","app","changeMainPage","render","className","src","alt","onClick","id","defaultUser","React","Component","Nav","Home","FoodEntry","foodEntry","getMacroRes","mstr","amount","measure","toFixed","fatRes","carbsRes","proteinRes","foodname","brand","fat","carbs","protein","defaultFoodEntry","entryid","foodid","sizeinfo","userid","price","isdish","noteid","foodItem","addToMeal","Note","grade","title","text","MealEntry","addNewFoodEntry","ev","newFoodEntry","foodEntries","foodCounter","push","addNewFoodEntryMacros","key","toggleHighlight","isHighlighted","toggleMinMax","isMin","stopPropagation","newfat","newcarbs","newprotein","portion","mealEntry","mealname","selectedChanged","removeMeal","componentDidMount","signalSelect","defaultMealEntry","foodentries","f","FoodItem","toggleSelected","isSelected","defaultFoodItem","getServerURL","svData","serverLink","DailyMeals","loadDailyMeals","day","a","mealEntries","mealCounter","userId","currentUser","fetch","method","headers","res","json","first","meals","m","onSelectedMealChanged","onRemoveMeal","selectedDay","dayEntry","loadSFoodItems","searchTerms","isAll","sFoodItems","sFoodCounter","onSelectedFoodChanged","selectedFood","onCommit","dayPutReq","date","body","JSON","stringify","alert","console","log","onAddNewMeal","selectedMeal","sender","filter","mealid","_reactInternalFiber","meal","onAddNewFoodEntry","amountInput","document","querySelector","isNaN","placeholder","select","activeElement","currentEntry","value","toString","onDayButtons","nrDays","dateObj","d","Date","setDate","getDate","getFullYear","getMonth","onSearchKey","preventDefault","i","length","querySelectorAll","click","onAmountKey","onChange","currentTarget","type","checked","onKeyDown","colSpan","YourFood","YourPlans","YourStats","GlobalStats","GlobalData","Profile","user","email","firstname","lastname","dob","sex","readOnly","describe","defaultmeals","Login","onLogin","inputs","usernameText","passText","pass","status","warningMsg","message","onSubmit","name","Register","onRegister","Error","Main","changePage","newPage","page","Footer","refs","main","createRef","footer","header","nav","App","current","ref","default_meals","access","ReactDOM"],"mappings":"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","file":"static/js/main.2d49e774.chunk.js","sourcesContent":["//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Header = () => {\r\n//    return (\r\n//        <header className=\"subblock boxShow\">\r\n//            <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n//            <div id=\"titleArea\">\r\n//                <NavLink to=\"/\">\r\n//                    <h1 id=\"title\">FoodTracker</h1>\r\n//                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n//                </NavLink>\r\n//            </div>\r\n//            <div id=\"profileArea\" className=\"boxShow\">\r\n//                <NavLink to=\"/Login\">\r\n//                    Guest<br />\r\n//                    <img src=\"SitePics/profileEmpty.png\" alt=\"[NO PIC]\" />\r\n//                </NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Register\">Register</NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Login\">Login</NavLink>\r\n//            </div>\r\n//        </header>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\nimport { app } from '../App';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            username: app.defaultUser.username,\r\n            pic: app.defaultUser.pic\r\n        };\r\n    }\r\n\r\n    updateUser = (newIsLogged, newUsername, newPic) => {\r\n        this.setState({\r\n            isLogged: newIsLogged,\r\n            username: newUsername,\r\n            pic: newPic\r\n        });\r\n    }\r\n\r\n    onLogClick = () => {\r\n        const { isLogged } = this.state;\r\n\r\n        if (isLogged) {\r\n            app.updateUser(null);\r\n            app.changeMainPage(\"Home\");\r\n        }\r\n        else\r\n            app.changeMainPage(\"Login\");\r\n    }\r\n\r\n    render = () => {\r\n        const { isLogged, username, pic } = this.state;\r\n\r\n        return (\r\n            <header className=\"subblock boxShow\">\r\n                <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n                <div onClick={() => app.changeMainPage(\"Home\")} id=\"titleArea\">\r\n                    <h1 id=\"title\">FoodTracker</h1>\r\n                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n                </div>\r\n                <div id=\"profileArea\" className=\"boxShow\">\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n                        {username}\r\n                        <br />\r\n                        <img src={`UserPics/${pic}`} alt=\"[NO PIC]\" />\r\n                    </span>\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")} className=\"navlink\">\r\n                        {isLogged ? \"Profile\" : \"Register\"}\r\n                    </span>\r\n                    <span onClick={this.onLogClick} className=\"navlink\">\r\n                        {isLogged ? \"Logout\" : \"Login\"}\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Nav = () => {\r\n//    return (\r\n//        <nav className=\"subblock boxShow\">\r\n//            <NavLink className=\"navlink textHigh\" to=\"/DailyMeals\">Daily Meals</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourFood\">Your Food</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourPlans\">Your Plans</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourStats\">Your Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalStats\">Global Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalData\">Global Data</NavLink>\r\n//        </nav>\r\n//    );\r\n//}\r\n\r\nclass Nav extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <nav className=\"subblock boxShow\">\r\n                <span onClick={() => app.changeMainPage(\"DailyMeals\")} className=\"navlink textHigh\">Daily Meals</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourFood\")} className=\"navlink textHigh\">Your Food</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourPlans\")} className=\"navlink textHigh\">Your Plans</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourStats\")} className=\"navlink textHigh\">Your Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalStats\")} className=\"navlink textHigh\">Global Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalData\")} className=\"navlink textHigh\">Global Data</span>\r\n            </nav>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>WELCOME HOME!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass FoodEntry extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultFoodEntry = {\r\n            entryid: 0,\r\n            foodid: 0,\r\n            foodname: \"Nothing\",\r\n            brand: \"Nobody\",\r\n            fat: 0, carbs: 0, protein: 0,\r\n            sizeinfo: null, userid: 0, pic: null, price: 0,\r\n            isdish: false,\r\n            noteid: null,\r\n            amount: 1,\r\n            measure: \"Pieces\"\r\n        };\r\n\r\n        let foodEntry;\r\n        if (props.foodEntry)\r\n            foodEntry = props.foodEntry;\r\n        else if (props.foodItem) {\r\n            foodEntry = props.foodItem;\r\n            foodEntry.amount = props.amount;\r\n            foodEntry.measure = props.measure;\r\n        }\r\n        else\r\n            foodEntry = this.defaultFoodEntry;\r\n\r\n        this.state = {\r\n            foodEntry: foodEntry\r\n        };\r\n\r\n        this.state.fatRes=this.getMacroRes(\"fat\");\r\n        this.state.carbsRes =this.getMacroRes(\"carbs\");\r\n        this.state.proteinRes =this.getMacroRes(\"protein\");\r\n\r\n        if (this.props.addToMeal)\r\n            this.props.addToMeal(this.state.fatRes, this.state.carbsRes, this.state.proteinRes);\r\n    }\r\n\r\n    getMacroRes = (mstr) => {\r\n        const { amount, measure } = this.state.foodEntry;\r\n        return (this.state.foodEntry[mstr] * amount / (measure === \"Pieces\" ? 1 : 100)).toFixed(1);\r\n    };\r\n\r\n    render = () => {\r\n        const { foodEntry, fatRes, carbsRes, proteinRes } = this.state;\r\n        const { foodname, brand, amount, fat, carbs, protein } = foodEntry;\r\n\r\n        return (\r\n            <div className=\"foodEntry lineDown\">\r\n                <span className=\"amount\">{amount}</span>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"macroRes\">{`${fatRes}/${carbsRes}/${proteinRes}`}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FoodEntry;","import React from \"react\";\r\n\r\nconst Note = ({\r\n    grade = 0,\r\n    title = \"Note Title\",\r\n    text = \"Note text lalalaal lalalalal alaalalal lllaal lalala asdasdsd asdda asdsadssads LA!\"\r\n}) => {\r\n    return (\r\n        <div className=\"note boxShow\">\r\n            <img src=\"SitePics/star.png\" alt={\"[STAR]\" + grade} />\r\n            <div>\r\n                <span>{title}</span>\r\n                <span>{text}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport FoodEntry from './FoodEntry';\r\nimport Note from './Note';\r\n\r\nclass MealEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultMealEntry = {\r\n            mealname: \"New Meal\",\r\n            portion: 1,\r\n            noteid: null,\r\n            foodentries: []\r\n        }\r\n\r\n        this.state = {\r\n            mealEntry: props.mealEntry ? props.mealEntry : this.defaultMealEntry,\r\n            foodEntries: [],\r\n            foodCounter: 0,\r\n            isHighlighted: false,\r\n            isMin: false,\r\n            fat: 0,\r\n            carbs: 0,\r\n            protein: 0\r\n        };\r\n\r\n        if (props.mealEntry)\r\n            for (let f of props.mealEntry.foodentries) {\r\n                this.state.foodEntries.push(<FoodEntry\r\n                    foodEntry={f}\r\n                    addToMeal={this.addNewFoodEntryMacros}\r\n                    key={this.state.foodCounter} />);\r\n                this.state.foodCounter++;\r\n            }\r\n    }\r\n\r\n    addNewFoodEntry = (ev, newFoodEntry) => {\r\n        const { foodEntries } = this.state;\r\n        let { foodCounter } = this.state;\r\n\r\n        foodEntries.push(<FoodEntry foodEntry={newFoodEntry} addToMeal={this.addNewFoodEntryMacros} key={foodCounter++} />);\r\n\r\n        this.setState({\r\n            foodEntries: foodEntries,\r\n            foodCounter: foodCounter,\r\n            fat: this.state.fat,\r\n            carbs: this.state.carbs,\r\n            protein: this.state.protein\r\n        });\r\n    };\r\n\r\n    toggleHighlight = () => this.setState({\r\n        isHighlighted: !this.state.isHighlighted\r\n    });\r\n\r\n    toggleMinMax = (ev) => {\r\n        this.setState({\r\n            isMin: !this.state.isMin\r\n        });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    addNewFoodEntryMacros = (newfat, newcarbs, newprotein) => {\r\n        const { portion } = this.state.mealEntry;\r\n\r\n        this.state.fat += newfat * portion;\r\n        this.state.carbs += newcarbs * portion;\r\n        this.state.protein += newprotein * portion;\r\n    };\r\n\r\n    render = () => {\r\n        const { mealEntry, isHighlighted, isMin, foodEntries, fat, carbs, protein } = this.state;\r\n        const { mealname } = mealEntry;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"mealArea boxShow\" + (isHighlighted ? \" highlight\" : \"\")}>\r\n                <div className=\"mealTitle\">\r\n                    {mealname}\r\n                    <img onClick={(ev) => this.props.removeMeal(ev, this)} src=\"PLACEHOLDER DROPDOWN\" alt=\"X\" />\r\n                    <img onClick={this.toggleMinMax} src=\"PLACEHOLDER DROPDOWN\" alt={isMin ? \"+\" : \"-\"} />\r\n                </div>\r\n                <hr />\r\n                <Note />\r\n                <hr />\r\n                <div className={\"foodEntries lineDown\" + (isMin ? \" hidden\" : \"\")}>\r\n                    {foodEntries}\r\n                </div>\r\n                <div className=\"mealTotal\">\r\n                    <span>Total:</span>\r\n                    <span>{`${fat.toFixed(1)}//${carbs.toFixed(1)}//${protein.toFixed(1)}`}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n        else\r\n            this.setState({});\r\n    };\r\n}\r\n\r\nexport default MealEntry;","import React from 'react';\r\n\r\nclass FoodItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultFoodItem = {\r\n            entryid: 0,\r\n            foodid: 0,\r\n            foodname: \"Nothing\",\r\n            brand: \"Nowhere\",\r\n            fat: 0, carbs: 0, protein: 0,\r\n            sizeinfo: null, userid: 0, pic: null, price: 0,\r\n            isdish: false,\r\n            noteid: null,\r\n            measure: \"Pieces\"\r\n        };\r\n\r\n        this.state = {\r\n            foodItem: (props.foodItem) ? props.foodItem : this.defaultFoodItem,\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { foodItem, isSelected } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, sizeinfo } = foodItem;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"foodItem lineDown\" + (isSelected ? \" feSelected\" : \"\")}>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"per\">{sizeinfo === null ? `1` : `100g`}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default FoodItem;","import React from 'react';\r\nimport \"../Css/DailyMeals.css\";\r\n\r\nimport MealEntry from '../Components/MealEntry';\r\nimport FoodEntry from '../Components/FoodEntry';\r\nimport FoodItem from '../Components/FoodItem';\r\nimport Note from '../Components/Note';\r\nimport { app } from '../App';\r\nimport svData from '../svData.json';\r\n\r\nconst getServerURL = () => {\r\n    return svData.serverLink;\r\n    //return \"http://localhost:3001\";\r\n}\r\n\r\nconst dateToStr = (dateObj) => {\r\n    return `${dateObj.getFullYear()}-${dateObj.getMonth() + 1 > 9 ? (dateObj.getMonth() + 1).toString() : \"0\" + (dateObj.getMonth() + 1).toString()}-${dateObj.getDate() > 9 ? dateObj.getDate().toString() : \"0\" + dateObj.getDate().toString()}`;\r\n};\r\n\r\nclass DailyMeals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDay: \"2020-11-11\",//dateToStr(new Date()),\r\n            dayEntry: {},\r\n            mealEntries: [],\r\n            selectedMeal: null,\r\n            mealCounter: 0,\r\n            sFoodItems: [],\r\n            selectedFood: null,\r\n            sFoodCounter: 0,\r\n            amount: \"\",\r\n            measure: \"---\"\r\n        };\r\n\r\n        //; (async () => {\r\n        this.loadDailyMeals(this.state.selectedDay);\r\n        this.loadSFoodItems(\"\", false);\r\n        //})();\r\n    }\r\n\r\n    loadDailyMeals = async (day) => {\r\n        let { mealEntries, mealCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res = await fetch(getServerURL() + \"/dailymeals\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"reqdate\": day,\r\n                \"userid\": userId,\r\n            }\r\n        });\r\n        res = await res.json();\r\n\r\n        mealEntries = [];\r\n        let first = true;\r\n        for (let m of res.meals)\r\n            if (!first)\r\n                mealEntries.push(<MealEntry\r\n                    selectedChanged={this.onSelectedMealChanged}\r\n                    removeMeal={this.onRemoveMeal}\r\n                    mealEntry={m}\r\n                    key={mealCounter++} />);\r\n            else {\r\n                mealEntries.push(<MealEntry\r\n                    signalSelect={true}\r\n                    selectedChanged={this.onSelectedMealChanged}\r\n                    removeMeal={this.onRemoveMeal}\r\n                    mealEntry={m}\r\n                    key={mealCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            selectedDay: day,\r\n            dayEntry: res,\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter\r\n        });\r\n    }\r\n\r\n    loadSFoodItems = async (searchTerms, isAll) => {\r\n        let { sFoodItems, sFoodCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res;\r\n        res = await fetch(getServerURL() + \"/dailymeals/foodsearch\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"userid\": userId,\r\n                \"search\": searchTerms,\r\n                \"isall\": isAll\r\n            }\r\n        });\r\n        res = await res.json();\r\n\r\n\r\n        sFoodItems = [];\r\n        let first = true;\r\n        for (let f of res)\r\n            if (!first)\r\n                sFoodItems.push(<FoodItem\r\n                    selectedChanged={this.onSelectedFoodChanged}\r\n                    foodItem={f}\r\n                    key={sFoodCounter++} />);\r\n            else {\r\n                sFoodItems.push(<FoodItem\r\n                    signalSelect={true}\r\n                    selectedChanged={this.onSelectedFoodChanged}\r\n                    foodItem={f}\r\n                    key={sFoodCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            selectedFood: first ? null : this.state.selectedFood,\r\n            measure: first ? \"---\" : this.state.measure,\r\n            sFoodItems: sFoodItems,\r\n            sFoodCounter: sFoodCounter\r\n        });\r\n    };\r\n\r\n    onCommit = async (ev) => {\r\n        const { dayEntry, selectedDay } = this.state;\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        const dayPutReq = dayEntry;\r\n        dayPutReq.userid = userId;\r\n        dayPutReq.date = selectedDay;\r\n\r\n        let res = await fetch(getServerURL() + \"/dailymeals\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(dayPutReq)\r\n        });\r\n        res = await res.json();\r\n        alert(`Successfully entered date for day ${selectedDay}!\\n --You can view resulting entry in the console`);\r\n        console.log(res);\r\n    };\r\n\r\n    onAddNewMeal = (ev) => {    //TODO\r\n        const { mealEntries, dayEntry, selectedMeal } = this.state;\r\n        let { mealCounter } = this.state;\r\n\r\n        if (selectedMeal)\r\n            mealEntries.push(<MealEntry\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n        else\r\n            mealEntries.push(<MealEntry\r\n                signalSelect={true}\r\n                selectedChanged={this.onSelectedMealChanged}\r\n                removeMeal={this.onRemoveMeal}\r\n                key={mealCounter++}\r\n            />);\r\n\r\n        dayEntry.meals.push({       //TODO: Must make Custamizable\r\n            key: mealCounter - 1,\r\n            mealname: \"New Meal\",\r\n            portion: 1,\r\n            noteid: null,\r\n            foodentries: []\r\n        });\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter,\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    onRemoveMeal = (ev, sender) => {\r\n        const { selectedMeal, mealEntries, dayEntry } = this.state;\r\n\r\n        dayEntry.meals = dayEntry.meals.filter((m) => !((m.mealid && m.mealid === sender.state.mealEntry.mealid)\r\n            || m.key == sender._reactInternalFiber.key));\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries.filter((meal) => meal.key !== sender._reactInternalFiber.key),\r\n            dayEntry: dayEntry\r\n        });\r\n\r\n\r\n        if (selectedMeal !== null && selectedMeal === sender)\r\n            this.setState({\r\n                selectedMeal: null\r\n            });\r\n        ev.stopPropagation();\r\n    };\r\n    \r\n    onSelectedMealChanged = (ev, sender) => {\r\n        const { selectedMeal } = this.state;\r\n\r\n        if (sender !== selectedMeal) {\r\n            if (selectedMeal)\r\n                selectedMeal.toggleHighlight();\r\n            sender.toggleHighlight();\r\n\r\n            this.setState({\r\n                selectedMeal: sender\r\n            });\r\n        }\r\n    };\r\n\r\n    onAddNewFoodEntry = (ev) => {\r\n        const { selectedMeal, selectedFood, dayEntry, amount } = this.state;\r\n\r\n        if (selectedMeal === null)\r\n            alert(\"Must select a Meal !\");\r\n        else if (selectedFood === null)\r\n            alert(\"Must select a Food Item !\");\r\n        else {\r\n            const amountInput = document.querySelector(\"#amountSize\");\r\n\r\n            if (isNaN(amount)) {\r\n                alert(\"Must Enter Valid Number for Amount!\");\r\n                this.setState({\r\n                    amount: \"\"\r\n                });\r\n                return;\r\n            }\r\n            else {\r\n                const newFoodEntry = selectedFood.state.foodItem;\r\n                newFoodEntry.amount = amount ? amount : amountInput.placeholder;\r\n                newFoodEntry.measure = newFoodEntry.sizeinfo === null ? \"Pieces\" : \"Grams\";\r\n\r\n                selectedMeal.addNewFoodEntry(ev, newFoodEntry);\r\n                for (let m of dayEntry.meals)\r\n                    if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                        || selectedMeal._reactInternalFiber.key == m.key)\r\n                        m.foodentries.push(newFoodEntry);\r\n\r\n                this.setState({\r\n                    dayEntry: dayEntry\r\n                });\r\n            }\r\n            document.querySelector(\"#search\").select();\r\n        }\r\n    };\r\n\r\n    onSelectedFoodChanged = (ev, sender) => {\r\n        const { selectedFood } = this.state;\r\n\r\n        if (sender !== selectedFood) {\r\n            if (selectedFood)\r\n                selectedFood.toggleSelected();\r\n            sender.toggleSelected();\r\n            if (document.activeElement !== document.querySelector(\"#search\"))\r\n                document.querySelector(\"#search\").select();\r\n\r\n            this.setState({\r\n                selectedFood: sender,\r\n                amount: \"\",\r\n                measure: sender.state.foodItem.sizeinfo === null ? \"Pieces\" : \"Grams\"\r\n            });\r\n        }\r\n    };\r\n\r\n    currentEntry = () => {\r\n        const { selectedFood, amount } = this.state;\r\n\r\n        if (selectedFood) {\r\n            const measure = document.querySelector(\"#measureSelect\").value;\r\n            return <FoodEntry foodItem={selectedFood.state.foodItem}\r\n                amount={amount ? amount : (selectedFood.state.foodItem.sizeinfo === null ? 1 : 100)}\r\n                measure={measure}\r\n                key={selectedFood.state.foodItem.foodid.toString() + amount + measure} />\r\n        }\r\n        else\r\n            return <FoodEntry key={null} />\r\n    }\r\n\r\n    onDayButtons = (ev, nrDays) => {\r\n        const { selectedDay } = this.state;\r\n\r\n        let d = new Date(selectedDay);\r\n        d.setDate(d.getDate() + nrDays);\r\n\r\n        this.loadDailyMeals(dateToStr(d));\r\n    }\r\n\r\n    onSearchKey = (ev) => {\r\n        const { selectedFood, sFoodItems } = this.state;\r\n\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#amountSize\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#search\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === 0)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i - 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === sFoodItems.length - 1)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i + 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onAmountKey = (ev) => {\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#search\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#amountSize\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":     //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":   //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };//TODO?\r\n\r\n    render = () => {\r\n        const { selectedDay, mealEntries, selectedFood, amount, measure } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainDailyMeals boxShow\">\r\n                <div id=\"dayArea\" className=\"subblock boxShow\">\r\n                    <div className=\"dayHeader\">\r\n                        <div className=\"datepick boxShow\">\r\n                            <label className=\"textHigh\">Day: </label>\r\n                            <button onClick={(ev) => this.onDayButtons(ev, -1)} className=\"ftButton\" > {\"<\"}</button>\r\n                            <input onChange={(ev) => this.loadDailyMeals(ev.currentTarget.value)} id=\"selectedDay\" type=\"date\" value={selectedDay} />\r\n                            <button onClick={(ev) => this.onDayButtons(ev, 1)} className=\"ftButton\">{\">\"}</button>\r\n                        </div>\r\n                        <hr />\r\n                        <Note />\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"mealsArea\">\r\n                        {mealEntries}\r\n                    </div>\r\n                    <div className=\"dayAreaButtons\">\r\n                        <button onClick={this.onCommit} className=\"ftButton\">COMMIT DAY!</button>\r\n                        <button onClick={this.onAddNewMeal} className=\"newMeal ftButton\">NEW MEAL</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"searchArea\" className=\"subblock boxShow\">\r\n                    <div className=\"searchInput boxShow\">\r\n                        <label className=\"textHigh\">Search Food: </label>\r\n                        <input onChange={(ev) => this.loadSFoodItems(\r\n                            document.querySelector(\"#search\").value,\r\n                            ev.currentTarget.checked)}\r\n                            id=\"isAll\" type=\"checkbox\" />\r\n                        ALL Food\r\n                        <input onChange={(ev) => this.loadSFoodItems(\r\n                            ev.currentTarget.value,\r\n                            document.querySelector(\"#isAll\").checked)}\r\n                            onKeyDown={this.onSearchKey}\r\n                            id=\"search\" type=\"text\"\r\n                            placeholder=\"search terms\" />\r\n                    </div>\r\n                    <div className=\"searchResults boxShow\">\r\n                        {this.state.sFoodItems}\r\n                    </div>\r\n                    <div className=\"amountInput boxShow\">\r\n                        <label className=\"textHigh\">Amount: </label>\r\n                        <input id=\"amountSize\" type=\"text\" value={amount}\r\n                            onChange={(ev) => this.setState({ amount: ev.currentTarget.value })}\r\n                            onKeyDown={this.onAmountKey}\r\n                            placeholder={selectedFood ? (measure === \"Pieces\" ? 1 : 100) : 0} />\r\n                        <select id=\"measureSelect\" value={measure} onChange={() => { }}>\r\n                            <option className={selectedFood ? measure === \"Grams\" ? \"\" : \"hidden\" : \"hidden\"}>\r\n                                Grams</option>\r\n                            <option className={selectedFood ? measure === \"Pieces\" ? \"\" : \"hidden\" : \"hidden\"}>\r\n                                Pieces</option>\r\n                            <option className=\"hidden\">---</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"searchEntry boxShow\">\r\n                        <label className=\"textHigh lineDown\">Current Entry:</label>\r\n                        {this.currentEntry()}\r\n                        <button onClick={this.onAddNewFoodEntry} className=\"ftButton\">ADD TO MEAL</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                    <div className=\"foodDetailsHeader\">\r\n                        <div className=\"textHigh boxShow\">cottage cheese @delaco</div>\r\n                        <hr />\r\n                        <Note />\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"foodPic boxShow\">\r\n                        <img src=\"FoodPics/cottage cheese @delaco.jpg\" alt=\"[NO FOOD PIC]\" />\r\n                    </div>\r\n                    <div className=\"foodInfo\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr><th>Name</th><td colSpan=\"2\">Cottage Cheese</td></tr>\r\n                                <tr><th>Brand</th><td colSpan=\"2\">Delaco</td></tr>\r\n                                <tr><th>Macro</th><th>100g</th><th>1(175g)</th></tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr><td>Fat</td><td>4.5g</td><td>7.9g</td></tr>\r\n                                <tr><td>Carbs</td><td>2g</td><td>3.5g</td></tr>\r\n                                <tr><td>Protein</td><td>12g</td><td>21g</td></tr>\r\n                                <tr><td>Calories</td><td>96.5Kc</td><td>169.1Kc</td></tr>\r\n                                <tr><td>Price</td><td>2.57Lei</td><td>4.5Lei</td></tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"buffer\"></div>\r\n                        <div className=\"foodEntries boxShow\">\r\n                            <label className=\"textHigh lineDown\">Composition:</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DailyMeals;","import React from 'react';\r\n\r\nconst YourFood = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR FOOD!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourFood;","import React from 'react';\r\n\r\nconst YourPlans = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR PLANS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourPlans;","import React from 'react';\r\n\r\nconst YourStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourStats;","import React from 'react';\r\n\r\nconst GlobalStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalStats;","import React from 'react';\r\n\r\nconst GlobalData = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL DATA!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalData;","import React from 'react';\r\nimport \"../Css/RegLog.css\"; //TODO: Replace somehow! (this is just copy/pasted from register)\r\nimport { app } from '../App';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: app.state.currentUser\r\n        };\r\n    }\r\n\r\n    render = () => {    //TODO: Replace somehow! (this is just copy/pasted from register)\r\n        const { user } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <div id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">User Profile !</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: {user.username}</span>\r\n                        <span>Email: {user.email}</span>\r\n                        <span>First Name: {user.firstname}</span>\r\n                        <span>Last Name: {user.lastname}</span>\r\n                        <span>Date Of Birth: {user.dob}</span>\r\n                        <span>Sex: {user.sex===\"1\"?\"Male\":\"Female\"}</span>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src={`UserPics/${user.pic}`} alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea readOnly={true} value={user.describe}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Meal Plans: {user.defaultmeals}</span>\r\n                        <span>Diet Plans? </span>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\nimport { app } from '../App';\r\nimport svData from '../svData.json';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nconst getServerURL = () => {\r\n    return svData.serverLink;\r\n    //return \"http://localhost:3001\";\r\n}\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            warningMsg: null\r\n        };\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        try {\r\n            ev.preventDefault();\r\n            const inputs = document.querySelectorAll(\"#logform input\");\r\n            const usernameText = inputs[0].value;\r\n            const passText = inputs[1].value;\r\n\r\n            let res = await fetch(getServerURL() + \"/login\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: usernameText,\r\n                    pass: passText\r\n                })\r\n            });\r\n            if (res.status === 200) {\r\n                res = await res.json();\r\n                if (typeof res === \"string\")\r\n                    this.setState({\r\n                        warningMsg: res\r\n                    });\r\n                else {\r\n                    app.updateUser(res);\r\n                    app.changeMainPage(\"Profile\");\r\n                }\r\n            }\r\n            else {\r\n                console.log(await res.json());\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"___________ERROR___________\\n\", err.message);\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onLogin} id=\"logform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Enter Username/Email and Password to Login!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username/Email: </span><input type=\"text\" name=\"username\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span>Remember Me? <input type=\"checkbox\" name=\"member\" /></span>\r\n                        <span className={this.state.warningMsg === null ? \"hidden\" : \"warning\"}>{this.state.warningMsg}</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"loglinks\">\r\n                        <NavLink to=\"/\">Forgot Password?</NavLink>\r\n                        <NavLink to=\"/Register\">New here? Go Register!</NavLink>\r\n                    </div>\r\n                    */}\r\n                    <div className=\"loglinks\">\r\n                        <span onClick={() => app.changeMainPage(\"Home\")}>Forgot Password?</span>\r\n                        <span onClick={() => app.changeMainPage(\"Register\")}>New here? Go Register!</span>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"../Css/RegLog.css\";\r\n\r\nclass Register extends React.Component {\r\n\r\n    onRegister = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onClick={this.onRegister} id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Please Complete ALL fields to Register!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username: </span><input type=\"text\" name=\"username\" />\r\n                        <span className=\"warning\">How DARE You, Sir!</span>\r\n                        <span>Email:</span> <input type=\"email\" name=\"email\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span className=\"detail\">Password must be at least 6characters long and have both numbers and letters!</span>\r\n                        <span>Confirm Password: </span><input type=\"password\" name=\"cpass\" />\r\n                        <span>First Name: </span><input type=\"text\" name=\"firstname\" />\r\n                        <span>Last Name: </span><input type=\"text\" name=\"lastname\" />\r\n                        <span>Date Of Birth: </span><input type=\"date\" name=\"dob\" />\r\n                        <div>\r\n                            <span>Sex: </span><input type=\"radio\" name=\"sex\" value=\"male\" /><span>Male </span>\r\n                            <input type=\"radio\" name=\"sex\" value=\"female\" /><span>Female</span>\r\n                        </div>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src=\"UserPics/profileEmpty.png\" alt=\"[NO PIC]\" /><br />\r\n                                <button>Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description:</span><br />\r\n                                <textarea placeholder=\"Say who you are in a few short phrases..\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Diet Plans?</span>\r\n                        <select>\r\n                            <option>Paleo</option>\r\n                            <option>Keto</option>\r\n                            <option>Mediterranian</option>\r\n                            <option>Vegan</option>\r\n                            <option>Carnivore</option>\r\n                            <option>Low Carb</option>\r\n                            <option>Low Fat</option>\r\n                            <option>PSMF</option>\r\n                        </select>\r\n                        <span className=\"detail\">-Pick a Diet from list if any of them apply to You - Can always change it later!</span>\r\n                        <span className=\"detail\">(This Choice is simply for tracking stats - Will Not affect results &recommendations)</span>\r\n                        <input className=\"ftButton\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>Error! Page does not exist!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Error;","//import { Route, Switch } from 'react-router-dom';\r\n//\r\n//const Main = () => {\r\n//    return (\r\n//        <Switch>\r\n//            <Route path=\"/\" component={Home} exact/>\r\n//            <Route path=\"/DailyMeals\" component={DailyMeals} />\r\n//            <Route path=\"/YourFood\" component={YourFood} />\r\n//            <Route path=\"/YourPlans\" component={YourPlans} />\r\n//            <Route path=\"/YourStats\" component={YourStats} />\r\n//            <Route path=\"/GlobalStats\" component={GlobalStats} />\r\n//            <Route path=\"/GlobalData\" component={GlobalData} />\r\n//            <Route path=\"/Login\" component={Login} />\r\n//            <Route path=\"/Register\" component={Register} />\r\n//            <Route component={Error} />\r\n//        </Switch>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\n\r\nimport Home from \"../MainPages/Home\";\r\nimport DailyMeals from '../MainPages/DailyMeals';\r\nimport YourFood from '../MainPages/YourFood';\r\nimport YourPlans from '../MainPages/YourPlans';\r\nimport YourStats from '../MainPages/YourStats';\r\nimport GlobalStats from '../MainPages/GlobalStats';\r\nimport GlobalData from '../MainPages/GlobalData';\r\nimport Profile from '../MainPages/Profile';\r\nimport Login from '../MainPages/Login';\r\nimport Register from '../MainPages/Register';\r\nimport Error from '../MainPages/Error';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: props.page ? props.page : \"Home\"\r\n        };\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { page } = this.state;\r\n\r\n        if (page !== newPage)\r\n            this.setState({\r\n                page: newPage\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        switch (this.state.page) {\r\n            case \"Home\":\r\n                return <Home />;\r\n            case \"DailyMeals\":\r\n                return <DailyMeals />;\r\n            case \"YourFood\":\r\n                return <YourFood />;\r\n            case \"YourPlans\":\r\n                return <YourPlans />;\r\n            case \"YourStats\":\r\n                return <YourStats />;\r\n            case \"GlobalStats\":\r\n                return <GlobalStats />;\r\n            case \"GlobalData\":\r\n                return <GlobalData />;\r\n            case \"Profile\":\r\n                return <Profile />;\r\n            case \"Register\":\r\n                return <Register />;\r\n            case \"Login\":\r\n                return <Login />;\r\n            default:\r\n                return <Error />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"subblock boxShow\">\r\n                <h3 id=\"author\">--Made by Rotariu Stefan<sub> - StravoS</sub></h3>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Sections/Header';\r\nimport Nav from './Sections/Nav';\r\nimport Main from './Sections/Main';\r\nimport Footer from './Sections/Footer';\r\n\r\nconst refs = {\r\n    main: React.createRef(),\r\n    footer: React.createRef(),\r\n    header: React.createRef(),\r\n    nav: React.createRef()\r\n};\r\n\r\nlet app = null;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultUser = {\r\n            userid: 0,\r\n            username: \"Guest\",\r\n            email: \"guest@nomail.none\",\r\n            firstname: \"John\",\r\n            lastname: \"Doe\",\r\n            dob: new Date(),\r\n            sex: 1,\r\n            describe: \"placeholder\",\r\n            pic: \"profileEmpty.png\",\r\n            default_meals: 'Breakfast,Lunch,Dinner',\r\n            access: \"Guest\"\r\n        };\r\n\r\n        this.state = {\r\n            currentUser: this.defaultUser\r\n        };\r\n        app = this;\r\n    }\r\n\r\n    updateUser = (res) => {\r\n        const { defaultUser } = this;\r\n\r\n        if (res === null) {\r\n            this.setState({\r\n                currentUser: defaultUser\r\n            });\r\n            refs.header.current.updateUser(false, defaultUser.username, defaultUser.pic);\r\n        }\r\n        else {\r\n            this.setState({\r\n                currentUser: res\r\n            });\r\n            refs.header.current.updateUser(true, res.username, res.pic);\r\n        }\r\n    };\r\n\r\n    changeMainPage = (newPage) => refs.main.current.changePage(newPage);\r\n\r\n    render = () => {\r\n        return (\r\n            [\r\n                <Header ref={refs.header} key=\"H\" />,\r\n                <Nav ref={refs.nav} key=\"N\" />,\r\n                <Main ref={refs.main} page=\"DailyMeals\" key=\"M\" />,\r\n                <Footer ref={refs.footer} key=\"F\" />\r\n            ]\r\n        );\r\n    };\r\n}\r\n\r\nexport { App, app };","//import { BrowserRouter } from 'react-router-dom';\r\n//\r\n//ReactDOM.render(\r\n//    <BrowserRouter>\r\n//        <Header />\r\n//        <Nav />\r\n//        <Main />\r\n//        <Footer />\r\n//    </BrowserRouter>,\r\n//    document.querySelector(\"#root\"));\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector(\"#root\"));"],"sourceRoot":""}