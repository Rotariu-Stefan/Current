{"version":3,"sources":["Sections/Header.js","Sections/Nav.js","MainPages/Home.js","Components/FoodEntry.js","Components/NoteView.js","Components/Note.js","Components/MealEntry.js","Components/FoodItem.js","MainPages/DailyMeals.js","MainPages/YourFood.js","MainPages/YourPlans.js","MainPages/YourStats.js","MainPages/GlobalStats.js","MainPages/UsersData.js","MainPages/Profile.js","MainPages/Login.js","MainPages/Register.js","MainPages/Error.js","Sections/Main.js","Sections/Footer.js","App.js","index.js"],"names":["Header","props","updateUser","newIsLogged","newUsername","newPic","setState","isLogged","username","pic","onLogClick","state","app","changeMainPage","render","className","src","alt","onClick","id","defaultUser","React","Component","Nav","Home","FoodEntry","foodEntry","getMacroRes","mstr","amount","measure","sizeinfo","toFixed","fatRes","carbsRes","proteinRes","foodname","brand","fat","carbs","protein","readOnly","ev","removeFoodEntry","componentDidMount","addToMeal","foodItem","defaultFoodEntry","foodid","userid","price","isdish","note","NoteView","toggleSelected","isSelected","score","title","notetext","selectedChanged","signalSelect","Note","onEditAddNote","isValues","isEdit","isEditValues","loadNoteViews","searchTerms","noteViews","noteViewsIsLoading","searchCounter","sc","setTimeout","searchNoteViews","a","noteViewCounter","userId","currentUser","fetch","getServerURL","method","headers","res","json","first","n","push","onSelectedNoteViewChanged","key","sender","selectedNoteView","setNote","newScore","newTitle","newText","updateAttach","isMin","onChange","type","name","_reactInternalFiber","value","checked","currentTarget","defaultValue","options","maxLength","removeNote","i","MealEntry","addNewFoodEntry","newFoodEntry","foodEntries","foodCounter","onRemoveFoodEntry","addNewFoodEntryMacros","mealEntry","portion","length","toString","foodentries","splice","addToDay","updateDayMF","toggleHighlight","isHighlighted","toggleMinMax","stopPropagation","onUpdateAttach","newNote","onRemoveNote","updateDay","newfat","newcarbs","newprotein","mealname","removeMeal","defaultMealEntry","f","FoodItem","defaultFoodItem","DailyMeals","loadDailyMeals","day","access","Date","alert","mealEntries","selectedMeal","mealareaIsLoading","dayFat","dayCarbs","dayProtein","mealCounter","meals","m","onSelectedMealChanged","onUpdateDay","onRemoveMeal","updateSelectedMealNote","selectedDay","dayEntry","loadSFoodItems","isAll","sFoodItems","searchareaIsLoading","xx","sFoodCounter","onSelectedFoodChanged","selectedFood","onCommit","dayPutReq","date","body","JSON","stringify","console","log","onAddNewMeal","newFoodForm","newMPortion","document","querySelector","isNaN","newMName","newMeal","placeholder","noteid","select","filter","mealid","undefined","meal","dishSelected","newcarb","onAddNewFoodEntry","newFoodItem","composition","selectedFoodDetails","sum","Number","saveDishIngr","dishData","dishid","calculateValues","activeElement","onDishSelect","currentEntry","newFoodKey","changeNewFoodValue","field","aux","psi","disabled","onDayButtons","nrDays","d","setDate","getDate","dateToStr","onSearchKey","preventDefault","querySelectorAll","click","onAmountKey","onKeyDown","colSpan","YourFood","YourPlans","YourStats","GlobalStats","UsersData","Profile","passRegex","onChangeProfile","isLoading","email","firstname","lastname","dob","sex","describe","diet","warning","includes","updateUserProfile","message","cancelChangeProfile","onChangePassword","passNow","passNew","passConfirm","match","oldpass","newpass","browseUserPic","onSubmit","onReset","minLength","Login","onLogin","inputs","usernameText","passText","pass","status","warningMsg","Register","onRegister","passC","pattern","required","desc","Error","Main","changePage","newPage","page","Footer","refs","main","createRef","footer","header","nav","App","dateObj","getFullYear","getMonth","svData","serverLink","data","current","ref","default_meals","ReactDOM"],"mappings":"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","file":"static/js/main.dbad4ce2.chunk.js","sourcesContent":["//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Header = () => {\r\n//    return (\r\n//        <header className=\"subblock boxShow\">\r\n//            <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n//            <div id=\"titleArea\">\r\n//                <NavLink to=\"/\">\r\n//                    <h1 id=\"title\">FoodTracker</h1>\r\n//                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n//                </NavLink>\r\n//            </div>\r\n//            <div id=\"profileArea\" className=\"boxShow\">\r\n//                <NavLink to=\"/Login\">\r\n//                    Guest<br />\r\n//                    <img src=\"SitePics/profileEmpty.png\" alt=\"[NO PIC]\" />\r\n//                </NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Register\">Register</NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Login\">Login</NavLink>\r\n//            </div>\r\n//        </header>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\nimport { app } from '../App';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            username: app.defaultUser.username,\r\n            pic: app.defaultUser.pic\r\n        };\r\n    }\r\n\r\n    updateUser = (newIsLogged, newUsername, newPic) => {\r\n        this.setState({\r\n            isLogged: newIsLogged,\r\n            username: newUsername,\r\n            pic: newPic\r\n        });\r\n    }\r\n\r\n    onLogClick = () => {\r\n        const { isLogged } = this.state;\r\n\r\n        if (isLogged) {\r\n            app.updateUser(null);\r\n            app.changeMainPage(\"Home\");\r\n        }\r\n        else\r\n            app.changeMainPage(\"Login\");\r\n    }\r\n\r\n    render = () => {\r\n        const { isLogged, username, pic } = this.state;\r\n\r\n        return (\r\n            <header className=\"subblock boxShow\">\r\n                <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n                <div onClick={() => app.changeMainPage(\"Home\")} id=\"titleArea\">\r\n                    <h1 id=\"title\">FoodTracker</h1>\r\n                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n                </div>\r\n                <div id=\"profileArea\" className=\"boxShow\">\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n                        {username}\r\n                        <br />\r\n                        <img src={`UserPics/${pic ? pic : \"profileEmpty.png\"}`} alt=\"[NO PIC]\" />\r\n                    </span>\r\n                    <span onClick={() => app.changeMainPage(isLogged ? \"Profile\" : \"Register\")} className=\"navlink\">\r\n                        {isLogged ? \"Profile\" : \"Register\"}\r\n                    </span>\r\n                    <span onClick={this.onLogClick} className=\"navlink\">\r\n                        {isLogged ? \"Logout\" : \"Login\"}\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n//\r\n//const Nav = () => {\r\n//    return (\r\n//        <nav className=\"subblock boxShow\">\r\n//            <NavLink className=\"navlink textHigh\" to=\"/DailyMeals\">Daily Meals</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourFood\">Your Food</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourPlans\">Your Plans</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourStats\">Your Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalStats\">Global Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalData\">Global Data</NavLink>\r\n//        </nav>\r\n//    );\r\n//}\r\n\r\nclass Nav extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <nav className=\"subblock boxShow\">\r\n                <span onClick={() => app.changeMainPage(\"DailyMeals\")} className=\"navlink textHigh\">Daily Meals</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourFood\")} className=\"navlink textHigh\">Your Food</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourPlans\")} className=\"navlink textHigh\">Your Plans</span>|\r\n            <span onClick={() => app.changeMainPage(\"YourStats\")} className=\"navlink textHigh\">Your Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalStats\")} className=\"navlink textHigh\">Global Stats</span>|\r\n            <span onClick={() => app.changeMainPage(\"GlobalData\")} className=\"navlink textHigh\">Users Data</span>\r\n            </nav>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>WELCOME !</h1>\r\n                <p>\r\n                    This is a website where you can track what you eat. You can Design ,Customize and Organize\r\n                    foods, meals and diet plans to your liking, and also track various self defined goals\r\n                    with a high degree of customisability and have easy access to helpful information.\r\n                </p>\r\n                <p><br />\r\n                    While preselecting foods through scanning codes and importing lists from various places will\r\n                    be available in the future, the Main Functionality of this site revolves around providing a\r\n                    a simple practical and flexible framework where YOU Define and Organize your stuff and can potentially completely ignore anything else.\r\n                </p>\r\n                <p><br />\r\n                    This has been entirely made from scratch by me (o/ hi!) mostly because other similar websites seem to want to box you into a way of doing things and predefine certain goals for you while also expecting you to pick from many predefined items. I found this rather confusing or restrictive and annoying.\r\n                    BUT here if you feel like making a user called Worm69 that eats 2grams of Dirt and Fungus 30 times a day you can do that!(please don't tho..)\r\n                </p><br />\r\n                <p><span>As a Guest you have Certain Limitations:</span> You can only log food in a specific time period and also have limits on how many entries you can asign to your daily meals. The Guest is only here to quick demonstrations on how this site functions and the data you enter is NOT Realiable/Persistent for long terms.\r\n                    (also as this site is currently running for free and will receive major changes-including the database- The Data you put in might get wiped/changed in the future).\r\n                    </p>\r\n                <p><br />\r\n                    This site is in constant development and tends to get frequent (often daily) updates.\r\n                    Right now you can make an account, change profile details, and in DailyMeals section you can\r\n                    add/change Meals to days you select, and add Food Items to Meals.\r\n                    You can do this either by searching through a list of Foods(right now comprises of what I've eaten lately) or create your own foods. Right now you can only add simple foods with a name and brand, macronutrients and size/portion information. More will come.\r\n                    <br />\r\n                </p>\r\n                <p><br/>\r\n                    But you can attach notes to days and meals. Notes consist of a score, a title and text.\r\n                        You use this system to write how you felt about a meal, keep track of alergies/odd reactions/blood sugar or really anything you want. You can find a list of my notes but they probably won't help much because it's personal to me. The list will change to something more general/better later on.\r\n                </p>\r\n\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass FoodEntry extends React.Component {\r\n    static defaultFoodEntry = {\r\n        //entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nobody\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: null, price: 0,\r\n        isdish: false,\r\n        note: null,\r\n        amount: 1,\r\n        measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let foodEntry;\r\n        if (props.foodEntry)\r\n            foodEntry = props.foodEntry;\r\n        else if (props.foodItem) {\r\n            foodEntry = props.foodItem;\r\n            foodEntry.amount = props.amount;\r\n            foodEntry.measure = props.measure;\r\n        }\r\n        else\r\n            foodEntry = { ...FoodEntry.defaultFoodEntry };\r\n\r\n        this.state = {\r\n            foodEntry: foodEntry\r\n        };\r\n\r\n        this.state.fatRes = this.getMacroRes(\"fat\");\r\n        this.state.carbsRes = this.getMacroRes(\"carbs\");\r\n        this.state.proteinRes = this.getMacroRes(\"protein\");\r\n    }\r\n\r\n    getMacroRes = (mstr) => {\r\n        const { amount, measure, sizeinfo } = this.state.foodEntry;\r\n        if (measure === \"Pieces\")\r\n            if (sizeinfo === null)\r\n                return (this.state.foodEntry[mstr] * amount).toFixed(1);\r\n            else {\r\n                return (this.state.foodEntry[mstr] * amount * sizeinfo / 100).toFixed(1);\r\n            }\r\n        else if (measure === \"Grams\")\r\n            return (this.state.foodEntry[mstr] * amount / 100).toFixed(1);\r\n    };\r\n\r\n    render = () => {\r\n        const { foodEntry, fatRes, carbsRes, proteinRes } = this.state;\r\n        const { foodname, brand, amount, fat, carbs, protein } = foodEntry;\r\n\r\n        return (\r\n            <div className={\"foodEntry \" + this.props.className}>\r\n                <span className=\"amount\">{amount}</span>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"macroRes\">{`${fatRes}/${carbsRes}/${proteinRes}`}\r\n                    {this.props.readOnly ? \"\"\r\n                        : <img className=\"managerImg\" src=\"SitePics/icons8-closeM-window-16.png\" alt=\"X\" onClick={(ev) => this.props.removeFoodEntry(ev, this)} />}\r\n                </span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { fatRes, carbsRes, proteinRes } = this.state;\r\n\r\n        if (this.props.addToMeal) {\r\n            this.props.addToMeal(fatRes, carbsRes, proteinRes);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FoodEntry;","import React from \"react\";\r\n\r\nclass NoteView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            note: props.note,\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { isSelected, note } = this.state;\r\n        const { score, title, notetext } = note;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)} className={\"noteView boxShow lineDown\" + (isSelected ? \" nSelected\" : \"\")}>\r\n                <img src={`SitePics/star${score}.png`} alt={\"S=\" + (score)} className=\"scoreImg\" />\r\n                <span className=\"title\">{title}</span>\r\n                <span>{\"--\" + (notetext ? notetext : \"<Empty>\")}</span>\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default NoteView;","import React from \"react\";\r\nimport NoteView from './NoteView';\r\nimport { app } from '../App';\r\n\r\nclass Note extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            note: props.note,\r\n\r\n            isEdit: false,\r\n            isEditValues: false,\r\n\r\n            selectedNoteView: null,\r\n            noteViews: [],\r\n            noteViewsIsLoading: true,\r\n            noteViewCounter: 0,\r\n            searchCounter: 0,\r\n\r\n            newScore: 0,\r\n            newTitle: \"\",\r\n            newText: \"\"\r\n        };\r\n        this.options = [];\r\n        for (let i = -5; i <= 5; i++)\r\n            this.options.push(<option key={i}>{i}</option>);\r\n    }\r\n\r\n    onEditAddNote = (isValues) => {\r\n        if (isValues)\r\n            this.setState({\r\n                isEdit: true,\r\n                isEditValues: true\r\n            });\r\n        else {\r\n            this.setState({\r\n                isEdit: true,\r\n                isEditValues: false\r\n            });\r\n            this.loadNoteViews(\"\");\r\n        }\r\n    };\r\n\r\n    loadNoteViews = (searchTerms) => {\r\n        this.setState({\r\n            noteViews: [],\r\n            noteViewsIsLoading: true,\r\n            searchCounter: this.state.searchCounter + 1\r\n        });\r\n        const sc = this.state.searchCounter + 1;\r\n\r\n        setTimeout(() => this.searchNoteViews(searchTerms, sc), 150);\r\n    };\r\n\r\n    searchNoteViews = async (searchTerms, searchCounter) => {\r\n        if (searchCounter < this.state.searchCounter)\r\n            return;\r\n\r\n        let { noteViewCounter } = this.state;\r\n        //If app.currentUser is Guest pretend it's SV\r\n        const userId = app.state.currentUser.userid === 0 ? 1 : app.state.currentUser.userid;\r\n\r\n        let res = await fetch(app.getServerURL() + \"/dailymeals/notesearch\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"userid\": userId,\r\n                \"search\": searchTerms\r\n            }\r\n        });\r\n        res = await res.json();\r\n        if (searchCounter < this.state.searchCounter)\r\n            return;\r\n\r\n        const noteViews = [];\r\n        let first = true;\r\n        for (let n of res)\r\n            if (!first)\r\n                noteViews.push(<NoteView note={n} selectedChanged={this.onSelectedNoteViewChanged} key={noteViewCounter++} />);\r\n            else {\r\n                noteViews.push(<NoteView note={n} signalSelect={true} selectedChanged={this.onSelectedNoteViewChanged} key={noteViewCounter++} />);\r\n                first = false;\r\n            }\r\n\r\n        this.setState({\r\n            noteViews: noteViews,\r\n            noteViewCounter: noteViewCounter,\r\n            noteViewsIsLoading: false\r\n        });\r\n    };\r\n\r\n    onSelectedNoteViewChanged = (ev, sender) => {\r\n        const { selectedNoteView } = this.state;\r\n\r\n        if (sender !== selectedNoteView) {\r\n            if (selectedNoteView)\r\n                selectedNoteView.toggleSelected();\r\n            sender.toggleSelected();\r\n\r\n            this.setState({\r\n                selectedNoteView: sender,\r\n            });\r\n        }\r\n    }\r\n\r\n    setNote = () => {\r\n        const { isEditValues, newScore, newTitle, newText } = this.state;\r\n\r\n        if (isEditValues) {\r\n            this.props.updateAttach({\r\n                score: newScore,\r\n                title: newTitle === \"\" ? \"Untitled\" : newTitle,\r\n                notetext: newText\r\n            });\r\n            this.setState({\r\n                note: {\r\n                    score: newScore,\r\n                    title: newTitle === \"\" ? \"Untitled\" : newTitle,\r\n                    notetext: newText\r\n                },\r\n                isEdit: false\r\n            });\r\n        }\r\n        else {\r\n            this.props.updateAttach(this.state.selectedNoteView.state.note);\r\n            this.setState({\r\n                note: this.state.selectedNoteView.state.note,\r\n                isEdit: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { isEdit, isEditValues, note, noteViews, noteViewsIsLoading, newScore } = this.state;\r\n        if (this.props.isMin)\r\n            return <hr />;\r\n\r\n        if (isEdit) {\r\n            return (\r\n                <div className=\"noteEdit boxShow\">\r\n                    <div className=\"editChoices\">\r\n                        <input onChange={(ev) => this.onEditAddNote(false)} type=\"radio\" name={this._reactInternalFiber.key + \"_radio\"} value=\"select\" checked={!isEditValues} />Select\r\n                        <input onChange={(ev) => this.onEditAddNote(true)} type=\"radio\" name={this._reactInternalFiber.key + \"_radio\"} value=\"values\" checked={isEditValues} />Values\r\n                        <button onClick={() => { this.setState({ isEdit: false }) }}>Cancel</button>\r\n                    </div>\r\n                    {isEditValues\r\n                        ? <div className=\"newNote\">\r\n                            <span>Score:</span>\r\n                            <div>\r\n                                <select onChange={(ev) => this.setState({\r\n                                    newScore: ev.currentTarget.value\r\n                                })} defaultValue={0}>\r\n                                    {this.options}\r\n                                </select>\r\n                                <img src={`SitePics/star${newScore}.png`} alt={\"S=\" + (newScore)} className=\"scoreImg\" />\r\n                                <button onClick={this.setNote}>Apply New Note</button>\r\n                            </div>\r\n                            <span>Title:</span><input onChange={(ev) => this.setState({ newTitle: ev.currentTarget.value })} type=\"text\" maxLength=\"50\" />\r\n                            <span>Text:</span><textarea onChange={(ev) => this.setState({ newText: ev.currentTarget.value })} maxLength=\"250\" />\r\n                        </div>\r\n                        : < div className=\"selectNote\">\r\n                            <div className=\"noteSearch\">\r\n                                Search:<input onChange={(ev) => this.loadNoteViews(ev.currentTarget.value)} type=\"text\" maxLength=\"100\" />\r\n                                <button onClick={this.setNote}>Select Note</button>\r\n                            </div>\r\n                            <div className=\"noteSearchArea\">\r\n                                {noteViewsIsLoading ? \"LOADING...\" : noteViews}\r\n                            </div>\r\n                        </div>}\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            if (note) {\r\n                const { score, title, notetext } = note;\r\n\r\n                return (\r\n                    <div className=\"note boxShow\">\r\n                        <img src={`SitePics/star${score}.png`} alt={\"S=\" + (score)} className=\"scoreImg\" />\r\n                        <img onClick={this.props.removeNote} src=\"SitePics/icons8-close-window-16.png\"\r\n                            alt=\"X\" className=\"managerImg\" />\r\n                        <img onClick={() => this.onEditAddNote(true)} src=\"SitePics/icons8-edit-16.png\"\r\n                            alt=\"New\" className=\"managerImg\" />\r\n                        <span className=\"title\">{title}</span>\r\n                        <span className=\"notetext\">{notetext ? \"--\" + notetext : \"\"}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n                return (\r\n                    <div className=\"note boxShow\">\r\n                        No Note<img className=\"managerImg\" src=\"SitePics/icons8-plus-16.png\" alt=\"N\" onClick={this.onEditAddNote} />\r\n                    </div >\r\n                );\r\n    };\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport FoodEntry from './FoodEntry';\r\nimport Note from './Note';\r\n\r\nclass MealEntry extends React.Component {\r\n    static defaultMealEntry = {\r\n        mealname: \"New Meal\",\r\n        portion: 1,\r\n        note: null,\r\n        foodentries: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mealEntry: props.mealEntry ? props.mealEntry : { ...MealEntry.defaultMealEntry },\r\n            foodEntries: [],\r\n            foodCounter: 0,\r\n            isHighlighted: false,\r\n            isMin: false,\r\n            fat: 0,\r\n            carbs: 0,\r\n            protein: 0\r\n        };\r\n\r\n        if (props.mealEntry)\r\n            for (let f of props.mealEntry.foodentries) {\r\n                this.state.foodEntries.push(<FoodEntry\r\n                    foodEntry={f}\r\n                    removeFoodEntry={this.onRemoveFoodEntry}\r\n                    className=\"lineDown\"\r\n                    addToMeal={this.addNewFoodEntryMacros}\r\n                    key={this.state.foodCounter} />);\r\n                this.state.foodCounter++;\r\n            }\r\n    }\r\n\r\n    addNewFoodEntry = (ev, newFoodEntry) => {\r\n        const { foodEntries } = this.state;\r\n        let { foodCounter } = this.state;\r\n\r\n        foodEntries.push(<FoodEntry foodEntry={newFoodEntry} removeFoodEntry={this.onRemoveFoodEntry} addToMeal={this.addNewFoodEntryMacros} key={foodCounter++} className=\"lineDown\" />);\r\n\r\n        this.setState({\r\n            foodEntries: foodEntries,\r\n            foodCounter: foodCounter,\r\n        });\r\n    };\r\n\r\n    onRemoveFoodEntry = (ev, sender) => {\r\n        const { foodEntries, mealEntry, fat, carbs, protein } = this.state;\r\n        const { portion } = mealEntry;\r\n\r\n        for (let i = 0; i < foodEntries.length; i++)\r\n            if (foodEntries[i].key.toString() === sender._reactInternalFiber.key) {\r\n                mealEntry.foodentries.splice(i, 1);\r\n                foodEntries.splice(i, 1)\r\n\r\n                this.setState({\r\n                    foodEntries: foodEntries,\r\n                    mealEntry: mealEntry,\r\n                    fat: fat - sender.state.fatRes * portion,\r\n                    carbs: carbs - sender.state.carbsRes * portion,\r\n                    protein: protein - sender.state.proteinRes * portion\r\n                });\r\n                this.props.addToDay(0 - sender.state.fatRes * portion, 0 - sender.state.carbsRes * portion\r\n                    , 0 - sender.state.proteinRes * portion);\r\n            }\r\n\r\n        this.props.updateDayMF(this);\r\n    };\r\n\r\n    toggleHighlight = () => this.setState({\r\n        isHighlighted: !this.state.isHighlighted\r\n    });\r\n\r\n    toggleMinMax = (ev) => {\r\n        this.setState({\r\n            isMin: !this.state.isMin\r\n        });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    onUpdateAttach = (newNote) => {\r\n        const { mealEntry } = this.state;\r\n\r\n        mealEntry.note = newNote;\r\n        this.setState({\r\n            mealEntry: mealEntry\r\n        });\r\n    };\r\n\r\n    onRemoveNote = () => {\r\n        const { mealEntry } = this.state;\r\n\r\n        mealEntry.note = null;\r\n        this.setState({\r\n            mealEntry: mealEntry\r\n        });\r\n        this.props.updateDay();\r\n    };\r\n\r\n    addNewFoodEntryMacros = (newfat, newcarbs, newprotein) => {\r\n        const { portion } = this.state.mealEntry;\r\n\r\n        this.state.fat += newfat * portion;\r\n        this.state.carbs += newcarbs * portion;\r\n        this.state.protein += newprotein * portion;\r\n        this.setState({});\r\n\r\n        this.props.addToDay(newfat * portion, newcarbs * portion, newprotein * portion);\r\n    };\r\n\r\n    render = () => {\r\n        const { mealEntry, isHighlighted, isMin, foodEntries, fat, carbs, protein } = this.state;\r\n        const { mealname, note, portion } = mealEntry;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"mealArea boxShow\" + (isHighlighted ? \" highlight\" : \"\")}>\r\n                <div className=\"mealTitle\">\r\n                    {`${mealname} (x${portion})`}\r\n                    <img onClick={(ev) => this.props.removeMeal(ev, this)} src=\"SitePics/icons8-cancel-20.png\" alt=\"X\"\r\n                        className=\"managerImg\" />\r\n                    <img onClick={this.toggleMinMax} src={isMin ? \"SitePics/icons8-plus-20.png\" : \"SitePics/icons8-minus-20.png\"} alt={isMin ? \"+\" : \"-\"}\r\n                        className=\"managerImg\" />\r\n                </div>\r\n                <Note removeNote={this.onRemoveNote} updateAttach={this.onUpdateAttach} note={note}\r\n                    key={this._reactInternalFiber.key + (note ? \"_note\" : \"0\")} isMin={isMin} />\r\n                <div className={\"foodEntries lineDown\" + (isMin ? \" hidden\" : \"\")}>\r\n                    {foodEntries}\r\n                </div>\r\n                <div className=\"mealTotal\">\r\n                    <span>Meal Total:</span>\r\n                    <span>{`${fat.toFixed(1)}|${carbs.toFixed(1)}|${protein.toFixed(1)}`}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n        else\r\n            this.setState({});\r\n    };\r\n}\r\n\r\nexport default MealEntry;","import React from 'react';\r\n\r\nclass FoodItem extends React.Component {\r\n    static defaultFoodItem = {\r\n        //entryid: 0,\r\n        foodid: 0,\r\n        foodname: \"Nothing\",\r\n        brand: \"Nowhere\",\r\n        fat: 0, carbs: 0, protein: 0,\r\n        sizeinfo: null, userid: 0, pic: \"empty.png\", price: 0,\r\n        isdish: false,\r\n        note: null,\r\n        //measure: \"Pieces\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            foodItem: (props.foodItem) ? props.foodItem : { ...FoodItem.defaultFoodItem },\r\n            isSelected: false\r\n        };\r\n    }\r\n\r\n    toggleSelected = () => this.setState({\r\n        isSelected: !this.state.isSelected\r\n    });\r\n\r\n    render = () => {\r\n        const { foodItem, isSelected } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, sizeinfo } = foodItem;\r\n\r\n        return (\r\n            <div onClick={(ev) => this.props.selectedChanged(ev, this)}\r\n                className={\"foodItem lineDown\" + (isSelected ? \" feSelected\" : \"\")}>\r\n                <span className=\"name_brand\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</span>\r\n                <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n                <span className=\"per\">{sizeinfo === null ? `1` : `100g`}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.signalSelect)\r\n            this.props.selectedChanged(null, this);\r\n    };\r\n}\r\n\r\nexport default FoodItem;","import React from 'react';\r\nimport \"../Css/DailyMeals.css\";\r\n\r\nimport MealEntry from '../Components/MealEntry';\r\nimport FoodEntry from '../Components/FoodEntry';\r\nimport FoodItem from '../Components/FoodItem';\r\nimport Note from '../Components/Note';\r\nimport { app } from '../App';\r\n\r\nclass DailyMeals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.newFoodKey = \"mustchange\";\r\n        this.state = {\r\n            selectedDay: app.dateToStr(\r\n                app.state.currentUser.access === \"Guest\" ? new Date(\"2020-06-07\") : new Date()),//'2020-11-11')),\r\n            dayEntry: {},\r\n            dayFat: 0,\r\n            dayCarbs: 0,\r\n            dayProtein: 0,\r\n\r\n            mealEntries: [],\r\n            mealCounter: 0,\r\n            selectedMeal: null,\r\n            mealareaIsLoading: true,\r\n\r\n            selectedFood: null,\r\n            sFoodItems: [],\r\n            sFoodCounter: 0,\r\n            searchareaIsLoading: true,\r\n            searchCounter: 0,\r\n            amount: \"\",\r\n            measure: \"---\",\r\n\r\n            newFoodForm: false,\r\n            newFoodItem: {\r\n                foodname: \"\",\r\n                brand: \"\",\r\n                fat: 0, carbs: 0, protein: 0,\r\n                price: 0,\r\n                sizeinfo: 100,\r\n                isdish: false,\r\n                pic: \"empty.png\",\r\n                userid: app.state.currentUser.userid,\r\n                noteid: null,\r\n                foodentries: null\r\n            },\r\n\r\n            selectedFoodDetails: null,\r\n            composition: [],\r\n            dishSelected: false\r\n        };\r\n\r\n        this.loadDailyMeals(this.state.selectedDay);\r\n        this.loadSFoodItems(\"\", false);\r\n    }\r\n\r\n    loadDailyMeals = (day) => {\r\n        if (app.state.currentUser.access === \"Guest\" && (new Date(day) < new Date(\"2020-06-04\") || new Date(day) > new Date(\"2020-06-11\"))) {\r\n            alert(\"As Guest user you can Only select from the 2020-06-04 to 2020-06-11 period!\");\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            mealEntries: [],\r\n            selectedMeal: null,\r\n            mealareaIsLoading: true,\r\n            dayFat: 0,\r\n            dayCarbs: 0,\r\n            dayProtein: 0\r\n        });\r\n\r\n        ; (async () => {\r\n            let { mealCounter } = this.state;\r\n\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"reqdate\": day,\r\n                    \"userid\": app.state.currentUser.userid,\r\n                }\r\n            });\r\n            res = await res.json();\r\n\r\n            const mealEntries = [];\r\n            let first = true;\r\n            for (let m of res.meals)\r\n                if (!first)\r\n                    mealEntries.push(<MealEntry\r\n                        addToDay={this.addNewFoodEntryMacros}\r\n                        selectedChanged={this.onSelectedMealChanged}\r\n                        updateDayMF={this.onUpdateDay}\r\n                        removeMeal={this.onRemoveMeal}\r\n                        mealEntry={m}\r\n                        updateDay={this.updateSelectedMealNote}\r\n                        key={mealCounter++} />);\r\n                else {\r\n                    mealEntries.push(<MealEntry\r\n                        signalSelect={true}\r\n                        addToDay={this.addNewFoodEntryMacros}\r\n                        selectedChanged={this.onSelectedMealChanged}\r\n                        updateDayMF={this.onUpdateDay}\r\n                        removeMeal={this.onRemoveMeal}\r\n                        mealEntry={m}\r\n                        updateDay={this.updateSelectedMealNote}\r\n                        key={mealCounter++} />);\r\n                    first = false;\r\n                }\r\n\r\n            this.setState({\r\n                selectedDay: day,\r\n                dayEntry: res,\r\n                mealEntries: mealEntries,\r\n                mealCounter: mealCounter,\r\n                mealareaIsLoading: false,\r\n            });\r\n        })();\r\n    };\r\n\r\n    loadSFoodItems = (searchTerms, isAll) => {\r\n        this.setState({\r\n            sFoodItems: [],\r\n            searchareaIsLoading: true,\r\n            searchCounter: this.state.searchCounter + 1\r\n        });\r\n        const xx = this.state.searchCounter + 1;\r\n\r\n        setTimeout(async (searchCounter = xx) => {\r\n            if (searchCounter < this.state.searchCounter)\r\n                return;\r\n\r\n            let { sFoodCounter } = this.state;\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals/foodsearch\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"userid\": app.state.currentUser.userid,\r\n                    \"search\": searchTerms,\r\n                    \"isall\": isAll\r\n                }\r\n            });\r\n            res = await res.json();\r\n            if (searchCounter < this.state.searchCounter)\r\n                return;\r\n\r\n            const sFoodItems = [];\r\n            let first = true;\r\n            for (let f of res)\r\n                if (!first)\r\n                    sFoodItems.push(<FoodItem\r\n                        selectedChanged={this.onSelectedFoodChanged}\r\n                        foodItem={f}\r\n                        key={sFoodCounter++} />);\r\n                else {\r\n                    sFoodItems.push(<FoodItem\r\n                        signalSelect={true}\r\n                        selectedChanged={this.onSelectedFoodChanged}\r\n                        foodItem={f}\r\n                        key={sFoodCounter++} />);\r\n                    first = false;\r\n                }\r\n\r\n            this.setState({\r\n                selectedFood: first ? null : this.state.selectedFood,\r\n                measure: first ? \"---\" : this.state.measure,\r\n                sFoodItems: sFoodItems,\r\n                sFoodCounter: sFoodCounter,\r\n                searchareaIsLoading: false\r\n            });\r\n        }, 150);\r\n    };\r\n\r\n    onCommit = (ev) => {\r\n        this.setState({\r\n            searchareaIsLoading: true\r\n        });\r\n        ; (async (searchCounter) => {\r\n            const { dayEntry, selectedDay } = this.state;\r\n\r\n            const dayPutReq = dayEntry;\r\n            dayPutReq.userid = app.state.currentUser.userid;\r\n            dayPutReq.date = selectedDay;\r\n\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals\", {\r\n                method: \"put\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(dayPutReq)\r\n            });\r\n            res = await res.json();\r\n\r\n            this.loadDailyMeals(this.state.selectedDay);\r\n\r\n            if (typeof res !== \"string\")\r\n                alert(`Successfully entered date for day ${selectedDay}!\\n --You can view resulting entry in the console`);\r\n            else\r\n                alert(\"There was an Error!\");\r\n            console.log(res);\r\n        })();\r\n        this.setState({\r\n            searchareaIsLoading: false\r\n        });\r\n    };\r\n\r\n    onAddNewMeal = (ev) => {\r\n        if (app.state.currentUser.access === \"Guest\" && this.state.mealEntries.length === 5) {\r\n            alert(\"As Guest user you cannot enter more than 5 Meals per day!\");\r\n            return;\r\n        }\r\n\r\n        const { mealEntries, dayEntry, newFoodForm } = this.state;\r\n        let { mealCounter } = this.state;\r\n\r\n        const newMPortion = document.querySelector(\".newMPortion\");\r\n        if (isNaN(newMPortion.value)) {\r\n            alert(\"Must Enter Valid Number for Portion!\");\r\n            newMPortion.value = \"\";\r\n            return;\r\n        }\r\n        const newMName = document.querySelector(\".newMName\");\r\n        const newMeal = {\r\n            mealname: newMName.value === \"\" ? newMName.placeholder : newMName.value,\r\n            portion: newMPortion.value === \"\" ? newMPortion.placeholder : newMPortion.value,\r\n            noteid: null,\r\n            foodentries: []\r\n        };\r\n\r\n        mealEntries.push(<MealEntry\r\n            signalSelect={true}\r\n            mealEntry={newMeal}\r\n            addToDay={this.addNewFoodEntryMacros}\r\n            selectedChanged={this.onSelectedMealChanged}\r\n            removeMeal={this.onRemoveMeal}\r\n            updateDayMF={this.onUpdateDay}\r\n            updateDay={this.updateSelectedMealNote}\r\n            key={mealCounter}\r\n        />);\r\n\r\n        newMeal.key = mealCounter;\r\n        dayEntry.meals.push(newMeal);\r\n\r\n        newMName.value = \"\";\r\n        newMPortion.value = \"\";\r\n        this.setState({\r\n            mealEntries: mealEntries,\r\n            mealCounter: mealCounter + 1,\r\n            dayEntry: dayEntry\r\n        });\r\n        if (!newFoodForm)\r\n            document.querySelector(\"#search\").select();\r\n    };\r\n\r\n    onRemoveMeal = (ev, sender) => {\r\n        const { selectedMeal, mealEntries, dayEntry } = this.state;\r\n\r\n        dayEntry.meals = dayEntry.meals.filter((m) => !((m.mealid && m.mealid === sender.state.mealEntry.mealid)\r\n            || (m.key !== undefined && m.key.toString() === sender._reactInternalFiber.key)));\r\n\r\n        this.setState({\r\n            mealEntries: mealEntries.filter((meal) => meal.key !== sender._reactInternalFiber.key),\r\n            dayEntry: dayEntry\r\n        });\r\n        this.addNewFoodEntryMacros(-sender.state.fat, -sender.state.carbs, -sender.state.protein);\r\n\r\n\r\n        if (selectedMeal !== null && selectedMeal === sender)\r\n            this.setState({\r\n                selectedMeal: null\r\n            });\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    onUpdateDay = (sender) => {\r\n        const { dayEntry } = this.state;\r\n\r\n        for (let m of dayEntry.meals)\r\n            if ((m.mealid && sender.state.mealEntry.mealid === m.mealid)\r\n                || (m.key !== undefined && sender._reactInternalFiber.key === m.key.toString())) {\r\n                m.foodentries = sender.state.mealEntry.foodentries;\r\n                break;\r\n            }\r\n\r\n        this.setState({\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    onSelectedMealChanged = (ev, sender) => {\r\n        const { selectedMeal } = this.state;\r\n\r\n        if (sender !== selectedMeal) {\r\n            if (selectedMeal)\r\n                selectedMeal.toggleHighlight();\r\n            sender.toggleHighlight();\r\n\r\n            this.setState({\r\n                selectedMeal: sender,\r\n                dishSelected: false\r\n            });\r\n        }\r\n    };\r\n\r\n    addNewFoodEntryMacros = (newfat, newcarb, newprotein) => {\r\n        this.state.dayFat += newfat;\r\n        this.state.dayCarbs += newcarb;\r\n        this.state.dayProtein += newprotein;\r\n        this.setState({});\r\n    };\r\n\r\n    onRemoveNote = () => {\r\n        const { dayEntry } = this.state;\r\n\r\n        dayEntry.note = null;\r\n        this.setState({\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    updateSelectedMealNote = () => {\r\n        const { dayEntry, selectedMeal } = this.state;\r\n\r\n        for (let m of dayEntry.meals)\r\n            if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                || (m.key !== undefined && selectedMeal._reactInternalFiber.key === m.key.toString())) {\r\n                m.note = selectedMeal.state.mealEntry.note;\r\n                break;\r\n            }\r\n\r\n        this.setState({\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    onAddNewFoodEntry = (ev) => {\r\n        const { selectedMeal, selectedFood, dayEntry, amount, measure, newFoodForm, newFoodItem, dishSelected, composition, selectedFoodDetails } = this.state;\r\n\r\n        if (app.state.currentUser.access === \"Guest\" && (\r\n            (selectedMeal && selectedMeal.state.foodEntries.length >= 7)\r\n            || (dishSelected && selectedFoodDetails.foodentries.length >= 7))) {\r\n            alert(\"As Guest user you cannot enter more than 7 Food Items per meal!\");\r\n            return;\r\n        }\r\n\r\n        if (selectedMeal === null && dishSelected === false) {\r\n            alert(\"Must select a Meal or Dish!\");\r\n            return;\r\n        }\r\n        if (newFoodForm) {\r\n            if (newFoodItem.foodname === \"\") {\r\n                alert(\"New Food must have a Name !\");\r\n                return;\r\n            }\r\n            const sum = Number(newFoodItem.fat) + Number(newFoodItem.carbs) + Number(newFoodItem.protein);\r\n            if (isNaN(sum) || (measure === \"Grams\" && (sum > 100 || sum <= 0))) {\r\n                alert(\"Macro value are wrong!\");\r\n                return;\r\n            }\r\n            if (isNaN(newFoodItem.price)) {\r\n                alert(\"Price value is wrong!\");\r\n                return;\r\n            }\r\n            if (isNaN(newFoodItem.sizeinfo) || newFoodItem.sizeinfo < 0) {\r\n                alert(\"Piece Size value is wrong!\");\r\n                return;\r\n            }\r\n        }\r\n        else if (selectedFood === null) {\r\n            alert(\"Must select a Food Item !\");\r\n            return;\r\n        }\r\n        if (isNaN(amount)) {\r\n            alert(\"Must Enter Valid Number for Amount!\");\r\n            this.setState({\r\n                amount: \"\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newFoodEntry = newFoodForm ? newFoodItem : selectedFood.state.foodItem;\r\n        newFoodEntry.amount = amount ? amount : document.querySelector(\"#amountSize\").placeholder;\r\n        newFoodEntry.measure = measure;\r\n\r\n        if (dishSelected) {\r\n            let { sFoodCounter } = this.state;\r\n            composition.push(<FoodEntry\r\n                foodEntry={newFoodEntry}\r\n                removeFoodEntry={this.onRemoveFoodEntry}\r\n                key={sFoodCounter++} />);\r\n            selectedFoodDetails.foodentries.push(newFoodEntry);\r\n\r\n            this.setState({\r\n                composition: composition,\r\n                selectedFoodDetails: selectedFoodDetails,\r\n                sFoodCounter: sFoodCounter,\r\n                newFoodForm: false,\r\n                newFoodItem: {\r\n                    foodname: \"\",\r\n                    brand: \"\",\r\n                    fat: 0, carbs: 0, protein: 0,\r\n                    price: 0,\r\n                    sizeinfo: 100,\r\n                    isdish: false,\r\n                    pic: \"empty.png\",\r\n                    userid: app.state.currentUser.userid,\r\n                    noteid: null,\r\n                    foodentries: null\r\n                }\r\n            });\r\n        }\r\n\r\n        else if (selectedMeal) {\r\n            selectedMeal.addNewFoodEntry(ev, newFoodEntry);\r\n            for (let m of dayEntry.meals)\r\n                if ((m.mealid && selectedMeal.state.mealEntry.mealid === m.mealid)\r\n                    || (m.key !== undefined && selectedMeal._reactInternalFiber.key === m.key.toString())) {\r\n                    m.foodentries.push(newFoodEntry);\r\n                    break;\r\n                }\r\n\r\n            this.setState({\r\n                dayEntry: dayEntry,\r\n                newFoodForm: false,\r\n                newFoodItem: {\r\n                    foodname: \"\",\r\n                    brand: \"\",\r\n                    fat: 0, carbs: 0, protein: 0,\r\n                    price: 0,\r\n                    sizeinfo: 100,\r\n                    isdish: false,\r\n                    pic: \"empty.png\",\r\n                    userid: app.state.currentUser.userid,\r\n                    noteid: null,\r\n                }\r\n            });\r\n        }\r\n\r\n        setTimeout(() => document.querySelector(\"#search\").select(), 0);\r\n    };\r\n\r\n    onRemoveFoodEntry = (ev, sender) => {\r\n        const { composition, selectedFoodDetails } = this.state;\r\n\r\n        for (let i = 0; i < composition.length; i++)\r\n            if (composition[i].key.toString() === sender._reactInternalFiber.key) {\r\n                selectedFoodDetails.foodentries.splice(i, 1);\r\n                composition.splice(i, 1)\r\n\r\n                this.setState({\r\n                    composition: composition,\r\n                    selectedFoodDetails: selectedFoodDetails\r\n                });\r\n            }\r\n    };\r\n\r\n    saveDishIngr = (ev) => {\r\n        const { selectedFoodDetails } = this.state;\r\n\r\n        this.setState({\r\n            selectedFoodDetails: null,\r\n            dishSelected: false,\r\n            searchareaIsLoading: true\r\n        });\r\n        ; (async () => {\r\n\r\n            const dishData = {};\r\n            dishData.dishid = selectedFoodDetails.foodid;\r\n            dishData.foodentries = [];\r\n            for (let f of selectedFoodDetails.foodentries)\r\n                dishData.foodentries.push({ foodid: f.foodid, amount: f.amount, measure: f.measure });\r\n\r\n            let res = await fetch(app.getServerURL() + \"/dailymeals/dishupdate\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(dishData)\r\n            });\r\n            res = await res.json();\r\n\r\n            document.querySelector(\"#search\").value = selectedFoodDetails.foodname + \" \" + selectedFoodDetails.brand;\r\n            this.loadSFoodItems(selectedFoodDetails.foodname + \" \" + selectedFoodDetails.brand,\r\n                document.querySelector(\"#isAll\").checked);\r\n\r\n            if (typeof res !== \"string\")\r\n                alert(`Successfully saved dish: ${selectedFoodDetails.foodname} ${selectedFoodDetails.brand}!\\n --You can view resulting entry in the console`);\r\n            else\r\n                alert(\"There was an Error!\");\r\n            console.log(res);\r\n        })();\r\n    };\r\n\r\n    calculateValues = (ev) => {\r\n        this.setState({\r\n            selectedFoodDetails: null,\r\n            dishSelected: false,\r\n            searchareaIsLoading: true\r\n        });\r\n        ; (async () => {\r\n            const { selectedFoodDetails } = this.state;\r\n\r\n            let fat = 0, carbs = 0, protein = 0;\r\n            for (let f of selectedFoodDetails.foodentries) {\r\n                const { amount, measure, sizeinfo } = f;\r\n                if (measure === \"Pieces\")\r\n                    if (sizeinfo === null) {\r\n                        fat += (f.fat * amount);\r\n                        carbs += (f.carbs * amount);\r\n                        protein += (f.protein * amount);\r\n                    }\r\n                    else {\r\n                        fat += (f.fat * amount * sizeinfo / 100);\r\n                        carbs += (f.carbs * amount * sizeinfo / 100);\r\n                        protein += (f.protein * amount * sizeinfo / 100);\r\n                    }\r\n                else if (measure === \"Grams\") {\r\n                    fat += (f.fat * amount / 100);\r\n                    carbs += (f.carbs * amount / 100);\r\n                    protein += (f.protein * amount / 100);\r\n                }\r\n            }\r\n            selectedFoodDetails.fat = Number(fat.toFixed(1));\r\n            selectedFoodDetails.carbs = Number(carbs.toFixed(1));\r\n            selectedFoodDetails.protein = Number(protein.toFixed(1));\r\n\r\n            let res = await fetch(app.getServerURL() + \"/yourfoods\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(selectedFoodDetails)\r\n            });\r\n            res = await res.json();\r\n\r\n            document.querySelector(\"#search\").value = selectedFoodDetails.foodname + \" \" + selectedFoodDetails.brand;\r\n            this.loadSFoodItems(selectedFoodDetails.foodname + \" \" + selectedFoodDetails.brand,\r\n                document.querySelector(\"#isAll\").checked);\r\n\r\n            if (typeof res !== \"string\")\r\n                alert(`Successfully calculated values for dish: ${selectedFoodDetails.foodname} ${selectedFoodDetails.brand}!\\n --You can view resulting entry in the console`);\r\n            else\r\n                alert(\"There was an Error!\");\r\n            console.log(res);\r\n        })();\r\n    };\r\n\r\n    onSelectedFoodChanged = (ev, sender) => {\r\n        const { selectedFood, dishSelected } = this.state;\r\n\r\n        if (sender !== selectedFood) {\r\n            if (selectedFood)\r\n                selectedFood.toggleSelected();\r\n            sender.toggleSelected();\r\n            if (document.activeElement !== document.querySelector(\"#search\"))\r\n                document.querySelector(\"#search\").select();\r\n\r\n            this.setState({\r\n                selectedFood: sender,\r\n                amount: \"\",\r\n                measure: sender.state.foodItem.sizeinfo === null ? \"Pieces\" : \"Grams\",\r\n                selectedFoodDetails: dishSelected ? this.state.selectedFoodDetails : null\r\n            });\r\n\r\n            if (!dishSelected) {\r\n                ; (async () => {\r\n                    let { sFoodCounter, composition } = this.state;\r\n                    const { foodid, isdish, noteid } = sender.state.foodItem;\r\n                    let res = await fetch(app.getServerURL() + \"/dailymeals/fooddetails\", {\r\n                        method: \"get\",\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"foodid\": foodid,\r\n                            \"isdish\": isdish,\r\n                            \"noteid\": noteid ? noteid : null\r\n                        }\r\n                    });\r\n                    res = await res.json();\r\n\r\n                    composition = [];\r\n                    if (res.foodentries) {\r\n                        for (let f of res.foodentries)\r\n                            composition.push(<FoodEntry\r\n                                foodEntry={f}\r\n                                removeFoodEntry={this.onRemoveFoodEntry}\r\n                                key={sFoodCounter++} />);\r\n                    }\r\n\r\n                    this.setState({\r\n                        selectedFoodDetails: res,\r\n                        sFoodCounter: sFoodCounter,\r\n                        composition: composition\r\n                    });\r\n                })();\r\n            }\r\n        }\r\n    };\r\n\r\n    onDishSelect = (ev) => {\r\n        const { dishSelected, selectedMeal, selectedFood, selectedFoodDetails } = this.state;\r\n\r\n        if (!dishSelected) {\r\n            if (selectedFood && selectedFood.state.foodItem.isdish) {\r\n                const { foodname, brand, fat, carbs, protein, price, pic, isdish, note, measure } = selectedFood.state.foodItem;\r\n\r\n                selectedFoodDetails.foodname = foodname;\r\n                selectedFoodDetails.brand = brand;\r\n                selectedFoodDetails.fat = fat;\r\n                selectedFoodDetails.carbs = carbs;\r\n                selectedFoodDetails.protein = protein;\r\n                selectedFoodDetails.price = price;\r\n                selectedFoodDetails.pic = pic;\r\n                selectedFoodDetails.measure = measure;\r\n                selectedFoodDetails.isdish = true;\r\n                selectedFoodDetails.note = note;\r\n\r\n\r\n                if (selectedMeal)\r\n                    selectedMeal.toggleHighlight();\r\n                this.setState({\r\n                    selectedMeal: null,\r\n                    dishSelected: true\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateAttach = (newNote) => {\r\n        const { dayEntry } = this.state;\r\n\r\n        dayEntry.note = newNote;\r\n        this.setState({\r\n            dayEntry: dayEntry\r\n        });\r\n    };\r\n\r\n    currentEntry = () => {\r\n        const { selectedFood, amount, measure, newFoodForm, newFoodItem } = this.state;\r\n\r\n        if (newFoodForm) {\r\n            this.newFoodKey = this.newFoodKey === \"mustchange\" ? \"willchange\" : \"mustchange\";\r\n            return <FoodEntry foodItem={newFoodItem}\r\n                amount={amount}\r\n                measure={measure}\r\n                key={this.newFoodKey}\r\n                readOnly=\"true\" />\r\n        }\r\n        else\r\n            if (selectedFood) {\r\n                return <FoodEntry foodItem={selectedFood.state.foodItem}\r\n                    amount={amount ? amount : (selectedFood ? (measure === \"Pieces\" ? 1\r\n                        : selectedFood.state.foodItem.sizeinfo === 0 ? 100 : selectedFood.state.foodItem.sizeinfo) : 0)}\r\n                    measure={measure}\r\n                    key={selectedFood.state.foodItem.foodid.toString() + amount + measure}\r\n                    readOnly=\"true\" />;\r\n            }\r\n            else\r\n                return <FoodEntry key={\"F0\"} readOnly=\"true\" />\r\n    };\r\n\r\n    changeNewFoodValue = (field, value) => {\r\n        const aux = this.state.newFoodItem;\r\n\r\n        if (field === \"per\") {\r\n            const psi = document.querySelector(\".PSInput\");\r\n            if (value === \"1Piece\") {\r\n                psi.disabled = true;\r\n                psi.value = \"\";\r\n                aux.sizeinfo = null;\r\n                this.setState({\r\n                    amount: 1\r\n                });\r\n            }\r\n            else {\r\n                document.querySelector(\".PSInput\").disabled = false;\r\n                psi.value = 100;\r\n                aux.sizeinfo = 100;\r\n                this.setState({\r\n                    amount: 100\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (field === \"isdish\")\r\n                aux[\"foodentries\"] = value === true ? [] : null;\r\n            if (field === \"sizeinfo\")\r\n                value = value === \"\" ? null : value;\r\n            if (field === \"fat\" || field === \"carbs\" || field === \"protein\")\r\n                value = value === \"\" ? 0 : value;\r\n            aux[field] = value;\r\n        }\r\n\r\n        this.setState({\r\n            newFoodItem: aux,\r\n            measure: aux.sizeinfo === null ? \"Pieces\" : \"Grams\",\r\n        });\r\n    };\r\n\r\n    onDayButtons = (ev, nrDays) => {\r\n        const { selectedDay } = this.state;\r\n\r\n        let d = new Date(selectedDay);\r\n        d.setDate(d.getDate() + nrDays);\r\n\r\n        this.loadDailyMeals(app.dateToStr(d));\r\n    };\r\n\r\n    onSearchKey = (ev) => {\r\n        const { selectedFood, sFoodItems } = this.state;\r\n\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#amountSize\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#search\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === 0)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i - 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":\r\n                if (selectedFood) {\r\n                    for (let i = 0; i < sFoodItems.length; i++)\r\n                        if (sFoodItems[i].key === selectedFood._reactInternalFiber.key)\r\n                            if (i === sFoodItems.length - 1)\r\n                                break;\r\n                            else\r\n                                document.querySelectorAll(\".foodItem\")[i + 1].click();\r\n                }\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onAmountKey = (ev) => {\r\n        switch (ev.key) {\r\n            case \"Enter\":\r\n                this.onAddNewFoodEntry();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Tab\":\r\n                document.querySelector(\"#search\").select();\r\n                ev.preventDefault();\r\n                break;\r\n            case \"Escape\":\r\n                document.querySelector(\"#amountSize\").value = \"\";\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowUp\":     //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            case \"ArrowDown\":   //TODO:Change Measure??\r\n                console.log(ev.key);\r\n                ev.preventDefault();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };//TODO?\r\n\r\n    render = () => {\r\n        const { selectedDay, mealEntries, selectedFood, amount, measure, dayEntry, selectedFoodDetails, composition, mealareaIsLoading, searchareaIsLoading, sFoodItems, dayFat, dayCarbs, dayProtein, newFoodForm, dishSelected } = this.state;\r\n        const { foodname, brand, fat, carbs, protein, price, pic } = dishSelected ?\r\n            selectedFoodDetails\r\n            : selectedFood ?\r\n                selectedFood.state.foodItem\r\n                : FoodItem.defaultFoodItem;\r\n\r\n        return (\r\n            <main className=\"mainDailyMeals boxShow\">\r\n                <div id=\"dayArea\" className=\"subblock boxShow\">\r\n                    <div className=\"dayHeader\">\r\n                        <div className=\"datepick boxShow\">\r\n                            <label className=\"textHigh\">Day: </label>\r\n                            <button disabled={mealareaIsLoading} onClick={(ev) => this.onDayButtons(ev, -1)} className=\"ftButton\" > {\"<\"}</button>\r\n                            <input disabled={mealareaIsLoading} onChange={(ev) => this.loadDailyMeals(ev.currentTarget.value)} id=\"selectedDay\" type=\"date\" value={selectedDay} />\r\n                            <button disabled={mealareaIsLoading} onClick={(ev) => this.onDayButtons(ev, 1)} className=\"ftButton\">{\">\"}</button>\r\n                        </div>\r\n                        {mealareaIsLoading ? \"LOADING...\"\r\n                            : <Note removeNote={this.onRemoveNote} note={dayEntry.note} key={\"D\" + (dayEntry.note ? dayEntry.note.noteid : \"D0\")} updateAttach={this.onUpdateAttach} />}\r\n                    </div>\r\n                    <div className=\"mealsArea\">\r\n                        {mealareaIsLoading ? \"LOADING...\" : mealEntries}\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"dayTotal\">\r\n                        <span>Day Total:</span>\r\n                        <span>{`${dayFat.toFixed(1)}||${dayCarbs.toFixed(1)}||${dayProtein.toFixed(1)}`}</span>\r\n                    </div>\r\n                    <button disabled={mealareaIsLoading} onClick={this.onCommit} className=\"ftButton\">COMMIT DAY!</button>\r\n                </div>\r\n\r\n\r\n                <div id=\"addFoodArea\" className=\"subblock boxShow\">\r\n                    {newFoodForm\r\n                        ? <div className=\"newFoodForm\">\r\n                            <div className=\"newFoodHeader\">\r\n                                <label className=\"textHigh\">Create New Food:</label>\r\n                                <button onClick={() => this.setState({ newFoodForm: false })} className=\"ftButton\">\r\n                                    +Select</button>\r\n                            </div>\r\n                            <span>Name:</span><input onChange={(ev) => this.changeNewFoodValue(\"foodname\", ev.currentTarget.value)} placeholder=\"name\" type=\"text\" maxLength=\"50\" />\r\n                            <span>Brand:</span><input onChange={(ev) => this.changeNewFoodValue(\"brand\", ev.currentTarget.value)} placeholder=\"brand\" type=\"text\" maxLength=\"50\" />\r\n                            <span>Macros:</span>\r\n                            <div>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"fat\", ev.currentTarget.value)} type=\"text\" placeholder=\"0\" maxLength=\"5\" /><span>Fat</span>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"carbs\", ev.currentTarget.value)} type=\"text\" placeholder=\"0\" maxLength=\"5\" /><span>Carbs</span>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"protein\", ev.currentTarget.value)} type=\"text\" placeholder=\"0\" maxLength=\"5\" /><span>Protein</span>\r\n                            </div>\r\n                            <span>Per:</span>\r\n                            <div>\r\n                                <select onChange={(ev) => this.changeNewFoodValue(\"per\", ev.currentTarget.value)} className=\"smallerInput\">\r\n                                    <option>100Grams</option>\r\n                                    <option>1Piece</option>\r\n                                </select>\r\n                                <span>Piece Size:</span><input onChange={(ev) => this.changeNewFoodValue(\"sizeinfo\", ev.currentTarget.value)} className=\"PSInput smallerInput\" defaultValue=\"100\" placeholder=\"null\" type=\"text\" maxLength=\"5\" />\r\n                            </div>\r\n                            <span>Price:</span>\r\n                            <div>\r\n                                <input onChange={(ev) => this.changeNewFoodValue(\"price\", ev.currentTarget.value)} className=\"smallerInput\" placeholder=\"0\" type=\"text\" maxLength=\"10\" />\r\n                                <div><span>Is Dish?</span><input onChange={(ev) => this.changeNewFoodValue(\"isdish\", ev.currentTarget.checked)} type=\"checkbox\" /></div>\r\n                            </div>\r\n                            <label className=\"afaInfo\">To add certain details (dish, composition, photo, note)or further edit foods go to Your Foods section.</label>\r\n                        </div>\r\n\r\n                        : [<div className=\"searchForm boxShow\" key=\"searchForm\">\r\n                            <label className=\"textHigh\">Search Food: </label>\r\n                            <input onChange={(ev) => this.loadSFoodItems(\r\n                                document.querySelector(\"#search\").value,\r\n                                ev.currentTarget.checked)}\r\n                                id=\"isAll\" type=\"checkbox\" maxLength=\"100\" />\r\n                            ALL\r\n                        <button onClick={() => this.setState({\r\n                                newFoodForm: true,\r\n                                selectedFood: null,\r\n                                measure: \"Grams\",\r\n                                amount: 100\r\n                            })} className=\"ftButton\">\r\n                                +New</button>\r\n                            <input onChange={(ev) => this.loadSFoodItems(\r\n                                ev.currentTarget.value,\r\n                                document.querySelector(\"#isAll\").checked)}\r\n                                onKeyDown={this.onSearchKey}\r\n                                id=\"search\" type=\"text\"\r\n                                placeholder=\"search text\" />\r\n                        </div>,\r\n                        <div className=\"searchResults boxShow\" key=\"searchResults\">\r\n                            {searchareaIsLoading ? \"LOADING...\" : sFoodItems}\r\n                        </div>]}\r\n                    <div className=\"amountForm boxShow\">\r\n                        <label className=\"textHigh\">Quantity: </label>\r\n                        <input disabled={searchareaIsLoading} id=\"amountSize\" type=\"text\" value={amount}\r\n                            onChange={(ev) => this.setState({ amount: ev.currentTarget.value })}\r\n                            onKeyDown={this.onAmountKey}\r\n                            placeholder={selectedFood ? (measure === \"Pieces\" ? 1\r\n                                : selectedFood.state.foodItem.sizeinfo === 0 ? 100 : selectedFood.state.foodItem.sizeinfo) : 0} maxLength=\"10\" />\r\n                        <select onChange={(ev) => this.setState({ measure: ev.currentTarget.value })} disabled={searchareaIsLoading} id=\"measureSelect\" value={measure} >\r\n                            <option className={selectedFood ? (selectedFood.state.foodItem.sizeinfo === null ? \"hidden\" : \"\") : \"hidden\"}>\r\n                                Grams</option>\r\n                            <option className={selectedFood ? (selectedFood.state.foodItem.sizeinfo === 0 ? \"hidden\" : \"\") : \"hidden\"}>\r\n                                Pieces</option>\r\n                            <option className=\"hidden\">---</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"searchEntry boxShow\">\r\n                        <label className=\"textHigh lineDown\">Current Entry:</label>\r\n                        {this.currentEntry()}\r\n                        <button disabled={searchareaIsLoading} onClick={this.onAddNewFoodEntry} className=\"ftButton\">ADD FOOD ENTRY</button>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"addMealArea\">\r\n                        <div>\r\n                            <label className=\"textHigh\">Meal Name:</label>\r\n                            <input className=\"newMName\" type=\"text\" placeholder={\"Meal\" + (mealEntries.length + 1)} />\r\n                            <label className=\"textHigh\">Portion:</label>\r\n                            <input className=\"newMPortion\" type=\"text\" placeholder=\"1\" maxLength=\"5\" />\r\n                        </div>\r\n                        <button disabled={mealareaIsLoading} onClick={this.onAddNewMeal} className=\"newMeal ftButton\">ADD NEW MEAL</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedFoodDetails ? (\r\n                    <div onClick={this.onDishSelect} id=\"foodDetailsArea\" className={\"subblock boxShow\" + (dishSelected ? \" highlight\" : \"\")}>\r\n                        <div className=\"foodDetailsHeader\">\r\n                            <div className=\"textHigh boxShow\">{`${foodname} ${brand ? \"@\" + brand : \"\"}`}</div>\r\n                            {/*<Note removeNote={() => { }} note={selectedFoodDetails ? selectedFoodDetails.note : null}\r\n                                key={\"F\" + (selectedFoodDetails.note ? selectedFoodDetails.note.noteid : \"0\")}\r\n                            />*/}\r\n                        </div>\r\n                        <div className=\"foodPic boxShow\">\r\n                            <img src={`FoodPics/${pic ? pic : \"empty.png\"}`} alt=\"[NO FOOD PIC]\" />\r\n                        </div>\r\n                        <div className=\"foodInfo\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr><th>Name</th><td colSpan=\"2\">{foodname}</td></tr>\r\n                                    <tr><th>Brand</th><td colSpan=\"2\">{brand ? brand : \"--\"}</td></tr>\r\n                                    <tr><th>Macro</th><th>100g</th><th>1p</th></tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr><td>Fat</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Grams\" ? fat + \"g\" : \"--\"}</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Pieces\" ? fat + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Carbs</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Grams\" ? carbs + \"g\" : \"--\"}</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Pieces\" ? carbs + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Protein</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Grams\" ? protein + \"g\" : \"--\"}</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Pieces\" ? protein + \"g\" : \"--\"}</td></tr>\r\n                                    <tr><td>Calories</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Grams\" ? (fat * 9 + protein * 4 + carbs * 4)\r\n                                            .toFixed(1)\r\n                                            + \"Kc\" : \"--\"}</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Pieces\" ? (fat * 9 + protein * 4 + carbs * 4)\r\n                                            .toFixed(1)\r\n                                            + \"Kc\" : \"--\"}</td></tr>\r\n                                    <tr><td>Price</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Grams\" ? price + \"Lei\" : \"--\"}</td>\r\n                                        <td>{(dishSelected ? selectedFoodDetails.measure : measure) === \"Pieces\" ? price + \"Lei\" : \"--\"}</td></tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"comp textHigh\">{(selectedFood && selectedFood.state.foodItem.isdish) || dishSelected ? \"Composition:\" : \"\"}</div>\r\n                            <div className=\"foodEntries boxShow\">\r\n                                {dishSelected || (selectedFood && selectedFood.state.foodItem.isdish) ? composition : \"\"}\r\n                            </div>\r\n                            <div className=\"tcenter\">\r\n                                {dishSelected ? <button onClick={this.saveDishIngr} className=\"ftButton\">SAVE DISH</button> : \"\"}\r\n                                {dishSelected ? <button onClick={this.calculateValues} className=\"ftButton\">ADD VALUES</button> : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                        <div id=\"foodDetailsArea\" className=\"subblock boxShow\">\r\n                            LOADING...\r\n                        </div>\r\n                    )\r\n                }\r\n            </main >\r\n        );\r\n    };\r\n}\r\n\r\nexport default DailyMeals;","import React from 'react';\r\n\r\nconst YourFood = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR FOOD!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourFood;","import React from 'react';\r\n\r\nconst YourPlans = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR PLANS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourPlans;","import React from 'react';\r\n\r\nconst YourStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>YOUR STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default YourStats;","import React from 'react';\r\n\r\nconst GlobalStats = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>GLOBAL STATS!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default GlobalStats;","import React from 'react';\r\n\r\nconst UsersData = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>USERS DATA!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default UsersData;","import React from 'react';\r\nimport \"../Css/UserForms.css\"; //TODO: Replace somehow! (this is just copy/pasted from register)\r\nimport { app } from '../App';\r\n\r\nclass Profile extends React.Component {\r\n    passRegex = /^(?=.*?\\d)(?=.*?[a-zA-Z]).+$/;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const { username, email, firstname, lastname, dob, sex, describe, pic, diet } = app.state.currentUser;\r\n\r\n        this.state = {\r\n            username: username,\r\n            email: email,\r\n            firstname: firstname,\r\n            lastname: lastname,\r\n            dob: dob,\r\n            sex: sex,\r\n            describe: describe,\r\n            pic: pic,\r\n            diet: diet,\r\n\r\n            passNow: \"\",\r\n            passNew: \"\",\r\n            passConfirm: \"\",\r\n\r\n            warning: null,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    onChangeProfile = async (ev) => {\r\n        ev.preventDefault();\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        ; (async () => {\r\n            try {\r\n                const { username, email, firstname, lastname, dob, sex, describe, pic, diet } = this.state;\r\n                if (dob !== \"\" && new Date(dob) > new Date())\r\n                    this.setState({ warning: \"dob\" });\r\n                else {\r\n                    let res = await fetch(app.getServerURL() + \"/profile\", {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userid: app.state.currentUser.userid,\r\n                            username: username,\r\n                            email: email,\r\n                            firstname: firstname === \"\" ? null : firstname,\r\n                            lastname: lastname === \"\" ? null : lastname,\r\n                            dob: dob === \"\" ? null : dob,\r\n                            sex: sex === \"\" ? null : sex,\r\n                            describe: describe === \"\" ? null : describe,\r\n                            pic: pic === \"\" ? null : pic,\r\n                            diet: diet\r\n                        })\r\n                    });\r\n                    res = await res.json();\r\n\r\n                    if (res.includes(\"Username\"))\r\n                        this.setState({ warning: \"username\" });\r\n                    else if (res.includes(\"Email\"))\r\n                        this.setState({ warning: \"email\" });\r\n                    else if (res === \"User Profile Updated!\") {\r\n                        app.updateUserProfile(this.state);\r\n                    }\r\n                    else\r\n                        console.log(res);\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(\"___________ERROR___________\\n\", err.message);\r\n            }\r\n            finally {\r\n                this.setState({\r\n                    isLoading: false\r\n                });\r\n            }\r\n        })();\r\n    };\r\n\r\n    cancelChangeProfile = (ev) => {\r\n        ev.preventDefault();\r\n        const { username, email, firstname, lastname, dob, sex, pic, describe, diet } = app.state.currentUser;\r\n\r\n        this.setState({\r\n            username: username,\r\n            email: email,\r\n            firstname: firstname,\r\n            lastname: lastname,\r\n            dob: dob,\r\n            sex: sex,\r\n            describe: describe,\r\n            pic: pic,\r\n            diet: diet\r\n        });\r\n    };\r\n\r\n    onChangePassword = (ev) => {\r\n        ev.preventDefault();\r\n        const { passNow, passNew, passConfirm } = this.state;\r\n\r\n        if (!passNew.match(this.passRegex))\r\n            this.setState({ warning: \"passNew\" });\r\n        else if (passNew !== passConfirm)\r\n            this.setState({ warning: \"passConfirm\" });\r\n        else {\r\n            ev.preventDefault();\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n\r\n            ; (async () => {\r\n                try {\r\n                    let res = await fetch(app.getServerURL() + \"/profile/changepass\", {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userid: app.state.currentUser.userid,\r\n                            oldpass: passNow,\r\n                            newpass: passNew\r\n                        })\r\n                    });\r\n                    res = await res.json();\r\n                    console.log(res);\r\n                }\r\n                catch (err) {\r\n                    console.log(\"___________ERROR___________\\n\", err.message);\r\n                }\r\n                finally {\r\n                    this.setState({\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            })();\r\n        }\r\n    };\r\n\r\n    browseUserPic = (ev) => {\r\n        ev.preventDefault();\r\n\r\n        alert(\"Sorry. Not implemented yet...\")\r\n    };\r\n\r\n    render = () => {\r\n        const { username, email, firstname, lastname, dob, sex, describe, pic, diet, warning, isLoading } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onChangeProfile} onReset={this.cancelChangeProfile} id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Profile Info</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username:</span>\r\n                        <input onChange={(ev) => this.setState({ username: ev.currentTarget.value })} type=\"text\" name=\"username\" value={username} minLength=\"3\" />\r\n                        <span className={\"warning\" + (warning === \"username\" ? \"\" : \" hidden\")}>Username is Already Taken!</span>\r\n                        <span>Email:</span>\r\n                        <input onChange={(ev) => this.setState({ email: ev.currentTarget.value })} type=\"text\" name=\"email\" value={email} />\r\n                        <span className={\"warning\" + (warning === \"email\" ? \"\" : \" hidden\")}>Email is Already Taken!</span>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src={\"UserPics/\" + pic} alt=\"[NO PIC]\" /><br />\r\n                                <button disabled={isLoading} onClick={this.browseUserPic} className=\"ftButton\">Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Description:</span><br />\r\n                                <textarea onChange={(ev) => this.setState({ describe: ev.currentTarget.value })} value={describe} placeholder=\"Say who you are in a few short phrases..\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>First Name:</span>\r\n                        <input onChange={(ev) => this.setState({ firstname: ev.currentTarget.value })} type=\"text\" name=\"firstname\" value={firstname} />\r\n                        <span>Last Name:</span>\r\n                        <input onChange={(ev) => this.setState({ lastname: ev.currentTarget.value })} type=\"text\" name=\"lastname\" value={lastname} />\r\n                        <div>\r\n                            <span>Sex:</span>\r\n                            <input onChange={(ev) => this.setState({ sex: \"1\" })}\r\n                                type=\"radio\" name=\"sex\" value=\"male\" checked={sex === \"1\"} /><span>Male </span>\r\n                            <input onChange={(ev) => this.setState({ sex: \"0\" })}\r\n                                type=\"radio\" name=\"sex\" value=\"female\" checked={sex === \"0\"} /><span>Female</span>\r\n                        </div>\r\n                        <span>Date Of Birth:</span>\r\n                        <input onChange={(ev) => this.setState({ dob: ev.currentTarget.value })} type=\"date\" name=\"dob\" value={dob} />\r\n                        <span className={\"warning\" + (warning === \"dob\" ? \"\" : \" hidden\")}>Incorrect date!</span>\r\n                        <span>Diet Plans:</span>\r\n                        <select value={diet ? diet : \"none\"} onChange={(ev) => this.setState({\r\n                            diet: (ev.currentTarget.value === \"none\"\r\n                                ? null : ev.currentTarget.value)\r\n                        })}>\r\n                            <option>none</option>\r\n                            <option>Calorie Restrict</option>\r\n                            <option>Paleo</option>\r\n                            <option>Keto</option>\r\n                            <option>Mediterranian</option>\r\n                            <option>Vegetarian</option>\r\n                            <option>Vegan</option>\r\n                            <option>Carnivore</option>\r\n                            <option>Low Carb</option>\r\n                            <option>Low Fat</option>\r\n                            <option>PSMF</option>\r\n                            <option>Specific/Personal Plan</option>\r\n                        </select>\r\n                        <div className=\"profileButtons\">\r\n                            <input disabled={isLoading} className=\"ftButton\" type=\"submit\" value=\"Save Changes\" />\r\n                            <input disabled={isLoading} className=\"ftButton\" type=\"reset\" value=\"Cancel\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <form onSubmit={this.onChangePassword} id=\"logform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Change Password</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Current Password:</span>\r\n                        <input onChange={(ev) => this.setState({ passNow: ev.currentTarget.value })} type=\"password\" name=\"passnow\" minLength=\"8\" />\r\n                        <span>New Password: </span>\r\n                        <input onChange={(ev) => this.setState({ passNew: ev.currentTarget.value })} type=\"password\" name=\"passnew\" minLength=\"8\" />\r\n                        <span className={\"warning\" + (warning === \"passNew\" ? \"\" : \" hidden\")}>Invalid Password!</span>\r\n                        <span className=\"detail\">Password must be at least 8characters long and have both numbers and letters!</span>\r\n                        <span>Confirm New Password:</span>\r\n                        <input onChange={(ev) => this.setState({ passConfirm: ev.currentTarget.value })} type=\"password\" name=\"passConfirm\" minLength=\"8\" />\r\n                        <span className={\"warning\" + (warning === \"passConfirm\" ? \"\" : \" hidden\")}>Passwords do Not Match!</span>\r\n                        <div className=\"profileButtons\">\r\n                            <input disabled={isLoading} className=\"ftButton\" type=\"submit\" value=\"Save Changes\" />\r\n                            <input disabled={isLoading} className=\"ftButton\" type=\"reset\" value=\"Cancel\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport \"../Css/UserForms.css\";\r\nimport { app } from '../App';\r\n\r\n//import { NavLink } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            warningMsg: null,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        ev.preventDefault();\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        ; (async () => {\r\n            try {\r\n                const inputs = document.querySelectorAll(\"#logform input\");\r\n                const usernameText = inputs[0].value;\r\n                const passText = inputs[1].value;\r\n\r\n                let res = await fetch(app.getServerURL() + \"/login\", {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        username: usernameText,\r\n                        pass: passText\r\n                    })\r\n                });\r\n                if (res.status === 200) {\r\n                    res = await res.json();\r\n                    if (typeof res === \"string\")\r\n                        this.setState({\r\n                            warningMsg: res\r\n                        });\r\n                    else {\r\n                        app.updateUser(res);\r\n                        app.changeMainPage(\"Profile\");\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(await res.json());\r\n                }\r\n\r\n            } catch (err) {\r\n                console.log(\"___________ERROR___________\\n\", err.message);\r\n            }\r\n            finally {\r\n                this.setState({\r\n                    isLoading: false\r\n                });\r\n            }\r\n        })();\r\n    };\r\n\r\n    render = () => {\r\n        const { warningMsg, isLoading } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onLogin} id=\"logform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Enter Username/Email and Password to Login!</h1>\r\n                    <div className=\"fields\">\r\n                        <span>Username/Email: </span><input type=\"text\" name=\"username\" />\r\n                        <span>Password: </span><input type=\"password\" name=\"password\" />\r\n                        <span disabled={isLoading} >Remember Me? <input type=\"checkbox\" name=\"member\" /></span>\r\n                        <span className={warningMsg === null ? \"hidden\" : \"warning\"}>{this.state.warningMsg}</span>\r\n                        <input disabled={isLoading} className=\"ftButton\" type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                    {/*\r\n                    <div className=\"loglinks\">\r\n                        <NavLink to=\"/\">Forgot Password?</NavLink>\r\n                        <NavLink to=\"/Register\">New here? Go Register!</NavLink>\r\n                    </div>\r\n                    */}\r\n                    <div className=\"loglinks\">\r\n                        <span disabled={isLoading} onClick={() => app.changeMainPage(\"Home\")}>Forgot Password?</span>\r\n                        <span disabled={isLoading} onClick={() => app.changeMainPage(\"Register\")}>New here? Go Register!</span>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"../Css/UserForms.css\";\r\nimport { app } from '../App';\r\n\r\nclass Register extends React.Component {\r\n    passRegex = /^(?=.*?\\d)(?=.*?[a-zA-Z]).+$/;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            email: null,\r\n            pass: null,\r\n            passC: null,\r\n            firstname: null,\r\n            lastname: null,\r\n            dob: null,\r\n            sex: null,\r\n            pic: null,\r\n            desc: null,\r\n            diet: null,\r\n\r\n            warning: null,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    onRegister = async (ev) => {\r\n        ev.preventDefault();\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        ; (async () => {\r\n            try {\r\n                const { pass, passC, username, email, firstname, lastname, dob, sex, describe, pic, diet } = this.state;\r\n                if (!pass.match(this.passRegex))\r\n                    this.setState({ warning: \"pass\" });\r\n                else if (pass !== passC)\r\n                    this.setState({ warning: \"passC\" });\r\n                else if (dob !== \"\" && new Date(dob) > new Date())\r\n                    this.setState({ warning: \"dob\" });\r\n                else {\r\n                    let res = await fetch(app.getServerURL() + \"/register\", {\r\n                        method: \"put\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: username,\r\n                            email: email,\r\n                            firstname: firstname === \"\" ? null : firstname,\r\n                            lastname: lastname === \"\" ? null : lastname,\r\n                            dob: dob === \"\" ? null : dob,\r\n                            sex: sex === \"\" ? null : sex,\r\n                            describe: describe === \"\" ? null : describe,\r\n                            pic: pic === \"\" ? null : pic,\r\n                            diet: diet === \"none\" ? null : diet,\r\n                            pass: pass\r\n                        })\r\n                    });\r\n                    res = await res.json();\r\n\r\n                    if (res.userid) {\r\n                        app.changeMainPage(\"Login\");\r\n                    }\r\n                    else if (res.includes(\"Username\"))\r\n                        this.setState({ warning: \"username\" });\r\n                    else if (res.includes(\"Email\"))\r\n                        this.setState({ warning: \"email\" });\r\n                    else\r\n                        console.log(res);\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(\"___________ERROR___________\\n\", err.message);\r\n            }\r\n            finally {\r\n                this.setState({\r\n                    isLoading: false\r\n                });\r\n            }\r\n        })();\r\n    };\r\n\r\n    browseUserPic = (ev) => {\r\n        ev.preventDefault();\r\n\r\n        alert(\"Sorry. Not implemented yet...\")\r\n    }\r\n\r\n    render = () => {\r\n        const { sex, warning, isLoading } = this.state;\r\n\r\n        return (\r\n            <main className=\"mainRegLog boxShow\">\r\n                <form onSubmit={this.onRegister} id=\"regform\" className=\"subblock boxShow\">\r\n                    <h1 className=\"lineDown\">Please Complete Required fields to Register</h1>\r\n                    <div className=\"fields\">\r\n                        <span className=\"req\">Username:</span>\r\n                        <input onChange={(ev) => this.setState({ username: ev.currentTarget.value })} type=\"text\" name=\"username\" pattern=\".{3,}\" required title=\"3 characters minimum\" />\r\n                        <span className={\"warning\" + (warning === \"username\" ? \"\" : \" hidden\")}>Username is Already Taken!</span>\r\n                        <span className=\"req\">Email:</span>\r\n                        <input onChange={(ev) => this.setState({ email: ev.currentTarget.value })} type=\"email\" name=\"email\" />\r\n                        <span className={\"warning\" + (warning === \"email\" ? \"\" : \" hidden\")}>Email is Already Taken!</span>\r\n                        <span className=\"req\">Password:</span>\r\n                        <input onChange={(ev) => this.setState({ pass: ev.currentTarget.value })} className=\"pass\" type=\"password\" name=\"password\" minLength=\"8\" />\r\n                        <span className={\"warning\" + (warning === \"pass\" ? \"\" : \" hidden\")}>Invalid Password!</span>\r\n                        <span className=\"detail\">Password must be at least 8characters long and have both numbers and letters!</span>\r\n                        <span className=\"req\">Confirm Password:</span>\r\n                        <input onChange={(ev) => this.setState({ passC: ev.currentTarget.value })} type=\"password\" name=\"cpass\" minLength=\"8\" />\r\n                        <span className={\"warning\" + (warning === \"passC\" ? \"\" : \" hidden\")}>Passwords do Not Match!</span>\r\n                        <span>First Name*:</span>\r\n                        <input onChange={(ev) => this.setState({ firstname: ev.currentTarget.value })} type=\"text\" name=\"firstname\" />\r\n                        <span>Last Name*:</span>\r\n                        <input onChange={(ev) => this.setState({ lastname: ev.currentTarget.value })} type=\"text\" name=\"lastname\" />\r\n                        <span>Date Of Birth*:</span>\r\n                        <input onChange={(ev) => this.setState({ dob: ev.currentTarget.value })} type=\"date\" name=\"dob\" />\r\n                        <span className={\"warning\" + (warning === \"dob\" ? \"\" : \" hidden\")}>Incorrect date!</span>\r\n                        <div>\r\n                            <span>Sex*:</span>\r\n                            <input onChange={(ev) => this.setState({ sex: \"1\" })}\r\n                                type=\"radio\" name=\"sex\" value=\"male\" checked={sex === \"1\"} /><span>Male </span>\r\n                            <input onChange={(ev) => this.setState({ sex: \"0\" })}\r\n                                type=\"radio\" name=\"sex\" value=\"female\" checked={sex === \"0\"} /><span>Female</span>\r\n                        </div>\r\n                        <div className=\"personal\">\r\n                            <div>\r\n                                <img src=\"UserPics/profileEmpty.png\" alt=\"[NO PIC]\" /><br />\r\n                                <button disabled={isLoading} onClick={this.browseUserPic} className=\"ftButton\">Browse*</button>\r\n                            </div>\r\n                            <div>\r\n                                <span>Short Description*:</span><br />\r\n                                <textarea onChange={(ev) => this.setState({ describe: ev.currentTarget.value })} placeholder=\"Say who you are in a few short phrases..\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <span>Diet Plans*?</span>\r\n                        <select onChange={(ev) => this.setState({\r\n                            diet: (ev.currentTarget.value === \"none\"\r\n                                ? null : ev.currentTarget.value)\r\n                        })}>\r\n                            <option>none</option>\r\n                            <option>Calorie Restrict</option>\r\n                            <option>Paleo</option>\r\n                            <option>Keto</option>\r\n                            <option>Mediterranian</option>\r\n                            <option>Vegetarian</option>\r\n                            <option>Vegan</option>\r\n                            <option>Carnivore</option>\r\n                            <option>Low Carb</option>\r\n                            <option>Low Fat</option>\r\n                            <option>PSMF</option>\r\n                            <option>Specific Personal Plan</option>\r\n                        </select>\r\n                        <span className=\"detail\">-Pick a Diet from list if any of them apply to You - Can always change it later!</span>\r\n                        <span className=\"detail\">(This Choice is simply for tracking stats - Will Not affect results &recommendations)</span>\r\n                        <input disabled={isLoading} className=\"ftButton\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </form>\r\n            </main >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n        <main className=\"boxShow\">\r\n            <div className=\"subblock\">\r\n                <h1>Error! Page does not exist!</h1>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Error;","//import { Route, Switch } from 'react-router-dom';\r\n//\r\n//const Main = () => {\r\n//    return (\r\n//        <Switch>\r\n//            <Route path=\"/\" component={Home} exact/>\r\n//            <Route path=\"/DailyMeals\" component={DailyMeals} />\r\n//            <Route path=\"/YourFood\" component={YourFood} />\r\n//            <Route path=\"/YourPlans\" component={YourPlans} />\r\n//            <Route path=\"/YourStats\" component={YourStats} />\r\n//            <Route path=\"/GlobalStats\" component={GlobalStats} />\r\n//            <Route path=\"/GlobalData\" component={GlobalData} />\r\n//            <Route path=\"/Login\" component={Login} />\r\n//            <Route path=\"/Register\" component={Register} />\r\n//            <Route component={Error} />\r\n//        </Switch>\r\n//    );\r\n//}\r\n\r\nimport React from 'react';\r\n\r\nimport Home from \"../MainPages/Home\";\r\nimport DailyMeals from '../MainPages/DailyMeals';\r\nimport YourFood from '../MainPages/YourFood';\r\nimport YourPlans from '../MainPages/YourPlans';\r\nimport YourStats from '../MainPages/YourStats';\r\nimport GlobalStats from '../MainPages/GlobalStats';\r\nimport GlobalData from '../MainPages/UsersData';\r\nimport Profile from '../MainPages/Profile';\r\nimport Login from '../MainPages/Login';\r\nimport Register from '../MainPages/Register';\r\nimport Error from '../MainPages/Error';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: props.page ? props.page : \"Home\"\r\n        };\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { page } = this.state;\r\n\r\n        if (page !== newPage)\r\n            this.setState({\r\n                page: newPage\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        switch (this.state.page) {\r\n            case \"Home\":\r\n                return <Home />;\r\n            case \"DailyMeals\":\r\n                return <DailyMeals />;\r\n            case \"YourFood\":\r\n                return <YourFood />;\r\n            case \"YourPlans\":\r\n                return <YourPlans />;\r\n            case \"YourStats\":\r\n                return <YourStats />;\r\n            case \"GlobalStats\":\r\n                return <GlobalStats />;\r\n            case \"GlobalData\":\r\n                return <GlobalData />;\r\n            case \"Profile\":\r\n                return <Profile />;\r\n            case \"Register\":\r\n                return <Register />;\r\n            case \"Login\":\r\n                return <Login />;\r\n            default:\r\n                return <Error />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <footer className=\"subblock boxShow\">\r\n                <h3 id=\"author\">--Made by Rotariu Stefan<sub> - StravoS</sub></h3>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Sections/Header';\r\nimport Nav from './Sections/Nav';\r\nimport Main from './Sections/Main';\r\nimport Footer from './Sections/Footer';\r\nimport svData from './svData.json';\r\n\r\nconst refs = {\r\n    main: React.createRef(),\r\n    footer: React.createRef(),\r\n    header: React.createRef(),\r\n    nav: React.createRef()\r\n};\r\n\r\nlet app = null;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultUser = {\r\n            userid: 0,\r\n            username: \"Guest\",\r\n            email: \"guest@nomail.none\",\r\n            firstname: \"John\",\r\n            lastname: \"Doe\",\r\n            dob: this.dateToStr(new Date()),\r\n            sex: \"1\",\r\n            describe: \"placeholder\",\r\n            pic: \"profileEmpty.png\",\r\n            diet: null,\r\n            default_meals: 'Breakfast,Lunch,Dinner',\r\n            access: \"Guest\"\r\n        };\r\n\r\n        this.state = {\r\n            currentUser: this.defaultUser\r\n        };\r\n        app = this;\r\n    }\r\n\r\n    dateToStr = (dateObj) => {\r\n        return `${dateObj.getFullYear()}-${dateObj.getMonth() + 1 > 9 ? (dateObj.getMonth() + 1).toString() : \"0\" + (dateObj.getMonth() + 1).toString()}-${dateObj.getDate() > 9 ? dateObj.getDate().toString() : \"0\" + dateObj.getDate().toString()}`;\r\n    };\r\n\r\n    getServerURL = () => {\r\n        return svData.serverLink;\r\n        //return \"http://localhost:3001\";\r\n    }\r\n\r\n    updateUser = (data) => {\r\n        const { defaultUser } = this;\r\n\r\n        if (data === null) {\r\n            this.setState({\r\n                currentUser: defaultUser\r\n            });\r\n            refs.header.current.updateUser(false, defaultUser.username, defaultUser.pic);\r\n        }\r\n        else {\r\n            data.dob = this.dateToStr(new Date(data.dob));\r\n            this.setState({\r\n                currentUser: data\r\n            });\r\n            refs.header.current.updateUser(true, data.username, data.pic);\r\n        }\r\n    };\r\n\r\n    updateUserProfile = (data) => {\r\n        const { currentUser } = this.state;\r\n\r\n        currentUser.username = data.username;\r\n        currentUser.email = data.email;\r\n        currentUser.firstname = data.firstname;\r\n        currentUser.lastname = data.lastname;\r\n        currentUser.dob = data.dob;\r\n        currentUser.sex = data.sex;\r\n        currentUser.describe = data.describe;\r\n        currentUser.pic = data.pic;\r\n        currentUser.diet = data.diet;\r\n\r\n        this.setState({\r\n            currentUser: currentUser\r\n        });\r\n    };\r\n\r\n    changeMainPage = (newPage) => refs.main.current.changePage(newPage);\r\n\r\n    render = () => {\r\n        return (\r\n            [\r\n                <Header ref={refs.header} key=\"H\" />,\r\n                <Nav ref={refs.nav} key=\"N\" />,\r\n                <Main ref={refs.main} page=\"Home\" key=\"M\" />,\r\n                <Footer ref={refs.footer} key=\"F\" />\r\n            ]\r\n        );\r\n    };\r\n}\r\n\r\nexport { App, app };","//import { BrowserRouter } from 'react-router-dom';\r\n//\r\n//ReactDOM.render(\r\n//    <BrowserRouter>\r\n//        <Header />\r\n//        <Nav />\r\n//        <Main />\r\n//        <Footer />\r\n//    </BrowserRouter>,\r\n//    document.querySelector(\"#root\"));\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector(\"#root\"));"],"sourceRoot":""}