{"version":3,"sources":["methods.js","AppContext.js","Sections/Header.js","Sections/Nav.js","MainPages/Home.js","Components/NoteView.js","Components/Note.js","Components/FoodEntry.js","Components/MealEntry.js","MainPages/PagePanels/DayArea.js","Components/FoodItem.js","MainPages/PagePanels/AddFoodArea.js","MainPages/PagePanels/FoodDetailsArea.js","MainPages/DailyMeals.js","MainPages/YourFood.js","MainPages/YourPlans.js","MainPages/YourStats.js","MainPages/GlobalStats.js","MainPages/UsersData.js","MainPages/Profile.js","MainPages/Login.js","MainPages/Register.js","MainPages/Error.js","Sections/Main.js","Sections/Footer.js","App.js","index.js"],"names":["dateToStr","dateObj","getFullYear","getMonth","toString","getDate","getServerURL","svData","serverLink","defaultUser","userid","username","email","firstname","lastname","dob","Date","sex","describe","pic","diet","defaultmeals","access","AppContext","React","createContext","currentUser","changeMainPage","updateUser","Header","props","render","isLogged","state","context","className","alt","src","id","onClick","onLogClick","newIsLogged","setState","Component","contextType","Nav","Home","NoteView","onNoteViewSelect","updateSelectedNote","toggleSelected","isSelected","note","this","signalSelect","kEYUPDATE","score","title","notetext","selectedOrNot","role","tabIndex","defaultProps","Note","onSearchTermsChange","ev","searchTerms","currentTarget","value","loadNoteViews","onNewNoteValueChange","newNote","getAttribute","onSetNewNote","view","selectedNoteView","updateNote","onRemoveNote","onViewChange","searchParam","noteViews","noteViewsIsLoading","searchCounter","sc","setTimeout","searchNoteViews","a","userId","fetch","method","headers","res","json","sender","_getNoteViews","noteViewCounter","map","_getNoteView","nv","key","_scoreOptions","options","i","push","_editChoices","checked","data-view","name","_reactInternalFiber","type","onChange","isMin","data-field","defaultValue","maxLength","defaultNote","FoodEntry","onRemoveFoodEntry","fatRes","carbsRes","proteinRes","updateRemoveFoodEntry","updateMealMacros","getMacroRes","mstr","foodEntry","amount","measure","sizeinfo","Number","toFixed","defaultFoodEntry","foodname","brand","fat","carbs","protein","brandOrNot","removeImgOrNot","readOnly","foodid","price","isdish","MealEntry","onMealSelect","updateSelectedMeal","onRemoveMeal","updateRemoveMeal","updateDayMacros","onMinMaxToggle","stopPropagation","mealEntry","foodentries","splice","updateNewFoodEntry","newFat","newCarbs","newProtein","portion","toggleHighlight","isHighlighted","_getFoodEntries","foodEntriesCounter","_getFoodEntry","entry","fe","defaultMealEntry","mealname","removeNote","DayArea","onLoadDailyMeals","dayParam","day","alert","mealareaIsLoading","selectedMeal","dayEntry","dayFat","dayCarbs","dayProtein","selectedDay","onDayOffset","d","setDate","onCommit","searchareaIsLoading","dayPutReq","date","body","JSON","stringify","console","log","updateAddNewMeal","mealName","meals","length","isNaN","newMealEntry","noteid","updateDishSelect","newFoodEntry","newfat","newcarbs","newprotein","_getMealEntries","mealsEntriesCounter","_getMealEntry","me","updateMealFoodEntries","updateMealNote","setInitialState","mealsAreaOrLoading","noteOrLoading","data-offset","disabled","initialDate","FoodItem","onSelectedFoodChanged","updateSelectedFood","foodItem","defaultFoodItem","AddFoodArea","loadFoodItems","onIsAllChange","isAll","onMeasureChange","onAmountChange","onSearchKey","selectedFood","onAddNewFoodEntry","preventDefault","document","querySelector","select","selectedIndex","foodList","querySelectorAll","click","onAmountKey","newFoodForm","newFoodItem","errorMessage","addNewFoodEntryChecks","placeholder","updateAddNewFoodEntry","onAddNewMeal","newMName","newMPortion","onToggleFoodForm","onChangeFoodValue","field","psi","sFoodItems","typeDelay","searchFoodItems","sum","resetAfterAdd","_currentEntry","selectedOrNull","newEntry","_getAmountCurrent","_getAmountDefault","_getMeasureVisible","_getFoodItems","foodItemsCounter","_getFoodItem","item","fi","newFoodKey","onKeyDown","FoodDetailsArea","onDishSelect","selectedFoodDetails","isDishSelected","onCalculateDishValues","onSaveDishIngr","dishData","dishid","f","updateSelectedFoodDetails","newFoodDetails","_infoForMeasure","measureStr","infoValue","_compositionOrNot","_dishButtonsOrNot","calories","highlightOrNot","picOrEmpty","colSpan","DailyMeals","dayAreaRef","node","dayArea","addFoodAreaRef","addFoodArea","foodDetailsAreaRef","foodDetailsArea","status","ref","YourFood","YourPlans","YourStats","GlobalStats","UsersData","Profile","passRegex","UNSAFE_componentWillMount","warning","isLoading","onReset","cancelChangeProfile","onSubmit","onChangeProfile","minLength","browseUserPic","onChangePassword","passNow","passNew","passConfirm","includes","match","oldpass","newpass","message","Login","warningMsg","onLogin","inputs","usernameText","passText","successStatus","pass","Register","onRegister","pattern","required","passC","desc","Error","Main","page","changePage","newPage","Footer","refs","main","createRef","footer","header","nav","App","Provider","current","data","updateUserProfile","ReactDOM"],"mappings":"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","file":"static/js/main.db316677.chunk.js","sourcesContent":["import svData from \"./svData.json\";\r\n\r\n\r\nconst dateToStr = (dateObj) => `${dateObj.getFullYear()}-`\r\n+ `${dateObj.getMonth() + 1 > 9 ? (dateObj.getMonth() + 1).toString() : `0${(dateObj.getMonth() + 1).toString()}`}-`\r\n+ `${dateObj.getDate() > 9 ? dateObj.getDate().toString() : `0${dateObj.getDate().toString()}`}`;\r\n\r\nconst getServerURL = () =>\r\n  svData.serverLink;\r\n// return \"http://localhost:3001\";\r\n\r\nexport { dateToStr, getServerURL };\r\n","\r\nimport React from \"react\";\n\r\nimport { dateToStr } from \"./methods\";\n\n\r\nconst defaultUser = {\r\n  userid: 0,\r\n  username: \"Guest\",\r\n  email: \"guest@nomail.none\",\r\n  firstname: \"John\",\r\n  lastname: \"Doe\",\r\n  dob: dateToStr(new Date()),\r\n  sex: \"1\",\r\n  describe: \"placeholder\",\r\n  pic: \"profileEmpty.png\",\r\n  diet: null,\r\n  defaultmeals: \"Breakfast,Lunch,Dinner\",\r\n  access: \"Guest\",\r\n};\r\n\r\nconst AppContext = React.createContext({\r\n  currentUser: defaultUser,\r\n  changeMainPage: null,\r\n  updateUser: null,\r\n});\r\n\r\nexport { AppContext, defaultUser };\r\n","// import { NavLink } from 'react-router-dom';\r\n//\r\n// const Header = () => {\r\n//    return (\r\n//        <header className=\"subblock boxShow\">\r\n//            <img src=\"SitePics/head.png\" alt=\"[NO LOGO]\" className=\"logo\" />\r\n//            <div id=\"titleArea\">\r\n//                <NavLink to=\"/\">\r\n//                    <h1 id=\"title\">FoodTracker</h1>\r\n//                    <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n//                </NavLink>\r\n//            </div>\r\n//            <div id=\"profileArea\" className=\"boxShow\">\r\n//                <NavLink to=\"/Login\">\r\n//                    Guest<br />\r\n//                    <img src=\"SitePics/profileEmpty.png\" alt=\"[NO PIC]\" />\r\n//                </NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Register\">Register</NavLink>\r\n//                <NavLink className=\"navlink\" to=\"/Login\">Login</NavLink>\r\n//            </div>\r\n//        </header>\r\n//    );\r\n// }\r\n\r\nimport React from \"react\";\n\nimport { AppContext } from \"../AppContext\";\n\n\r\nclass Header extends React.Component {\r\n   static contextType = AppContext;\r\n\r\n   constructor(props) {\r\n     super(props);\r\n\r\n     this.state = { isLogged: false };\r\n   }\r\n\r\n   render = () => {\r\n     const { isLogged } = this.state;\r\n     const { changeMainPage } = this.context;\r\n     const { username, pic } = this.context.currentUser;\r\n\r\n     return (\r\n       <header className=\"subblock boxShow\">\r\n         <img alt=\"[NO LOGO]\" className=\"logo\" src=\"SitePics/head.png\" />\r\n         <div id=\"titleArea\" onClick={() => changeMainPage(\"Home\")}>\r\n           <h1 id=\"title\">FoodTracker</h1>\r\n           <h3 id=\"subtitle\">Define and Track your Food and diet goals on Your own terms!</h3>\r\n         </div>\r\n         <div className=\"boxShow\" id=\"profileArea\">\r\n           <span onClick={() => changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n             {username}\r\n             <br />\r\n             <img alt=\"[NO PIC]\" src={`UserPics/${pic}`} />\r\n           </span>\r\n           <span className=\"navlink\" onClick={() => changeMainPage(isLogged ? \"Profile\" : \"Register\")}>\r\n             {isLogged ? \"Profile\" : \"Register\"}\r\n           </span>\r\n           <span className=\"navlink\" onClick={this.onLogClick}>\r\n             {isLogged ? \"Logout\" : \"Login\"}\r\n           </span>\r\n         </div>\r\n       </header>\r\n     );\r\n   };\r\n\r\n  onLogClick = () => {\r\n    const { isLogged } = this.state;\r\n    const { updateUser, changeMainPage } = this.context;\r\n\r\n    if (isLogged) {\r\n      updateUser(null);\r\n      changeMainPage(\"Home\");\r\n    } else {\n      changeMainPage(\"Login\");\n    }\r\n  };\r\n\r\n    updateUser = (newIsLogged) => {\r\n      this.setState({ isLogged: newIsLogged });\r\n    };\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\n\r\nimport { AppContext } from \"../AppContext\";\r\n\r\n// import { NavLink } from 'react-router-dom';\r\n//\r\n// const Nav = () => {\r\n//    return (\r\n//        <nav className=\"subblock boxShow\">\r\n//            <NavLink className=\"navlink textHigh\" to=\"/DailyMeals\">Daily Meals</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourFood\">Your Food</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourPlans\">Your Plans</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/YourStats\">Your Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalStats\">Global Stats</NavLink>|\r\n//            <NavLink className=\"navlink textHigh\" to=\"/GlobalData\">Global Data</NavLink>\r\n//        </nav>\r\n//    );\r\n// }\r\n\r\nclass Nav extends React.Component {\r\n    static contextType = AppContext;\r\n\r\n    render = () => (\r\n      <nav className=\"subblock boxShow\">\r\n        <span className=\"navlink textHigh\" onClick={() => this.context.changeMainPage(\"DailyMeals\")}>Daily Meals</span>|\r\n        <span className=\"navlink textHigh\" onClick={() => this.context.changeMainPage(\"YourFood\")}>Your Food</span>|\r\n        <span className=\"navlink textHigh\" onClick={() => this.context.changeMainPage(\"YourPlans\")}>Your Plans</span>|\r\n        <span className=\"navlink textHigh\" onClick={() => this.context.changeMainPage(\"YourStats\")}>Your Stats</span>|\r\n        <span className=\"navlink textHigh\" onClick={() => this.context.changeMainPage(\"GlobalStats\")}>Global Stats</span>|\r\n        <span className=\"navlink textHigh\" onClick={() => this.context.changeMainPage(\"GlobalData\")}>Users Data</span>\r\n      </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\n\r\n\r\nconst Home = () => (\r\n  <main className=\"boxShow\">\r\n    <div className=\"subblock\">\r\n      <h1>WELCOME !</h1>\r\n      <p>\r\n        This is a website where you can track what you eat. You can Design ,Customize and Organize\r\n        foods, meals and diet plans to your liking, and also track various self defined goals\r\n        with a high degree of customisability and have easy access to helpful information.\r\n      </p>\r\n      <p><br />\r\n        While preselecting foods through scanning codes and importing lists from various places will\r\n        be available in the future, the Main Functionality of this site revolves around providing a\r\n        a simple practical and flexible framework where YOU Define and Organize your stuff and can potentially completely ignore anything else.\r\n      </p>\r\n      <p><br />\r\n        This has been entirely made from scratch by me (o/ hi!) mostly because other similar websites seem to want to box you into a way of doing things and predefine certain goals for you while also expecting you to pick from many predefined items. I found this rather confusing or restrictive and annoying.\r\n        BUT here if you feel like making a user called Worm69 that eats 2grams of Dirt and Fungus 30 times a day you can do that!(please don't tho..)\r\n      </p><br />\r\n      <p><span>As a Guest you have Certain Limitations:</span> You can only log food in a specific time period and also have limits on how many entries you can asign to your daily meals. The Guest is only here to quick demonstrations on how this site functions and the data you enter is NOT Realiable/Persistent for long terms.\r\n        (also as this site is currently running for free and will receive major changes-including the database- The Data you put in might get wiped/changed in the future).\r\n      </p>\r\n      <p><br />\r\n        This site is in constant development and tends to get frequent (often daily) updates.\r\n        Right now you can make an account, change profile details, and in DailyMeals section you can\r\n        add/change Meals to days you select, and add Food Items to Meals.\r\n        You can do this either by searching through a list of Foods(right now comprises of what I've eaten lately) or create your own foods. Right now you can only add simple foods with a name and brand, macronutrients and size/portion information. More will come.\r\n        <br />\r\n      </p>\r\n      <p><br />\r\n        But you can attach notes to days and meals. Notes consist of a score, a title and text.\r\n        You use this system to write how you felt about a meal, keep track of alergies/odd reactions/blood sugar or really anything you want. You can find a list of my notes but they probably won't help much because it's personal to me. The list will change to something more general/better later on.\r\n      </p>\r\n\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default Home;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\r\n\r\nclass NoteView extends React.Component {\r\n  static propTypes = {\n    note: PropTypes.object.isRequired,\n    updateSelectedNote: PropTypes.func.isRequired,\n    signalSelect: PropTypes.bool,\n  };\n\r\n  static defaultProps = { signalSelect: false };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      note: props.note,\r\n      isSelected: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.signalSelect) {\n      this.props.updateSelectedNote(this);\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.kEYUPDATE();\r\n  }\r\n\r\n  render() {\r\n    const { isSelected, note } = this.state;\r\n    const { score, title, notetext } = note;\r\n\r\n    const selectedOrNot = isSelected ? \" nSelected\" : \"\";\r\n\r\n    return (\r\n      <div\n        className={`noteView boxShow lineDown${selectedOrNot}`}\r\n        role=\"menuitem\" tabIndex=\"0\" onClick={this.onNoteViewSelect}\n      >\r\n        <img alt={`S=${score}`} className=\"scoreImg\" src={`SitePics/star${score}.png`} />\r\n        <span className=\"title\">{title}</span>\r\n        <span>{`--${notetext ? notetext : \"<Empty>\"}`}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onNoteViewSelect = () => this.props.updateSelectedNote(this);\r\n\r\n  toggleSelected = () => this.setState({ isSelected: !this.state.isSelected });\r\n\r\n  kEYUPDATE() {\r\n    if (this.props.note !== this.state.note) {\r\n      this.setState({ note: this.props.note });\r\n    }\r\n  }\r\n}\r\n\r\nexport default NoteView;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\r\nimport { AppContext } from \"../AppContext\";\nimport { getServerURL } from \"../methods\";\n\nimport NoteView from \"./NoteView\";\n\r\n\r\nclass Note extends React.Component {\r\n  static contextType = AppContext;\r\n  static propTypes = {\r\n    note: PropTypes.object.isRequired,\n    updateNote: PropTypes.func.isRequired,\n    isMin: PropTypes.bool,\n  };\n\r\n  static defaultProps = { isMin: false };\r\n  static defaultNote = {\r\n    score: 0,\r\n    title: \"\",\r\n    notetext: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      note: props.note,\r\n      view: \"info\",\r\n\r\n      noteViewsIsLoading: true,\r\n      selectedNoteView: null,\r\n      noteViews: [],\r\n\r\n      searchTerms: \"\",\r\n\r\n      newNote: {\r\n        score: 0,\r\n        title: \"\",\r\n        notetext: \"\",\r\n      },\r\n    };\r\n    this.noteViewCounter = 0;\r\n    this.searchCounter = 0;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.kEYUPDATE();\r\n  }\r\n\r\n  render() {\r\n    const { note, view, noteViewsIsLoading, newNote } = this.state;\r\n\r\n    if (this.props.isMin) {\r\n      return <hr />;\r\n    }\r\n    if (view === \"info\") {\r\n      if (!note) {\r\n        return (\r\n          <div className=\"note boxShow\">\r\n            No Note\r\n            <button className=\"managerImg16\" data-view=\"select\" onClick={this.onViewChange}>\r\n              <img alt=\"N\" src=\"SitePics/icons8-plus-16.png\" />\r\n            </button>\r\n          </div>\r\n        );\r\n      } else if (note) {\r\n        const { score, title, notetext } = note;\r\n\r\n        return (\r\n          <div className=\"note boxShow\">\r\n            <img alt={`S=${score}`} className=\"scoreImg\" src={`SitePics/star${score}.png`} />\r\n            <button className=\"managerImg16\" onClick={this.onRemoveNote}>\r\n              <img alt=\"X\" src=\"SitePics/icons8-close-window-16.png\" />\r\n            </button>\r\n            <button className=\"managerImg16\" data-view=\"select\" onClick={this.onViewChange}>\r\n              <img alt=\"Edit\" src=\"SitePics/icons8-edit-16.png\" />\r\n            </button>\r\n            <span className=\"title\">{title}</span>\r\n            <span className=\"notetext\">{notetext ? `--${notetext}` : \"\"}</span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    if (view === \"new\") {\r\n      return (\r\n        <div className=\"noteEdit boxShow\">\r\n          {this._editChoices()}\r\n          <div className=\"newNote\">\r\n            <span>Score:</span>\r\n            <div>\r\n              <select data-field=\"score\" defaultValue={0} onChange={this.onNewNoteValueChange} >\r\n                {this._scoreOptions()}\r\n              </select>\r\n              <img alt={`S=${newNote.score}`} className=\"scoreImg\" src={`SitePics/star${newNote.score}.png`} />\r\n              <button onClick={this.onSetNewNote}>Apply New Note</button>\r\n            </div>\r\n            <span>Title:</span>\r\n            <input data-field=\"title\" maxLength=\"50\" type=\"text\" onChange={this.onNewNoteValueChange} />\r\n            <span>Text:</span>\r\n            <textarea data-field=\"notetext\" maxLength=\"250\" onChange={this.onNewNoteValueChange} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (view === \"select\") {\r\n      return (\r\n        <div className=\"noteEdit boxShow\">\r\n          {this._editChoices()}\r\n          <div className=\"selectNote\">\r\n            <div className=\"noteSearch\">\r\n              Search:<input maxLength=\"100\" type=\"text\" onChange={this.onSearchTermsChange} />\r\n              <button onClick={this.onSetNewNote}>Select Note</button>\r\n            </div>\r\n            <div className=\"noteSearchArea\">\r\n              {noteViewsIsLoading ? \"LOADING...\" : this._getNoteViews()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  onSearchTermsChange = (ev) => this.setState({ searchTerms: ev.currentTarget.value },\r\n    this.loadNoteViews);\r\n\r\n  onNewNoteValueChange = (ev) => {\r\n    const { newNote } = this.state;\r\n\r\n    newNote[ev.currentTarget.getAttribute(\"data-field\")] = ev.currentTarget.value;\r\n    this.setState({ newNote });\r\n  };\r\n\r\n  onSetNewNote = () => {\r\n    const { view, newNote, selectedNoteView } = this.state;\r\n\r\n    if (view === \"new\") {\r\n      this.props.updateNote(newNote);\r\n      this.setState({\r\n        note: newNote,\r\n        view: \"info\",\r\n      });\r\n    }\r\n    if (view === \"select\") {\r\n      this.props.updateNote(selectedNoteView.state.note);\r\n      this.setState({\r\n        note: selectedNoteView.state.note,\r\n        view: \"info\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemoveNote = () => this.props.updateNote(null);\r\n\r\n  onViewChange = (ev) => {\r\n    const view = ev.currentTarget.getAttribute(\"data-view\");\r\n    if (view === \"select\") {\r\n      this.loadNoteViews(\"\");\r\n    }\r\n    this.setState({ view });\r\n  }\r\n\r\n  loadNoteViews = (searchParam) => {\r\n    const searchTerms = typeof searchParam === \"string\" ? searchParam : searchParam.currentTarget.value;\r\n\r\n    this.setState({\r\n      noteViews: [],\r\n      noteViewsIsLoading: true,\r\n    });\r\n\r\n    this.searchCounter += 1;\r\n    const sc = this.searchCounter;\r\n    const typeDelay = 200;\r\n    setTimeout(() => this.searchNoteViews(searchTerms, sc), typeDelay);\r\n  };\r\n\r\n  searchNoteViews = async(searchTerms, searchCounter) => {\r\n    if (searchCounter < this.searchCounter) {\r\n      return;\r\n    }\r\n\r\n    // If app.currentUser is Guest pretend it's SV\r\n    const userId = this.context.currentUser.userid === 0 ? 1 : this.context.currentUser.userid;\r\n    let res = await fetch(`${getServerURL()}/dailymeals/notesearch`, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"userid\": userId,\r\n        \"search\": searchTerms,\r\n      },\r\n    });\r\n    res = await res.json();\r\n    if (searchCounter < this.state.searchCounter) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      noteViews: res,\r\n      noteViewsIsLoading: false,\r\n    });\r\n  };\r\n\r\n  updateSelectedNote = (sender) => {\r\n    const { selectedNoteView } = this.state;\r\n\r\n    if (sender !== selectedNoteView) {\r\n      if (selectedNoteView) {\r\n        selectedNoteView.toggleSelected();\r\n      }\r\n      sender.toggleSelected();\r\n\r\n      this.setState({ selectedNoteView: sender });\r\n    }\r\n  };\r\n\r\n  _getNoteViews = () => {\r\n    const { noteViews } = this.state;\r\n\r\n    this.noteViewCounter = 0;\r\n\r\n    return noteViews.map(this._getNoteView);\r\n\r\n  };\r\n\r\n  _getNoteView = (note) => {\r\n    const nv = (\r\n      <NoteView\n        key={this.noteViewCounter} note={note} signalSelect={this.noteViewCounter === 0}\r\n        updateSelectedNote={this.updateSelectedNote}\n      />);\r\n    this.noteViewCounter += 1;\r\n\r\n    return nv;\r\n  };\r\n\r\n  _scoreOptions = () => {\r\n    const options = [];\r\n    for (let i = -5; i <= 5; i += 1) {\r\n      options.push(<option key={i}>{i}</option>);\r\n    }\r\n\n    return options;\r\n  };\r\n\r\n  _editChoices = () => {\r\n    const { view } = this.state;\r\n\r\n    return (\r\n      <div className=\"editChoices\">\r\n        <input\r\n          checked={view === \"select\"} data-view=\"select\" name={`${this._reactInternalFiber.key}_radio`}\r\n          type=\"radio\" value=\"select\" onChange={this.onViewChange}\r\n        />Select\r\n        <input\r\n          checked={view === \"new\"} data-view=\"new\" name={`${this._reactInternalFiber.key}_radio`}\r\n          type=\"radio\" value=\"new\" onChange={this.onViewChange}\r\n        />New\r\n        <button data-view=\"info\" onClick={this.onViewChange}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  kEYUPDATE() {\r\n    if (this.props.note !== this.state.note) {\r\n      this.setState({ note: this.props.note });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\r\n\r\nclass FoodEntry extends React.Component {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    foodEntry: PropTypes.object,\r\n    readOnly: PropTypes.bool,\r\n    updateMealMacros: PropTypes.func,\r\n    updateRemoveFoodEntry: PropTypes.func,\r\n\r\n  };\n\n  static defaultProps ={\n    foodEntry: FoodEntry.defaultFoodEntry,\n    readOnly: false,\n    updateMealMacros: null,\n    updateRemoveFoodEntry: null,\n    className: \"\",\n  };\n\r\n  static defaultFoodEntry = {\r\n    // entryid: 0,\r\n    foodid: 0,\r\n    foodname: \"Nothing\",\r\n    brand: \"Nobody\",\r\n    fat: 0, carbs: 0, protein: 0,\r\n    sizeinfo: null, userid: 0, pic: null, price: 0,\r\n    isdish: false,\r\n    note: null,\r\n    amount: 1,\r\n    measure: \"Pieces\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { foodEntry } = props;\r\n\r\n    this.state = {\r\n      foodEntry: foodEntry ? foodEntry : { ...FoodEntry.defaultFoodEntry },\r\n      fatRes: this.getMacroRes(\"fat\", foodEntry),\r\n      carbsRes: this.getMacroRes(\"carbs\", foodEntry),\r\n      proteinRes: this.getMacroRes(\"protein\", foodEntry),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { fatRes, carbsRes, proteinRes } = this.state;\r\n\r\n    if (this.props.updateMealMacros) {\r\n      this.props.updateMealMacros(fatRes, carbsRes, proteinRes);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.kEYUPDATE();\r\n  }\r\n\r\n  render() {\r\n    const { foodEntry, fatRes, carbsRes, proteinRes } = this.state;\r\n    const { foodname, brand, amount, fat, carbs, protein } = (foodEntry ? foodEntry : FoodEntry.defaultFoodEntry);\r\n\r\n    const brandOrNot = brand ? `@${brand}` : \"\";\r\n    const removeImgOrNot = this.props.readOnly ? \"\" : (\r\n      <button className=\"managerImg16\" onClick={this.onRemoveFoodEntry}>\r\n        <img alt=\"X\" src=\"SitePics/icons8-closeM-window-16.png\" />\r\n      </button>);\r\n\r\n    return (\r\n      <div className={`foodEntry ${this.props.className}`}>\r\n        <span className=\"amount\">{amount}</span>\r\n        <span className=\"name_brand\">{`${foodname} ${brandOrNot}`}</span>\r\n        <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n        <span className=\"macroRes\">{`${fatRes}/${carbsRes}/${proteinRes}`}{removeImgOrNot}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onRemoveFoodEntry = () => {\r\n    const { fatRes, carbsRes, proteinRes } = this.state;\r\n\r\n    this.props.updateRemoveFoodEntry(this);\r\n    if (this.props.updateMealMacros) {\r\n      this.props.updateMealMacros(-fatRes, -carbsRes, -proteinRes);\r\n    }\r\n  }\r\n\r\n  getMacroRes = (mstr, foodEntry) => {\r\n    const { amount, measure, sizeinfo } = foodEntry;\r\n    if (measure === \"Pieces\") {\n      if (sizeinfo === null) {\n        return Number((foodEntry[mstr] * amount).toFixed(1));\n      }\n\n      return Number((foodEntry[mstr] * amount * sizeinfo / 100).toFixed(1));\r\n    }\n\n    return Number((foodEntry[mstr] * amount / 100).toFixed(1));\r\n  };\r\n\r\n  kEYUPDATE() {\r\n    if (this.props.foodEntry !== this.state.foodEntry) {\r\n      const { foodEntry } = this.props;\r\n      this.setState({\n        foodEntry,\r\n        fatRes: this.getMacroRes(\"fat\", foodEntry),\r\n        carbsRes: this.getMacroRes(\"carbs\", foodEntry),\r\n        proteinRes: this.getMacroRes(\"protein\", foodEntry),\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default FoodEntry;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FoodEntry from \"./FoodEntry\";\r\nimport Note from \"./Note\";\n\r\n\r\nclass MealEntry extends React.Component {\r\n  static propTypes = {\r\n    mealEntry: PropTypes.object.isRequired,\r\n    updateDayMacros: PropTypes.func.isRequired,\r\n    updateRemoveMeal: PropTypes.func.isRequired,\r\n    updateSelectedMeal: PropTypes.func.isRequired,\r\n    signalSelect: PropTypes.bool,\r\n  };\n\r\n  static defaultProps = { signalSelect: false };\r\n  static defaultMealEntry = {\r\n    mealname: \"New Meal\",\r\n    portion: 1,\r\n    note: null,\r\n    foodentries: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { mealEntry } = props;\r\n\r\n    this.fat = 0;\r\n    this.carbs = 0;\r\n    this.protein = 0;\r\n    this.state = {\r\n      mealEntry: mealEntry ? mealEntry : { ...MealEntry.defaultMealEntry },\r\n\r\n      fat: 0,\r\n      carbs: 0,\r\n      protein: 0,\r\n\r\n      isHighlighted: false,\r\n      isMin: false,\r\n    };\r\n    this.foodEntriesCounter = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.signalSelect) {\r\n      this.onMealSelect();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.kEYUPDATE();\r\n  }\r\n\r\n  render() {\r\n    const { mealEntry, isHighlighted, isMin, fat, carbs, protein } = this.state;\r\n    const { mealname, note, portion } = mealEntry;\r\n\r\n    return (\r\n      <div\r\n        className={`mealArea boxShow${isHighlighted ? \" highlight\" : \"\"}`} role=\"menuitem\" tabIndex=\"0\"\r\n        onClick={this.onMealSelect}\r\n      >\r\n        <div className=\"mealTitle\">\r\n          {`${mealname} (x${portion})`}\r\n          <button className=\"managerImg20\" onClick={this.onRemoveMeal}>\r\n            <img alt=\"X\" src=\"SitePics/icons8-cancel-20.png\" />\r\n          </button>\r\n          <button className=\"managerImg20\" onClick={this.onMinMaxToggle}>\r\n            <img alt={isMin ? \"+\" : \"-\"} src={isMin ? \"SitePics/icons8-plus-20.png\" : \"SitePics/icons8-minus-20.png\"} />\r\n          </button>\r\n        </div>\r\n        <Note\r\n          key={this._reactInternalFiber.key + (note ? \"_note\" : \"0\")} isMin={isMin} note={note}\r\n          removeNote={this.removeNote} updateNote={this.updateNote}\r\n        />\r\n        <div className={`foodEntries lineDown${isMin ? \" hidden\" : \"\"}`}>\r\n          {this._getFoodEntries()}\r\n        </div>\r\n        <div className=\"mealTotal\">\r\n          <span>Meal Total:</span>\r\n          <span>{`${fat.toFixed(1)}|${carbs.toFixed(1)}|${protein.toFixed(1)}`}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onMealSelect = () => this.props.updateSelectedMeal(this);\r\n\r\n  onRemoveMeal = () => {\r\n    const { fat, carbs, protein } = this.state;\r\n\r\n    this.props.updateRemoveMeal(this);\r\n    this.props.updateDayMacros(-fat, -carbs, -protein);\r\n  }\r\n\r\n  onMinMaxToggle = (ev) => {\r\n    this.setState({ isMin: !this.state.isMin });\r\n    ev.stopPropagation();\r\n  };\r\n\r\n  updateNote = (newNote) => {\r\n    const { mealEntry } = this.state;\r\n\r\n    mealEntry.note = newNote;\r\n    this.setState({ mealEntry });\r\n  };\r\n\r\n  updateRemoveFoodEntry = (foodEntry) => {\r\n    const { mealEntry } = this.state;\r\n\r\n    mealEntry.foodentries.splice(foodEntry._reactInternalFiber.key, 1);\r\n    this.setState({ mealEntry });\r\n  };\r\n\r\n  updateNewFoodEntry = (foodEntry) => {\r\n    const { mealEntry } = this.state;\r\n\r\n    mealEntry.foodentries.push(foodEntry);\r\n    this.setState({ mealEntry });\r\n\r\n    return \"\";\r\n  };\r\n\r\n  updateMealMacros = (newFat, newCarbs, newProtein) => {\r\n    const { portion } = this.state.mealEntry;\r\n\r\n    this.fat += (newFat * portion);\r\n    this.carbs += (newCarbs * portion);\r\n    this.protein += (newProtein * portion);\r\n\r\n    this.setState({\r\n      fat: this.fat,\r\n      carbs: this.carbs,\r\n      protein: this.protein,\r\n    });\r\n    this.props.updateDayMacros(newFat, newCarbs, newProtein);\r\n  };\r\n\r\n  toggleHighlight = () => this.setState({ isHighlighted: !this.state.isHighlighted });\r\n\r\n  _getFoodEntries = () => {\r\n    const { mealEntry } = this.state;\r\n\r\n    this.foodEntriesCounter = 0;\r\n\n    return mealEntry.foodentries.map(this._getFoodEntry);\r\n  };\r\n\r\n  _getFoodEntry = (entry) => {\r\n    const fe = (\r\n      <FoodEntry\r\n        key={this.foodEntriesCounter} className=\"lineDown\" foodEntry={entry}\r\n        updateMealMacros={this.updateMealMacros} updateRemoveFoodEntry={this.updateRemoveFoodEntry}\r\n      />);\r\n    this.foodEntriesCounter += 1;\r\n\r\n    return fe;\r\n  };\r\n\r\n  kEYUPDATE() {\r\n    if (this.props.mealEntry !== this.state.mealEntry) {\r\n      this.setState({ mealEntry: this.props.mealEntry });\r\n    }\r\n  }\r\n}\r\n\r\nexport default MealEntry;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-onchange */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\n\r\nimport Note from \"../../Components/Note\";\r\nimport MealEntry from \"../../Components/MealEntry\";\r\nimport { dateToStr, getServerURL } from \"../../methods\";\r\nimport { AppContext } from \"../../AppContext\";\n\n\r\nclass DayArea extends React.Component {\r\n  static contextType = AppContext;\r\n  static propTypes = { updateDishSelect: PropTypes.func.isRequired }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.fat = 0;\r\n    this.carbs = 0;\r\n    this.protein = 0;\r\n    this.state = {\r\n      selectedDay: null,\r\n      dayEntry: {},\r\n      dayFat: 0,\r\n      dayCarbs: 0,\r\n      dayProtein: 0,\r\n\r\n      selectedMeal: null,\r\n      mealareaIsLoading: true,\r\n    };\r\n    this.mealsEntriesCounter = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setInitialState();\r\n  }\r\n\r\n  render() {\r\n    const { selectedDay, dayEntry, mealareaIsLoading, dayFat, dayCarbs, dayProtein } = this.state;\r\n\r\n    const mealsAreaOrLoading = mealareaIsLoading ? \"LOADING...\" : this._getMealEntries();\r\n    const noteOrLoading = mealareaIsLoading ? \"LOADING...\" : (\r\n      <Note\n        key={`D${dayEntry.note ? dayEntry.note.noteid : \"D0\"}`} note={dayEntry.note}\r\n        removeNote={this.removeNote} updateNote={this.updateNote}\n      />\r\n    );\r\n\r\n    return (\r\n      <div className=\"dayArea subblock boxShow\">\r\n        <div className=\"dayHeader\">\r\n          <div className=\"datepick boxShow\">\r\n            <span className=\"textHigh\">Day: </span>\r\n            <button\n              className=\"ftButton\" data-offset=\"-1\"\r\n              disabled={mealareaIsLoading} onClick={this.onDayOffset}\n            >\r\n              {\"<\"}\r\n            </button>\r\n            <input\n              className=\"selectedDay\" disabled={mealareaIsLoading} type=\"date\" value={selectedDay}\r\n              onChange={this.onLoadDailyMeals}\n            />\r\n            <button\n              className=\"ftButton\" data-offset=\"1\"\r\n              disabled={mealareaIsLoading} onClick={this.onDayOffset}\n            >{\">\"}</button>\r\n          </div>\r\n          {noteOrLoading}\r\n        </div>\r\n        <div className=\"mealsArea\">\r\n          {mealsAreaOrLoading}\r\n        </div>\r\n        <hr />\r\n        <div className=\"dayTotal\">\r\n          <span>Day Total:</span>\r\n          <span>{`${dayFat.toFixed(1)}||${dayCarbs.toFixed(1)}||${dayProtein.toFixed(1)}`}</span>\r\n        </div>\r\n        <button className=\"ftButton\" disabled={mealareaIsLoading} onClick={this.onCommit}>COMMIT DAY!</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onLoadDailyMeals = (dayParam) => {\r\n    const { currentUser } = this.context;\r\n\r\n    const day = (typeof dayParam === \"string\") ? dayParam : dayParam.currentTarget.value;\r\n\r\n    if (currentUser.access === \"Guest\" &&\r\n      (new Date(day) < new Date(\"2020-06-04\") || new Date(day) > new Date(\"2020-06-11\"))) {\r\n      alert(\"As Guest user you can Only select from the 2020-06-04 to 2020-06-11 period!\");\r\n\r\n      return;\r\n    }\r\n\r\n    this.fat = 0;\r\n    this.carbs = 0;\r\n    this.protein = 0;\r\n    this.setState({\r\n      mealareaIsLoading: true,\r\n      selectedMeal: null,\r\n      dayEntry: null,\r\n      dayFat: 0,\r\n      dayCarbs: 0,\r\n      dayProtein: 0,\r\n    },\r\n    async() => {\r\n      let res = await fetch(`${getServerURL()}/dailymeals`, {\r\n        method: \"get\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \"reqdate\": day,\r\n          \"userid\": currentUser.userid,\r\n        },\r\n      });\r\n      res = await res.json();\r\n\r\n      this.setState({\r\n        mealareaIsLoading: false,\r\n        selectedDay: day,\r\n        dayEntry: res,\r\n      });\r\n    });\r\n  };\r\n\r\n  onDayOffset = (ev) => {\r\n    const { selectedDay } = this.state;\r\n\r\n    const d = new Date(selectedDay);\r\n    d.setDate(d.getDate() + Number(ev.currentTarget.getAttribute(\"data-offset\")));\r\n    this.onLoadDailyMeals(dateToStr(d));\r\n  };\r\n\r\n  onCommit = () => {\r\n    this.setState({ searchareaIsLoading: true },\r\n      async() => {\r\n        const { dayEntry, selectedDay } = this.state;\r\n        const { currentUser } = this.context;\r\n\r\n        const dayPutReq = dayEntry;\r\n        dayPutReq.userid = currentUser.userid;\r\n        dayPutReq.date = selectedDay;\r\n\r\n        let res = await fetch(`${getServerURL()}/dailymeals`, {\r\n          method: \"put\",\r\n          headers: { \"content-type\": \"application/json\" },\r\n          body: JSON.stringify(dayPutReq),\r\n        });\r\n        res = await res.json();\r\n\r\n        this.onLoadDailyMeals(this.state.selectedDay);\r\n\r\n        console.log(res);\r\n        if (typeof res !== \"string\") {\r\n          alert(`Successfully entered date for day ${selectedDay}!\\n --You can view resulting entry in the console`);\r\n        } else {\r\n          alert(\"There was an Error!\");\r\n        }\r\n\r\n        this.setState({ searchareaIsLoading: false });\r\n      });\r\n  };\r\n\r\n  updateAddNewMeal = (mealName = \"\", portion = 1) => {\r\n    const { currentUser } = this.context;\r\n    const { dayEntry } = this.state;\r\n\r\n    if (currentUser.access === \"Guest\" && dayEntry.meals.length === 5) {\r\n      return \"As Guest user you cannot enter more than 5 Meals per day!\";\r\n    }\r\n    if (isNaN(portion)) {\r\n      return \"Must Enter Valid Number for Portion!\";\r\n    }\r\n\r\n    const newMealEntry = {\r\n      mealname: mealName === \"\" ? `Meal${dayEntry.meals.length + 1}` : mealName,\r\n      portion: portion === \"\" ? 1 : portion,\r\n      noteid: null,\r\n      foodentries: [],\r\n    };\r\n\r\n    dayEntry.meals.push(newMealEntry);\r\n    this.setState({ dayEntry });\r\n\r\n    return \"\";\r\n  };\r\n\r\n  updateRemoveMeal = (sender) => {\r\n    const { dayEntry } = this.state;\r\n\r\n    dayEntry.meals.splice(sender._reactInternalFiber.key, 1);\r\n    this.setState({ dayEntry });\r\n  };\r\n\r\n  updateSelectedMeal = (sender) => {\r\n    const { selectedMeal } = this.state;\r\n\r\n    if (sender === null && selectedMeal !== null) {\r\n      selectedMeal.toggleHighlight();\r\n      this.setState({ selectedMeal: null });\r\n    } else if (sender !== selectedMeal) {\r\n      if (selectedMeal) {\r\n        selectedMeal.toggleHighlight();\r\n      }\r\n      sender.toggleHighlight();\r\n      this.setState({ selectedMeal: sender });\r\n      // ev.stopPropagation();\r\n      this.props.updateDishSelect(false);\r\n    }\r\n  };\r\n\r\n  updateNewFoodEntry = (newFoodEntry) => {\r\n    const { selectedMeal } = this.state;\r\n    const { currentUser } = this.context;\r\n\r\n    if (selectedMeal === null) {\r\n      return \"Must select a Meal or Dish!\";\r\n    }\r\n    if (currentUser.access === \"Guest\" && selectedMeal.state.mealEntry.foodentries.length >= 7) {\r\n      return \"As Guest user you cannot enter more than 7 Food Items per Meal!\";\r\n    }\r\n\r\n    selectedMeal.updateNewFoodEntry(newFoodEntry);\r\n\r\n    return \"\";\r\n  };\r\n\r\n  updateDayMacros = (newfat, newcarbs, newprotein) => {\r\n    this.fat += newfat;\r\n    this.carbs += newcarbs;\r\n    this.protein += newprotein;\r\n\r\n    this.setState({\r\n      dayFat: this.fat,\r\n      dayCarbs: this.carbs,\r\n      dayProtein: this.protein,\r\n    });\r\n  };\r\n\r\n  updateNote = (newNote) => {\r\n    const { dayEntry } = this.state;\r\n\r\n    dayEntry.note = newNote;\r\n    this.setState({ dayEntry });\r\n  };\r\n\r\n  _getMealEntries = () => {\r\n    const { dayEntry } = this.state;\r\n\r\n    this.mealsEntriesCounter = 0;\r\n\r\n    return dayEntry.meals.map(this._getMealEntry);\r\n\r\n  };\r\n\r\n  _getMealEntry = (entry) => {\r\n    const me = (\r\n      <MealEntry\r\n        key={this.mealsEntriesCounter} mealEntry={entry} signalSelect={this.mealsEntriesCounter === 0}\r\n        updateDayMacros={this.updateDayMacros} updateMealFoodEntries={this.updateMealFoodEntries}\r\n        updateMealNote={this.updateMealNote} updateRemoveMeal={this.updateRemoveMeal}\r\n        updateSelectedMeal={this.updateSelectedMeal}\r\n      />);\r\n    this.mealsEntriesCounter += 1;\r\n\r\n    return me;\r\n  };\r\n\r\n  setInitialState() {\r\n    const { currentUser } = this.context;\r\n\r\n    const initialDate = currentUser.access === \"Guest\" ? new Date(\"2020-06-07\") : new Date();\r\n    this.setState({ selectedDay: dateToStr(initialDate) });\r\n\r\n    setTimeout(() => {\r\n      this.onLoadDailyMeals(this.state.selectedDay);\r\n    }, 0);\r\n  }\r\n}\r\n\r\nexport default DayArea;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\r\n\r\nclass FoodItem extends React.Component {\r\n  static propTypes = {\r\n    foodItem: PropTypes.object.isRequired,\r\n    updateSelectedFood: PropTypes.func.isRequired,\r\n    signalSelect: PropTypes.bool,\r\n  };\n\n  static defaultProps = { signalSelect: false };\r\n  static defaultFoodItem = {\r\n    // entryid: 0,\r\n    foodid: 0,\r\n    foodname: \"Nothing\",\r\n    brand: \"Nowhere\",\r\n    fat: 0, carbs: 0, protein: 0,\r\n    sizeinfo: null, userid: 0, pic: \"empty.png\", price: 0,\r\n    isdish: false,\r\n    note: null,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      foodItem: (props.foodItem) ? props.foodItem : { ...FoodItem.defaultFoodItem },\r\n      isSelected: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.signalSelect) {\r\n      this.onSelectedFoodChanged(this);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.kEYUPDATE();\r\n  }\r\n\r\n  render() {\r\n    const { foodItem, isSelected } = this.state;\r\n    const { foodname, brand, fat, carbs, protein, sizeinfo } = foodItem;\r\n\r\n    return (\r\n      <div\n        className={`foodItem lineDown${isSelected ? \" feSelected\" : \"\"}`}\r\n        role=\"menuitem\" tabIndex=\"0\" onClick={this.onSelectedFoodChanged}\n      >\r\n        <span className=\"name_brand\">{`${foodname} ${brand ? `@${brand}` : \"\"}`}</span>\r\n        <span className=\"macro\">{`${fat}/${carbs}/${protein}`}</span>\r\n        <span className=\"per\">{sizeinfo === null ? \"1\" : \"100g\"}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSelectedFoodChanged = () => this.props.updateSelectedFood(this);\r\n\r\n  toggleSelected = () => this.setState({ isSelected: !this.state.isSelected });\r\n\r\n  kEYUPDATE() {\r\n    if (this.props.foodItem !== this.state.foodItem) {\r\n      this.setState({ foodItem: this.props.foodItem });\r\n    }\r\n  }\r\n}\r\n\r\nexport default FoodItem;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-onchange */\r\n/* eslint-disable max-lines */\r\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FoodEntry from \"../../Components/FoodEntry\";\r\nimport FoodItem from \"../../Components/FoodItem\";\r\nimport { getServerURL } from \"../../methods\";\nimport { AppContext } from \"../../AppContext\";\r\n\r\n\r\nclass AddFoodArea extends React.Component {\r\n  static contextType = AppContext;\r\n  static propTypes = {\n    updateAddNewFoodEntry: PropTypes.func.isRequired,\n    updateAddNewMeal: PropTypes.func.isRequired,\n    updateSelectedFood: PropTypes.func.isRequired,\n  }\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.newFoodKey = \"mustchange\";\r\n    this.state = {\r\n      selectedFood: null,\r\n      amount: \"\",\r\n      measure: \"---\",\r\n\r\n      searchareaIsLoading: true,\r\n      searchTerms: \"\",\r\n      isAll: false,\r\n\r\n      newFoodForm: false,\r\n      newFoodItem: null,\r\n    };\r\n    this.foodItemsCounter = 0;\r\n    this.searchCounter = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setInitialState();\r\n  }\r\n\r\n  render() {\r\n    const { amount, measure, mealareaIsLoading, searchareaIsLoading, newFoodForm } = this.state;\r\n\r\n    return (\r\n      <div className=\"addFoodArea subblock boxShow\">\r\n        {newFoodForm ? (\r\n          <div className=\"newFoodForm\">\r\n            <div className=\"newFoodHeader\">\r\n              <span className=\"textHigh\">Create New Food:</span>\r\n              <button className=\"ftButton\" onClick={this.onToggleFoodForm}>\r\n                +Select\r\n              </button>\r\n            </div>\r\n            <span>Name:</span>\r\n            <input\n              data-field=\"foodname\" maxLength=\"50\" placeholder=\"name\" type=\"text\"\r\n              onChange={this.onChangeFoodValue}\n            />\r\n            <span>Brand:</span>\r\n            <input\n              data-field=\"brand\" maxLength=\"50\" placeholder=\"brand\" type=\"text\"\r\n              onChange={this.onChangeFoodValue}\n            />\r\n            <span>Macros:</span>\r\n            <div>\r\n              <input\n                data-field=\"fat\" maxLength=\"5\" placeholder=\"0\" type=\"text\"\r\n                onChange={this.onChangeFoodValue}\n              />\r\n              <span>Fat</span>\r\n              <input\n                data-field=\"carbs\" maxLength=\"5\" placeholder=\"0\" type=\"text\"\r\n                onChange={this.onChangeFoodValue}\n              />\r\n              <span>Carbs</span>\r\n              <input\n                data-field=\"protein\" maxLength=\"5\" placeholder=\"0\" type=\"text\"\r\n                onChange={this.onChangeFoodValue}\n              />\r\n              <span>Protein</span>\r\n            </div>\r\n            <span>Per:</span>\r\n            <div>\r\n              <select className=\"smallerInput\" data-field=\"per\" onChange={this.onChangeFoodValue} >\r\n                <option>100Grams</option>\r\n                <option>1Piece</option>\r\n              </select>\r\n              <span>Piece Size:</span>\r\n              <input\n                className=\"PSInput smallerInput\" data-field=\"sizeinfo\" defaultValue=\"100\" maxLength=\"5\"\r\n                placeholder=\"null\" type=\"text\" onChange={this.onChangeFoodValue}\n              />\r\n            </div>\r\n            <span>Price:</span>\r\n            <div>\r\n              <input\n                className=\"smallerInput\" data-field=\"price\" maxLength=\"10\" placeholder=\"0\"\r\n                type=\"text\" onChange={this.onChangeFoodValue}\n              />\r\n              <div>\r\n                <span>Is Dish?</span>\r\n                <input data-field=\"isdish\" type=\"checkbox\" onChange={this.onChangeFoodValue} />\r\n              </div>\r\n            </div>\r\n            <span className=\"afaInfo\">\r\n              To add certain details (dish, composition, photo, note)or further edit foods go to Your Foods section.\r\n            </span>\r\n          </div>\r\n        ) : [\r\n          <div key=\"searchForm\" className=\"searchForm boxShow\">\r\n            <span className=\"textHigh\">Search Food: </span>\r\n            <input\n              className=\"isAll\" maxLength=\"100\" type=\"checkbox\"\r\n              onChange={this.onIsAllChange}\n            />\r\n            ALL\r\n            <button className=\"ftButton\" onClick={this.onToggleFoodForm} >\r\n              +New\r\n            </button>\r\n            <input\n              className=\"search\" placeholder=\"search text\" type=\"text\"\r\n              onChange={this.onSearchTermsChange} onKeyDown={this.onSearchKey}\n            />\r\n          </div>,\r\n          <div key=\"searchResults\" className=\"searchResults boxShow\">\r\n            {searchareaIsLoading ? \"LOADING...\" : this._getFoodItems()}\r\n          </div>,\r\n        ]}\r\n        <div className=\"amountForm boxShow\">\r\n          <span className=\"textHigh\">Quantity: </span>\r\n          <input\r\n            className=\"amountSize\" disabled={searchareaIsLoading} maxLength=\"10\"\r\n            placeholder={this._getAmountDefault()} type=\"text\" value={amount}\r\n            onChange={this.onAmountChange} onKeyDown={this.onAmountKey}\r\n          />\r\n          <select\n            disabled={searchareaIsLoading} id=\"measureSelect\" value={measure}\r\n            onChange={this.onMeasureChange}\n          >\r\n            <option className={this._getMeasureVisible(\"Grams\")}>\r\n              Grams</option>\r\n            <option className={this._getMeasureVisible(\"Pieces\")}>\r\n              Pieces</option>\r\n            <option className=\"hidden\">---</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"searchEntry boxShow\">\r\n          <span className=\"textHigh lineDown\">Current Entry:</span>\r\n          {this._currentEntry()}\r\n          <button className=\"ftButton\" disabled={searchareaIsLoading} onClick={this.onAddNewFoodEntry}>\r\n            ADD FOOD ENTRY\r\n          </button>\r\n        </div>\r\n        <hr />\r\n        <div className=\"addMealArea\">\r\n          <div>\r\n            <span className=\"textHigh\">Meal Name:</span>\r\n            <input className=\"newMName\" placeholder={\"Meal#\"} type=\"text\" />\r\n            <span className=\"textHigh\">Portion:</span>\r\n            <input className=\"newMPortion\" maxLength=\"5\" placeholder=\"1\" type=\"text\" />\r\n          </div>\r\n          <button className=\"newMeal ftButton\" disabled={mealareaIsLoading} onClick={this.onAddNewMeal}>\r\n            ADD NEW MEAL\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSearchTermsChange = (ev) => this.setState({ searchTerms: ev.currentTarget.value },\r\n    this.loadFoodItems);\n\r\n  onIsAllChange = (ev) => this.setState({ isAll: ev.currentTarget.checked },\r\n    this.loadFoodItems);\n\r\n  onMeasureChange = (ev) => this.setState({ measure: ev.currentTarget.value });\r\n  onAmountChange = (ev) => this.setState({ amount: ev.currentTarget.value });\r\n\r\n  onSearchKey = (ev) => {\r\n    const { selectedFood } = this.state;\r\n\r\n    switch (ev.key) {\r\n      case \"Enter\":\r\n        this.onAddNewFoodEntry();\r\n        ev.preventDefault();\r\n        break;\r\n      case \"Tab\":\r\n        document.querySelector(\".amountSize\").select();\r\n        ev.preventDefault();\r\n        break;\r\n      case \"Escape\":\r\n        document.querySelector(\".search\").value = \"\";\r\n        ev.preventDefault();\r\n        break;\r\n      case \"ArrowUp\":\r\n        if (selectedFood) {\r\n          const selectedIndex = Number(selectedFood._reactInternalFiber.key);\r\n          const foodList = document.querySelectorAll(\".foodItem\");\r\n\r\n          if (selectedIndex > 0) {\r\n            foodList[selectedIndex - 1].click();\r\n          }\r\n        }\r\n        ev.preventDefault();\r\n        break;\r\n      case \"ArrowDown\":\r\n        if (selectedFood) {\r\n          const selectedIndex = Number(selectedFood._reactInternalFiber.key);\r\n          const foodList = document.querySelectorAll(\".foodItem\");\r\n\r\n          if (selectedIndex < foodList.length - 1) {\r\n            foodList[selectedIndex + 1].click();\r\n          }\r\n        }\r\n        ev.preventDefault();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onAmountKey = (ev) => {\r\n    switch (ev.key) {\r\n      case \"Enter\":\r\n        this.onAddNewFoodEntry();\r\n        ev.preventDefault();\r\n        break;\r\n      case \"Tab\":\r\n        document.querySelector(\".search\").select();\r\n        ev.preventDefault();\r\n        break;\r\n      case \"Escape\":\r\n        document.querySelector(\".amountSize\").value = \"\";\r\n        ev.preventDefault();\r\n        break;\r\n      case \"ArrowUp\":\r\n        this.setState({ amount: this.state.amount + 1 });\r\n        ev.preventDefault();\r\n        break;\r\n      case \"ArrowDown\":\r\n        this.setState({ amount: this.state.amount - 1 });\r\n        ev.preventDefault();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\n\n  onAddNewFoodEntry = () => {\n    const { newFoodForm, newFoodItem, selectedFood, amount, measure } = this.state;\n\n    const errorMessage = this.addNewFoodEntryChecks();\n    if (errorMessage) {\n      alert(errorMessage);\n    } else {\n      const newFoodEntry = newFoodForm ? newFoodItem : selectedFood.state.foodItem;\n      newFoodEntry.amount = amount ? amount : document.querySelector(\".amountSize\").placeholder;\n      newFoodEntry.measure = measure;\n\n      this.props.updateAddNewFoodEntry(newFoodEntry);\n    }\n  };\n\n  onAddNewMeal = () => {\n    const newMName = document.querySelector(\".newMName\").value;\n    const newMPortion = document.querySelector(\".newMPortion\").value;\n    this.props.updateAddNewMeal(newMName, newMPortion);\n  };\n\n  onToggleFoodForm = () => {\n    const { newFoodForm } = this.state;\n\n    if (newFoodForm) {\n      this.setState({ newFoodForm: !newFoodForm });\n    } else {\n      this.setState({ newFoodForm: true, selectedFood: null, measure: \"Grams\", amount: 100 });\n    }\n  };\n\n  onChangeFoodValue = (ev) => {\n    const { newFoodItem } = this.state;\n    const { value } = ev.currentTarget;\n\n    const field = ev.currentTarget.getAttribute(\"data-field\");\n    const psi = document.querySelector(\".PSInput\");\n\n    switch (field) {\n      case \"per\":\n        if (value === \"1Piece\") {\n          psi.disabled = true;\n          psi.value = \"\";\n          newFoodItem.sizeinfo = null;\n          this.setState({ amount: 1 });\n        } else {\n          psi.disabled = false;\n          psi.value = 100;\n          newFoodItem.sizeinfo = 100;\n          this.setState({ amount: 100 });\n        }\n        break;\n      case \"isdish\":\n        newFoodItem.foodentries = value === true ? [] : null;\n        break;\n      case \"sizeinfo\":\n        newFoodItem[field] = value === \"\" ? null : value;\n        break;\n      case \"fat\":\n      case \"carbs\":\n      case \"protein\":\n        newFoodItem[field] = value === \"\" ? 0 : value;\n        break;\n      default:\n        newFoodItem[field] = value;\n    }\n\n    this.setState({\n      newFoodItem,\n      measure: newFoodItem.sizeinfo === null ? \"Pieces\" : \"Grams\",\n    });\n  };\n\n  loadFoodItems = (searchTerms = this.state.searchTerms, isAll = this.state.isAll) => {\n    this.setState({\n      sFoodItems: [],\n      searchareaIsLoading: true,\n    });\n\n    this.searchCounter += 1;\n    const sc = this.searchCounter;\n    const typeDelay = 200;\n    setTimeout(() => this.searchFoodItems(searchTerms, isAll, sc), typeDelay);\n  };\n\n  searchFoodItems = async(searchTerms, isAll, searchCounter) => {\n    if (searchCounter < this.searchCounter) {\n      return;\n    }\n\n    const { currentUser } = this.context;\n    let res = await fetch(`${getServerURL()}/dailymeals/foodsearch`, {\n      method: \"get\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"userid\": currentUser.userid,\n        \"search\": searchTerms,\n        \"isall\": isAll,\n      },\n    });\n    res = await res.json();\n    if (searchCounter < this.state.searchCounter) {\n      return;\n    }\n\n    if (res.length === 0) {\n      this.setState({\n        selectedFood: null,\n        measure: \"---\",\n        amount: \"\",\n      });\n    }\n    this.setState({\n      sFoodItems: res,\n      searchareaIsLoading: false,\n    });\n  };\n\n  addNewFoodEntryChecks = () => {\n    const { newFoodForm, newFoodItem, selectedFood, amount, measure } = this.state;\n\n    if (newFoodForm) {\n      if (newFoodItem.foodname === \"\") {\n        return \"New Food must have a Name !\";\n      }\n      const sum = Number(newFoodItem.fat) + Number(newFoodItem.carbs) + Number(newFoodItem.protein);\n      if (isNaN(sum) || (measure === \"Grams\" && (sum > 100 || sum <= 0))) {\n        return \"Macro value are wrong!\";\n      }\n      if (isNaN(newFoodItem.price)) {\n        return \"Price value is wrong!\";\n      }\n      if (isNaN(newFoodItem.sizeinfo) || newFoodItem.sizeinfo < 0) {\n        return \"Piece Size value is wrong!\";\n      }\n    } else if (selectedFood === null) {\n      return \"Must select a Food Item !\";\n    }\n    if (isNaN(amount)) {\n      return \"Must Enter Valid Number for Amount!\";\n    }\n\n    return \"\";\n  };\n\n  updateSelectedFood = (sender) => {\n    const { selectedFood } = this.state;\n\n    if (sender === selectedFood) {\n      return;\n    }\n    if (selectedFood) {\n      selectedFood.toggleSelected();\n    }\n    sender.toggleSelected();\n\n    this.setState({\n      selectedFood: sender,\n      amount: \"\",\n      measure: sender.state.foodItem.sizeinfo === null ? \"Pieces\" : \"Grams\",\n    });\n\n    this.props.updateSelectedFood(sender);\n  };\n\n  resetAfterAdd = () => {\n    const { newFoodForm } = this.state;\n    const { currentUser } = this.context;\n\n    if (newFoodForm) {\n      this.setState({\n        newFoodItem: {\n          foodname: \"\",\n          brand: \"\",\n          fat: 0, carbs: 0, protein: 0,\n          price: 0,\n          sizeinfo: 100,\n          isdish: false,\n          pic: \"empty.png\",\n          userid: currentUser.userid,\n          noteid: null,\n          foodentries: null,\n        },\n      });\n    } else {\n      document.querySelector(\".search\").select();\n    }\n  };\n\n  setInitialState=() => {\n    const { currentUser } = this.context;\n\n    this.setState({\n      newFoodItem: {\n        foodname: \"\",\n        brand: \"\",\n        fat: 0, carbs: 0, protein: 0,\n        price: 0,\n        sizeinfo: 100,\n        isdish: false,\n        pic: \"empty.png\",\n        userid: currentUser.userid,\n        noteid: null,\n        foodentries: null,\n      },\n    }, this.loadFoodItems);\n  };\n\r\n  _currentEntry = () => {\r\n    const { selectedFood, measure, newFoodForm, newFoodItem } = this.state;\r\n\r\n    const selectedOrNull = selectedFood ? { ...selectedFood.state.foodItem } : { ...FoodItem.defaultFoodItem };\r\n    const newEntry = newFoodForm ? newFoodItem : selectedOrNull;\r\n    newEntry.measure = measure;\r\n    newEntry.amount = this._getAmountCurrent();\r\n\n    return <FoodEntry foodEntry={newEntry} readOnly=\"true\" />;\r\n  };\r\n\r\n  _getAmountCurrent = () => {\r\n    const { amount } = this.state;\r\n\r\n    if (amount) {\n      return amount;\n    }\r\n\r\n    return this._getAmountDefault();\r\n  };\r\n\r\n  _getAmountDefault = () => {\r\n    const { selectedFood, measure } = this.state;\r\n\r\n    if (!selectedFood) {\r\n      return 0;\r\n    }\r\n    if (measure === \"Pieces\") {\r\n      return 1;\r\n    }\r\n    const { sizeinfo } = selectedFood.state.foodItem;\r\n\r\n    return sizeinfo === 0 ? 100 : sizeinfo;\r\n  };\r\n\r\n  _getMeasureVisible = (measure) => {\r\n    const { selectedFood } = this.state;\r\n    if (!selectedFood) {\r\n      return \"hidden\";\r\n    }\r\n\r\n    const { foodItem } = selectedFood.state;\r\n    if (measure === \"Grams\") {\r\n      return foodItem.sizeinfo === null ? \"hidden\" : \"\";\r\n    }\r\n    if (measure === \"Pieces\") {\r\n      return foodItem.sizeinfo === 0 ? \"hidden\" : \"\";\r\n    }\r\n\n    return \"\";\r\n  };\r\n\r\n  _getFoodItems = () => {\r\n    const { sFoodItems } = this.state;\r\n\r\n    this.foodItemsCounter = 0;\r\n\r\n    return sFoodItems.map(this._getFoodItem);\r\n\r\n  };\r\n\r\n  _getFoodItem = (item) => {\r\n    const fi = (\r\n      <FoodItem\r\n        key={this.foodItemsCounter} foodItem={item} signalSelect={this.foodItemsCounter === 0}\r\n        updateSelectedFood={this.updateSelectedFood}\r\n      />);\r\n    this.foodItemsCounter += 1;\r\n\r\n    return fi;\r\n  };\r\n}\r\n\r\nexport default AddFoodArea;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-onchange */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\n\r\nimport FoodItem from \"../../Components/FoodItem\";\r\nimport FoodEntry from \"../../Components/FoodEntry\";\r\nimport { getServerURL } from \"../../methods\";\r\nimport { AppContext } from \"../../AppContext\";\n\r\n\r\nclass FoodDetailsArea extends React.Component {\r\n  static contextType = AppContext;\r\n  static propTypes = {\r\n    isDishSelected: PropTypes.bool.isRequired,\n    updateDishSelect: PropTypes.func.isRequired,\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { selectedFoodDetails: { ...FoodItem.defaultFoodItem } };\r\n    this.foodEntriesCounter = 0;\r\n  }\r\n\r\n  render() {\r\n    const { selectedFoodDetails } = this.state;\r\n\r\n    if (!selectedFoodDetails) {\n      return (\r\n        <div className=\"foodDetailsArea subblock boxShow\">\r\n          LOADING...\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const { isDishSelected } = this.props;\r\n    const { foodname, brand, fat, carbs, protein, price, pic } = selectedFoodDetails;\r\n\r\n    const calories = ((fat * 9) + (protein * 4) + (carbs * 4)).toFixed(1);\r\n    const highlightOrNot = isDishSelected ? \" highlight\" : \"\";\r\n    const brandOrNot = brand ? `@${brand}` : \"\";\r\n    const picOrEmpty = pic === null ? \"empty.png\" : pic;\n\n    return (\r\n      <div\n        className={`foodDetailsArea subblock boxShow${highlightOrNot}`}\r\n        role=\"menuitem\" tabIndex={0} onClick={this.onDishSelect}\n      >\r\n        <div className=\"foodDetailsHeader\">\r\n          <div className=\"textHigh boxShow\">{`${foodname} ${brandOrNot}`}</div>\r\n          {/* <Note removeNote={() => { }} note={selectedFoodDetails ? selectedFoodDetails.note : null}\r\n          key={\"F\" + (selectedFoodDetails.note ? selectedFoodDetails.note.noteid : \"0\")}\r\n          />*/}\r\n        </div>\r\n        <div className=\"foodPic boxShow\">\r\n          <img alt=\"[NO FOOD PIC]\" src={`FoodPics/${picOrEmpty}`} />\r\n        </div>\r\n        <div className=\"foodInfo\">\r\n          <table>\r\n            <thead>\r\n              <tr><th>Name</th><td colSpan=\"2\">{foodname}</td></tr>\r\n              <tr><th>Brand</th><td colSpan=\"2\">{brand ? brand : \"--\"}</td></tr>\r\n              <tr><th>Macro</th><th>100g</th><th>1p</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr><td>Fat</td>\r\n                <td>{this._infoForMeasure(\"Grams\", fat)}</td>\r\n                <td>{this._infoForMeasure(\"Pieces\", fat)}</td></tr>\r\n              <tr><td>Carbs</td>\r\n                <td>{this._infoForMeasure(\"Grams\", carbs)}</td>\r\n                <td>{this._infoForMeasure(\"Pieces\", carbs)}</td></tr>\r\n              <tr><td>Protein</td>\r\n                <td>{this._infoForMeasure(\"Grams\", protein)}</td>\r\n                <td>{this._infoForMeasure(\"Pieces\", protein)}</td></tr>\r\n              <tr><td>Calories</td>\r\n                <td>{this._infoForMeasure(\"Grams\", calories)}</td>\r\n                <td>{this._infoForMeasure(\"Pieces\", calories)}</td></tr>\r\n              <tr><td>Price</td>\r\n                <td>{this._infoForMeasure(\"Grams\", price)}</td>\r\n                <td>{this._infoForMeasure(\"Pieces\", price)}</td></tr>\r\n            </tbody>\r\n          </table>\r\n          {this._compositionOrNot()}\r\n          {this._dishButtonsOrNot()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onDishSelect = () => {\r\n    const { isdish } = this.state.selectedFoodDetails;\r\n    const { isDishSelected } = this.props;\r\n\r\n    if (isdish && !isDishSelected) {\r\n      this.props.updateDishSelect(true);\r\n    }\r\n  };\r\n\r\n  onCalculateDishValues = () => {\r\n    const { selectedFoodDetails } = this.state;\r\n    this.setState({ selectedFoodDetails: null },\r\n      async() => {\r\n        let fat = 0; let carbs = 0; let protein = 0;\r\n        for (const entry of selectedFoodDetails.foodentries) {\r\n          const { amount, measure, sizeinfo } = entry;\r\n          if (measure === \"Pieces\") {\r\n            if (sizeinfo === null) {\r\n              fat += (entry.fat * amount);\r\n              carbs += (entry.carbs * amount);\r\n              protein += (entry.protein * amount);\r\n            } else {\r\n              fat += (entry.fat * amount * sizeinfo / 100);\r\n              carbs += (entry.carbs * amount * sizeinfo / 100);\r\n              protein += (entry.protein * amount * sizeinfo / 100);\r\n            }\r\n          } else if (measure === \"Grams\") {\r\n            fat += (entry.fat * amount / 100);\r\n            carbs += (entry.carbs * amount / 100);\r\n            protein += (entry.protein * amount / 100);\r\n          }\r\n        }\r\n        selectedFoodDetails.fat = Number(fat.toFixed(1));\r\n        selectedFoodDetails.carbs = Number(carbs.toFixed(1));\r\n        selectedFoodDetails.protein = Number(protein.toFixed(1));\r\n\r\n        let res = await fetch(`${getServerURL()}/yourfoods`, {\r\n          method: \"post\",\r\n          headers: { \"content-type\": \"application/json\" },\r\n          body: JSON.stringify(selectedFoodDetails),\r\n        });\r\n        res = await res.json();\r\n\r\n        this.setState({ selectedFoodDetails }, () => {\r\n          console.log(res);\r\n          if (typeof res !== \"string\") {\r\n            alert(`Successfully calculated dish values: ${selectedFoodDetails.foodname} ${selectedFoodDetails.brand}!\\n\r\n            --You can view resulting entry in the console`);\r\n          } else {\r\n            alert(\"There was an Error!\");\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  onSaveDishIngr = () => {\r\n    const { selectedFoodDetails } = this.state;\r\n\r\n    this.setState({ selectedFoodDetails: null }, async() => {\r\n      const dishData = {};\r\n      dishData.dishid = selectedFoodDetails.foodid;\r\n      dishData.foodentries = [];\r\n      for (const f of selectedFoodDetails.foodentries) {\r\n        dishData.foodentries.push({ foodid: f.foodid, amount: f.amount, measure: f.measure });\r\n      }\r\n\r\n      let res = await fetch(`${getServerURL()}/dailymeals/dishupdate`, {\r\n        method: \"post\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify(dishData),\r\n      });\r\n      res = await res.json();\r\n\r\n      this.setState({ selectedFoodDetails }, () => {\r\n        console.log(res);\r\n        if (typeof res !== \"string\") {\r\n          alert(`Successfully saved dish: ${selectedFoodDetails.foodname} ${selectedFoodDetails.brand}!\\n\r\n                      --You can view resulting entry in the console`);\r\n        } else {\r\n          alert(\"There was an Error!\");\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateRemoveFoodEntry = (sender) => {\r\n    const { selectedFoodDetails } = this.state;\r\n\r\n    selectedFoodDetails.foodentries.splice(sender._reactInternalFiber.key, 1);\r\n    this.setState({ selectedFoodDetails });\r\n  };\r\n\r\n  updateNewFoodEntry = (newFoodEntry) => {\r\n    const { selectedFoodDetails } = this.state;\r\n    const { currentUser } = this.context;\r\n\r\n    if (currentUser.access === \"Guest\" && selectedFoodDetails.foodentries.length >= 7) {\r\n      return \"As Guest user you cannot enter more than 7 Food Items per Dish!\";\r\n    }\r\n\r\n    selectedFoodDetails.foodentries.push(newFoodEntry);\r\n    this.setState({ selectedFoodDetails });\r\n\r\n    return \"\";\r\n  };\r\n\r\n  updateSelectedFoodDetails = (selectedFood) => this.setState({ selectedFoodDetails: null },\r\n    async() => {\r\n      const { foodid, isdish, noteid } = selectedFood.state.foodItem;\r\n\r\n      let res = await fetch(`${getServerURL()}/dailymeals/fooddetails`, {\r\n        method: \"get\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          foodid,\r\n          isdish,\r\n          \"noteid\": noteid ? noteid : null,\r\n        },\r\n      });\r\n      res = await res.json();\r\n\r\n      const newFoodDetails = selectedFood.state.foodItem;\r\n      newFoodDetails.foodentries = res.foodentries;\r\n      newFoodDetails.note = res.note;\r\n\r\n      this.setState({ selectedFoodDetails: newFoodDetails });\r\n    });\r\n\r\n  _infoForMeasure = (measureStr, infoValue) => {\r\n    const { sizeinfo } = this.state.selectedFoodDetails;\r\n    const measure = sizeinfo === null ? \"Pieces\" : \"Grams\";\r\n\r\n    return measure === measureStr ? `${infoValue}` : \"--\";\r\n  };\r\n\r\n  _compositionOrNot = () => {\r\n    const { selectedFoodDetails } = this.state;\r\n\r\n    if (selectedFoodDetails.isdish) {\r\n      this.foodEntriesCounter = 0;\r\n\n      return (\r\n        <div className=\"foodEntries boxShow\">\r\n          <div className=\"comp textHigh\">Composition:</div>\r\n          {this._getFoodEntries()}\r\n        </div>\r\n      );\r\n    }\r\n\n    return \"\";\r\n  };\r\n\r\n  _getFoodEntries = () => {\r\n    const { selectedFoodDetails } = this.state;\r\n\r\n    this.foodEntriesCounter = 0;\r\n\n    return selectedFoodDetails.foodentries.map(this._getFoodEntry);\r\n  };\n\r\n  _getFoodEntry = (entry) => {\r\n    const fe = (\r\n      <FoodEntry\r\n        key={this.foodEntriesCounter} foodEntry={entry}\r\n        updateRemoveFoodEntry={this.updateRemoveFoodEntry}\n      />);\r\n    this.foodEntriesCounter += 1;\r\n\n    return fe;\r\n  };\r\n\r\n  _dishButtonsOrNot = () => {\r\n    const { isDishSelected } = this.props;\r\n\r\n    if (isDishSelected) {\r\n      return (\r\n        <div className=\"tcenter\">\r\n          <button className=\"ftButton\" onClick={this.onSaveDishIngr}>SAVE ENTRIES</button>\r\n          <button className=\"ftButton\" onClick={this.onCalculateDishValues}>CALC VALUES</button>\r\n        </div>\r\n      );\r\n    }\r\n\n    return \"\";\r\n  };\r\n}\r\n\r\nexport default FoodDetailsArea;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-onchange */\r\nimport React from \"react\";\r\nimport \"../Css/DailyMeals.css\";\r\n\r\nimport { AppContext } from \"../AppContext\";\n\r\nimport DayArea from \"./PagePanels/DayArea\";\r\nimport AddFoodArea from \"./PagePanels/AddFoodArea\";\r\nimport FoodDetailsArea from \"./PagePanels/FoodDetailsArea\";\r\n\r\n\r\nclass DailyMeals extends React.Component {\r\n  static contextType = AppContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dayArea: null,\r\n      addFoodArea: null,\r\n      foodDetailsArea: null,\r\n      isDishSelected: false,\r\n    };\r\n  }\n\n  render() {\n    const { isDishSelected } = this.state;\n\n    return (\n      <main className=\"mainDailyMeals boxShow\" >\n        <DayArea ref={this.dayAreaRef} updateDishSelect={this.updateDishSelect} />\n        <AddFoodArea\n          ref={this.addFoodAreaRef} updateAddNewFoodEntry={this.updateAddNewFoodEntry}\n          updateAddNewMeal={this.updateAddNewMeal} updateSelectedFood={this.updateSelectedFood}\n        />\n        <FoodDetailsArea\n          ref={this.foodDetailsAreaRef} isDishSelected={isDishSelected}\n          updateDishSelect={this.updateDishSelect}\n        />\n      </main>\n    );\n  }\r\n\r\n  dayAreaRef = (node) => this.setState({ dayArea: node });\r\n  addFoodAreaRef = (node) => this.setState({ addFoodArea: node });\r\n  foodDetailsAreaRef = (node) => this.setState({ foodDetailsArea: node });\r\n\r\n  updateAddNewMeal = (mealName, portion) => {\r\n    const errorMessage = this.state.dayArea.updateAddNewMeal(mealName, portion);\r\n    if (errorMessage) {\r\n      alert(errorMessage);\r\n    } else {\r\n      this.state.addFoodArea.resetAfterAdd();\r\n    }\r\n  };\n\r\n  updateSelectedFood = (selectedFood) => {\r\n    const { isDishSelected } = this.state;\r\n\r\n    if (!isDishSelected) {\r\n      this.state.foodDetailsArea.updateSelectedFoodDetails(selectedFood);\r\n    }\r\n  };\r\n\r\n  updateAddNewFoodEntry = (newFoodEntry) => {\r\n    const { isDishSelected } = this.state;\r\n\r\n    let errorMessage = \"\";\r\n    if (isDishSelected) {\r\n      errorMessage = this.state.foodDetailsArea.updateNewFoodEntry(newFoodEntry);\r\n    } else {\r\n      errorMessage = this.state.dayArea.updateNewFoodEntry(newFoodEntry);\r\n    }\r\n\r\n    if (errorMessage) {\r\n      alert(errorMessage);\r\n    } else {\r\n      this.state.addFoodArea.resetAfterAdd();\r\n    }\r\n  };\r\n\r\n  updateDishSelect = (status) => {\r\n    if (status) {\r\n      this.state.dayArea.updateSelectedMeal(null);\r\n    }\r\n    this.setState({ isDishSelected: status });\r\n  };\r\n}\r\n\r\nexport default DailyMeals;\r\n","import React from \"react\";\n\r\n\r\nconst YourFood = () => (\r\n  <main className=\"boxShow\">\r\n    <div className=\"subblock\">\r\n      <h1>YOUR FOOD!</h1>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default YourFood;\r\n","import React from \"react\";\n\r\n\r\nconst YourPlans = () => (\r\n  <main className=\"boxShow\">\r\n    <div className=\"subblock\">\r\n      <h1>YOUR PLANS!</h1>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default YourPlans;\r\n","import React from \"react\";\n\r\n\r\nconst YourStats = () => (\r\n  <main className=\"boxShow\">\r\n    <div className=\"subblock\">\r\n      <h1>YOUR STATS!</h1>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default YourStats;\r\n","import React from \"react\";\n\r\n\r\nconst GlobalStats = () => (\r\n  <main className=\"boxShow\">\r\n    <div className=\"subblock\">\r\n      <h1>GLOBAL STATS!</h1>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default GlobalStats;\r\n","import React from \"react\";\n\r\n\r\nconst UsersData = () => (\r\n  <main className=\"boxShow\">\r\n    <div className=\"subblock\">\r\n      <h1>USERS DATA!</h1>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default UsersData;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\n\r\nimport \"../Css/UserForms.css\";\r\nimport { AppContext } from \"../AppContext\";\nimport { getServerURL } from \"../methods\";\n\r\n\r\nclass Profile extends React.Component {\r\n  static contextType = AppContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      passNow: \"\",\r\n      passNew: \"\",\r\n      passConfirm: \"\",\r\n\r\n      warning: null,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  passRegex = /^(?=.*?\\d)(?=.*?[a-zA-Z]).+$/;\r\n\r\n  UNSAFE_componentWillMount = () => {\r\n    const { username, email, firstname, lastname, dob, sex, describe, pic, diet } = this.context.currentUser;\r\n\r\n    this.setState({\r\n      username,\r\n      email,\r\n      firstname,\r\n      lastname,\r\n      dob,\r\n      sex,\r\n      describe,\r\n      pic,\r\n      diet,\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const { username, email, firstname, lastname, dob, sex, describe, pic, diet, warning, isLoading } = this.state;\r\n\r\n    return (\r\n      <main className=\"mainUserForm boxShow\">\r\n        <form className=\"userform subblock boxShow\" onReset={this.cancelChangeProfile} onSubmit={this.onChangeProfile}>\r\n          <h1 className=\"lineDown\">Profile Info</h1>\r\n          <div className=\"fields\">\r\n            <span>Username:</span>\r\n            <input minLength=\"3\" name=\"username\" type=\"text\" value={username} onChange={(ev) => this.setState({ username: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"username\" ? \"\" : \" hidden\"}`}>Username is Already Taken!</span>\r\n            <span>Email:</span>\r\n            <input name=\"email\" type=\"text\" value={email} onChange={(ev) => this.setState({ email: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"email\" ? \"\" : \" hidden\"}`}>Email is Already Taken!</span>\r\n            <div className=\"personal\">\r\n              <div>\r\n                <img alt=\"[NO PIC]\" src={`UserPics/${pic}`} /><br />\r\n                <button className=\"ftButton\" disabled={isLoading} onClick={this.browseUserPic}>Browse</button>\r\n              </div>\r\n              <div>\r\n                <span>Description:</span><br />\r\n                <textarea placeholder=\"Say who you are in a few short phrases..\" value={describe} onChange={(ev) => this.setState({ describe: ev.currentTarget.value })} />\r\n              </div>\r\n            </div>\r\n            <span>First Name:</span>\r\n            <input name=\"firstname\" type=\"text\" value={firstname} onChange={(ev) => this.setState({ firstname: ev.currentTarget.value })} />\r\n            <span>Last Name:</span>\r\n            <input name=\"lastname\" type=\"text\" value={lastname} onChange={(ev) => this.setState({ lastname: ev.currentTarget.value })} />\r\n            <div>\r\n              <span>Sex:</span>\r\n              <input checked={sex === \"1\"} name=\"sex\" type=\"radio\" value=\"male\" onChange={(ev) => this.setState({ sex: \"1\" })} />\r\n              <span>Male </span>\r\n              <input checked={sex === \"0\"} name=\"sex\" type=\"radio\" value=\"female\" onChange={(ev) => this.setState({ sex: \"0\" })} />\r\n              <span>Female</span>\r\n            </div>\r\n            <span>Date Of Birth:</span>\r\n            <input name=\"dob\" type=\"date\" value={dob} onChange={(ev) => this.setState({ dob: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"dob\" ? \"\" : \" hidden\"}`}>Incorrect date!</span>\r\n            <span>Diet Plans:</span>\r\n            <select value={diet ? diet : \"none\"} onChange={(ev) => this.setState({ diet: (ev.currentTarget.value === \"none\" ? null : ev.currentTarget.value) })}>\r\n              <option>none</option>\r\n              <option>Calorie Restrict</option>\r\n              <option>Paleo</option>\r\n              <option>Keto</option>\r\n              <option>Mediterranian</option>\r\n              <option>Vegetarian</option>\r\n              <option>Vegan</option>\r\n              <option>Carnivore</option>\r\n              <option>Low Carb</option>\r\n              <option>Low Fat</option>\r\n              <option>PSMF</option>\r\n              <option>Specific/Personal Plan</option>\r\n            </select>\r\n            <div className=\"profileButtons\">\r\n              <input className=\"ftButton\" disabled={isLoading} type=\"submit\" value=\"Save Changes\" />\r\n              <input className=\"ftButton\" disabled={isLoading} type=\"reset\" value=\"Cancel\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <form className=\"userform subblock boxShow\" onSubmit={this.onChangePassword}>\r\n          <h1 className=\"lineDown\">Change Password</h1>\r\n          <div className=\"fields\">\r\n            <span>Current Password:</span>\r\n            <input minLength=\"8\" name=\"passnow\" type=\"password\" onChange={(ev) => this.setState({ passNow: ev.currentTarget.value })} />\r\n            <span>New Password: </span>\r\n            <input minLength=\"8\" name=\"passnew\" type=\"password\" onChange={(ev) => this.setState({ passNew: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"passNew\" ? \"\" : \" hidden\"}`}>Invalid Password!</span>\r\n            <span className=\"detail\">Password must be at least 8characters long and have both numbers and letters!</span>\r\n            <span>Confirm New Password:</span>\r\n            <input minLength=\"8\" name=\"passConfirm\" type=\"password\" onChange={(ev) => this.setState({ passConfirm: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"passConfirm\" ? \"\" : \" hidden\"}`}>Passwords do Not Match!</span>\r\n            <div className=\"profileButtons\">\r\n              <input className=\"ftButton\" disabled={isLoading} type=\"submit\" value=\"Save Changes\" />\r\n              <input className=\"ftButton\" disabled={isLoading} type=\"reset\" value=\"Cancel\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </main>\r\n    );\r\n  };\r\n\r\n  onChangeProfile = (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({ isLoading: true });\r\n\r\n    (async() => {\r\n      const { username, email, firstname, lastname, dob, sex, describe, pic, diet } = this.state;\r\n      const { updateUser, currentUser } = this.context;\r\n\r\n      if (dob !== \"\" && new Date(dob) > new Date()) {\n        this.setState({ warning: \"dob\" });\n      } else {\r\n        let res = await fetch(`${getServerURL()}/profile`, {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            userid: currentUser.userid,\r\n            username,\r\n            email,\r\n            firstname: firstname === \"\" ? null : firstname,\r\n            lastname: lastname === \"\" ? null : lastname,\r\n            dob: dob === \"\" ? null : dob,\r\n            sex: sex === \"\" ? null : sex,\r\n            describe: describe === \"\" ? null : describe,\r\n            pic: pic === \"\" ? null : pic,\r\n            diet,\r\n          }),\r\n        });\r\n        res = await res.json();\r\n\r\n        if (res.includes(\"Username\")) {\n          this.setState({ warning: \"username\" });\n        } else if (res.includes(\"Email\")) {\n          this.setState({ warning: \"email\" });\n        } else if (res === \"User Profile Updated!\") {\r\n          updateUser(this.state);\r\n        } else {\n          console.log(res);\n        }\r\n      }\r\n      this.setState({ isLoading: false });\r\n    })();\r\n  };\r\n\r\n  onChangePassword = (ev) => {\r\n    ev.preventDefault();\r\n    const { passNow, passNew, passConfirm } = this.state;\r\n    const { currentUser } = this.context;\r\n\r\n    if (!passNew.match(this.passRegex)) {\n      this.setState({ warning: \"passNew\" });\n    } else if (passNew !== passConfirm) {\n      this.setState({ warning: \"passConfirm\" });\n    } else {\r\n      ev.preventDefault();\r\n      this.setState({ isLoading: true });\r\n\r\n      (async() => {\r\n        try {\r\n          let res = await fetch(`${getServerURL()}/profile/changepass`, {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              userid: currentUser.userid,\r\n              oldpass: passNow,\r\n              newpass: passNew,\r\n            }),\r\n          });\r\n          res = await res.json();\r\n          console.log(res);\r\n        } catch (err) {\r\n          console.log(\"___________ERROR___________\\n\", err.message);\r\n        } finally {\r\n          this.setState({ isLoading: false });\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  cancelChangeProfile = (ev) => {\r\n    ev.preventDefault();\r\n    const { username, email, firstname, lastname, dob, sex, pic, describe, diet } = this.context.currentUser;\r\n\r\n    this.setState({\r\n      username,\r\n      email,\r\n      firstname,\r\n      lastname,\r\n      dob,\r\n      sex,\r\n      describe,\r\n      pic,\r\n      diet,\r\n    });\r\n  };\r\n\r\n  browseUserPic = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    alert(\"Sorry. Not implemented yet...\");\r\n  };\r\n}\r\n\r\nexport default Profile;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\n\r\nimport \"../Css/UserForms.css\";\r\nimport { AppContext } from \"../AppContext\";\r\nimport { getServerURL } from \"../methods\";\r\n\r\n// import { NavLink } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n  static contextType = AppContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      warningMsg: null,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  render = () => {\r\n    const { warningMsg, isLoading } = this.state;\r\n    const { changeMainPage } = this.context;\r\n\r\n    return (\r\n      <main className=\"mainUserForm boxShow\">\r\n        <form className=\"userform subblock boxShow\" onSubmit={this.onLogin}>\r\n          <h1 className=\"lineDown\">Enter Username/Email and Password to Login!</h1>\r\n          <div className=\"fields\">\r\n            <span>Username/Email:</span>\r\n            <input name=\"username\" type=\"text\" />\r\n            <span>Password:</span>\r\n            <input name=\"password\" type=\"password\" />\r\n            <span disabled={isLoading}>\r\n              Remember Me?\r\n              <input name=\"member\" type=\"checkbox\" />\r\n            </span>\r\n            <span className={warningMsg === null ? \"hidden\" : \"warning\"}>{this.state.warningMsg}</span>\r\n            <input className=\"ftButton\" disabled={isLoading} type=\"submit\" value=\"Login\" />\r\n          </div>\r\n          {/*\n        <div className=\"loglinks\">\n        <NavLink to=\"/\">Forgot Password?</NavLink>\n        <NavLink to=\"/Register\">New here? Go Register!</NavLink>\n        </div>\n        */}\r\n          <div className=\"loglinks\">\r\n            <span disabled={isLoading} role=\"link\" onClick={() => changeMainPage(\"Home\")}>\r\n              Forgot Password?</span>\r\n            <span disabled={isLoading} role=\"link\" onClick={() => changeMainPage(\"Register\")}>\r\n              New here? Go Register!</span>\r\n          </div>\r\n        </form>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  onLogin = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    this.setState({ isLoading: true });\r\n    (async() => {\r\n      const inputs = document.querySelectorAll(\".userform input\");\r\n      const usernameText = inputs[0].value;\r\n      const passText = inputs[1].value;\r\n      const { updateUser, changeMainPage } = this.context;\r\n      const successStatus = 200;\r\n\r\n      let res = await fetch(`${getServerURL()}/login`, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          username: usernameText,\r\n          pass: passText,\r\n        }),\r\n      });\r\n      if (res.status === successStatus) {\r\n        res = await res.json();\r\n        if (typeof res === \"string\") {\r\n          this.setState({ warningMsg: res });\r\n        } else {\r\n          updateUser(res);\r\n          changeMainPage(\"Profile\");\r\n        }\r\n      } else {\r\n        console.log(await res.json());\r\n      }\r\n      this.setState({ isLoading: false });\r\n    })();\r\n  };\r\n}\r\n\r\nexport default Login;\r\n","/* eslint-disable no-console */\n/* eslint-disable no-alert */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-onchange */\nimport React from \"react\";\n\r\nimport \"../Css/UserForms.css\";\r\nimport { AppContext } from \"../AppContext\";\nimport { getServerURL } from \"../methods\";\n\r\n\r\nclass Register extends React.Component {\r\n  static contextType = AppContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: null,\r\n      email: null,\r\n      pass: null,\r\n      passC: null,\r\n      firstname: null,\r\n      lastname: null,\r\n      dob: null,\r\n      sex: null,\r\n      pic: null,\r\n      desc: null,\r\n      diet: null,\r\n\r\n      warning: null,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  passRegex = /^(?=.*?\\d)(?=.*?[a-zA-Z]).+$/;\r\n\r\n  render = () => {\r\n    const { sex, warning, isLoading } = this.state;\r\n\r\n    return (\r\n      <main className=\"mainUserForm boxShow\">\r\n        <form className=\"userform subblock boxShow\" onSubmit={this.onRegister}>\r\n          <h1 className=\"lineDown\">Please Complete Required fields to Register</h1>\r\n          <div className=\"fields\">\r\n            <span className=\"req\">Username*:</span>\r\n            <input name=\"username\" pattern=\".{3,}\" required={true} title=\"3 characters minimum\" type=\"text\" onChange={(ev) => this.setState({ username: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"username\" ? \"\" : \" hidden\"}`}>Username is Already Taken!</span>\r\n            <span className=\"req\">Email*:</span>\r\n            <input name=\"email\" type=\"email\" onChange={(ev) => this.setState({ email: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"email\" ? \"\" : \" hidden\"}`}>Email is Already Taken!</span>\r\n            <span className=\"req\">Password*:</span>\r\n            <input className=\"pass\" minLength=\"8\" name=\"password\" type=\"password\" onChange={(ev) => this.setState({ pass: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"pass\" ? \"\" : \" hidden\"}`}>Invalid Password!</span>\r\n            <span className=\"detail\">Password must be at least 8characters long and have both numbers and letters!</span>\r\n            <span className=\"req\">Confirm Password*:</span>\r\n            <input minLength=\"8\" name=\"cpass\" type=\"password\" onChange={(ev) => this.setState({ passC: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"passC\" ? \"\" : \" hidden\"}`}>Passwords do Not Match!</span>\r\n            <span>First Name:</span>\r\n            <input name=\"firstname\" type=\"text\" onChange={(ev) => this.setState({ firstname: ev.currentTarget.value })} />\r\n            <span>Last Name:</span>\r\n            <input name=\"lastname\" type=\"text\" onChange={(ev) => this.setState({ lastname: ev.currentTarget.value })} />\r\n            <span>Date Of Birth:</span>\r\n            <input name=\"dob\" type=\"date\" onChange={(ev) => this.setState({ dob: ev.currentTarget.value })} />\r\n            <span className={`warning${warning === \"dob\" ? \"\" : \" hidden\"}`}>Incorrect date!</span>\r\n            <div>\r\n              <span>Sex:</span>\r\n              <input checked={sex === \"1\"} name=\"sex\" type=\"radio\" value=\"male\" onChange={(ev) => this.setState({ sex: \"1\" })} />\r\n              <span>Male </span>\r\n              <input checked={sex === \"0\"} name=\"sex\" type=\"radio\" value=\"female\" onChange={(ev) => this.setState({ sex: \"0\" })} />\r\n              <span>Female</span>\r\n            </div>\r\n            <div className=\"personal\">\r\n              <div>\r\n                <img alt=\"[NO PIC]\" src=\"UserPics/profileEmpty.png\" /><br />\r\n                <button className=\"ftButton\" disabled={isLoading} onClick={this.browseUserPic}>Browse</button>\r\n              </div>\r\n              <div>\r\n                <span>Short Description:</span><br />\r\n                <textarea placeholder=\"Say who you are in a few short phrases..\" onChange={(ev) => this.setState({ describe: ev.currentTarget.value })} />\r\n              </div>\r\n            </div>\r\n            <span>Diet Plans?</span>\r\n            <select onChange={(ev) => this.setState({ diet: (ev.currentTarget.value === \"none\" ? null : ev.currentTarget.value) })}>\r\n              <option>none</option>\r\n              <option>Calorie Restrict</option>\r\n              <option>Paleo</option>\r\n              <option>Keto</option>\r\n              <option>Mediterranian</option>\r\n              <option>Vegetarian</option>\r\n              <option>Vegan</option>\r\n              <option>Carnivore</option>\r\n              <option>Low Carb</option>\r\n              <option>Low Fat</option>\r\n              <option>PSMF</option>\r\n              <option>Specific Personal Plan</option>\r\n            </select>\r\n            <span className=\"detail\">-Pick a Diet from list if any of them apply to You - Can always change it later!</span>\r\n            <span className=\"detail\">(This Choice is simply for tracking stats - Will Not affect results &recommendations)</span>\r\n            <input className=\"ftButton\" disabled={isLoading} type=\"submit\" value=\"Register\" />\r\n          </div>\r\n        </form>\r\n      </main>\r\n    );\r\n  };\r\n\r\n  onRegister = (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({ isLoading: true });\r\n\r\n    (async() => {\r\n      try {\r\n        const { pass, passC, username, email, firstname, lastname, dob, sex, describe, pic, diet } = this.state;\r\n        const { changeMainPage } = this.context;\r\n\r\n        if (!pass.match(this.passRegex)) {\n          this.setState({ warning: \"pass\" });\n        } else if (pass !== passC) {\n          this.setState({ warning: \"passC\" });\n        } else if (dob !== \"\" && new Date(dob) > new Date()) {\n          this.setState({ warning: \"dob\" });\n        } else {\r\n          let res = await fetch(`${getServerURL()}/register`, {\r\n            method: \"put\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              username,\r\n              email,\r\n              firstname: firstname === \"\" ? null : firstname,\r\n              lastname: lastname === \"\" ? null : lastname,\r\n              dob: dob === \"\" ? null : dob,\r\n              sex: sex === \"\" ? null : sex,\r\n              describe: describe === \"\" ? null : describe,\r\n              pic: pic === \"\" ? null : pic,\r\n              diet: diet === \"none\" ? null : diet,\r\n              pass,\r\n            }),\r\n          });\r\n          res = await res.json();\r\n\r\n          if (res.userid) {\r\n            changeMainPage(\"Login\");\r\n          } else if (res.includes(\"Username\")) {\n            this.setState({ warning: \"username\" });\n          } else if (res.includes(\"Email\")) {\n            this.setState({ warning: \"email\" });\n          } else {\n            console.log(res);\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(\"___________ERROR___________\\n\", err.message);\r\n      } finally {\r\n        this.setState({ isLoading: false });\r\n      }\r\n    })();\r\n  };\r\n\r\n  browseUserPic = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    alert(\"Sorry. Not implemented yet...\");\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\n\r\n\r\nconst Error = () => (\r\n  <main className=\"boxShow\">\r\n    <div className=\"subblock\">\r\n      <h1>Error! Page does not exist!</h1>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default Error;\r\n","// import { Route, Switch } from 'react-router-dom';\r\n//\r\n// const Main = () => {\r\n//    return (\r\n//        <Switch>\r\n//            <Route path=\"/\" component={Home} exact/>\r\n//            <Route path=\"/DailyMeals\" component={DailyMeals} />\r\n//            <Route path=\"/YourFood\" component={YourFood} />\r\n//            <Route path=\"/YourPlans\" component={YourPlans} />\r\n//            <Route path=\"/YourStats\" component={YourStats} />\r\n//            <Route path=\"/GlobalStats\" component={GlobalStats} />\r\n//            <Route path=\"/GlobalData\" component={GlobalData} />\r\n//            <Route path=\"/Login\" component={Login} />\r\n//            <Route path=\"/Register\" component={Register} />\r\n//            <Route component={Error} />\r\n//        </Switch>\r\n//    );\r\n// }\r\n\r\nimport React from \"react\";\r\n\r\nimport Home from \"../MainPages/Home\";\r\nimport DailyMeals from \"../MainPages/DailyMeals\";\r\nimport YourFood from \"../MainPages/YourFood\";\r\nimport YourPlans from \"../MainPages/YourPlans\";\r\nimport YourStats from \"../MainPages/YourStats\";\r\nimport GlobalStats from \"../MainPages/GlobalStats\";\r\nimport GlobalData from \"../MainPages/UsersData\";\r\nimport Profile from \"../MainPages/Profile\";\r\nimport Login from \"../MainPages/Login\";\r\nimport Register from \"../MainPages/Register\";\r\nimport Error from \"../MainPages/Error\";\n\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { page: props.page ? props.page : \"Home\" };\r\n  }\r\n\r\n  render = () => {\r\n    switch (this.state.page) {\r\n      case \"Home\":\r\n        return <Home />;\r\n      case \"DailyMeals\":\r\n        return <DailyMeals />;\r\n      case \"YourFood\":\r\n        return <YourFood />;\r\n      case \"YourPlans\":\r\n        return <YourPlans />;\r\n      case \"YourStats\":\r\n        return <YourStats />;\r\n      case \"GlobalStats\":\r\n        return <GlobalStats />;\r\n      case \"GlobalData\":\r\n        return <GlobalData />;\r\n      case \"Profile\":\r\n        return <Profile />;\r\n      case \"Register\":\r\n        return <Register />;\r\n      case \"Login\":\r\n        return <Login />;\r\n      default:\r\n        return <Error />;\r\n    }\r\n  };\r\n\r\n    changePage = (newPage) => {\r\n      const { page } = this.state;\r\n\r\n      if (page !== newPage) {\n        this.setState({ page: newPage });\n      }\r\n    };\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\r\n\r\nclass Footer extends React.Component {\r\n    render = () => (\r\n      <footer className=\"subblock boxShow\">\r\n        <h3 id=\"author\">--Made by Rotariu Stefan<sub> - StravoS</sub></h3>\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\n\nimport Header from \"./Sections/Header\";\r\nimport Nav from \"./Sections/Nav\";\r\nimport Main from \"./Sections/Main\";\r\nimport Footer from \"./Sections/Footer\";\nimport { AppContext, defaultUser } from \"./AppContext\";\nimport { dateToStr } from \"./methods\";\n\r\n\r\nconst refs = {\r\n  main: React.createRef(),\r\n  footer: React.createRef(),\r\n  header: React.createRef(),\r\n  nav: React.createRef(),\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentUser: defaultUser };\r\n  }\r\n\r\nrender = () => (\r\n  <AppContext.Provider\n    value={ {\n      currentUser: this.state.currentUser,\r\n      changeMainPage: this.changeMainPage,\r\n      updateUser: this.updateUser,\n    } }\n  >\r\n    <div className=\"layout\">\r\n      <Header key=\"H\" ref={refs.header} />\r\n      <Nav key=\"N\" ref={refs.nav} />\r\n      <Main key=\"M\" ref={refs.main} page=\"Home\" />\r\n      <Footer key=\"F\" ref={refs.footer} />\r\n    </div>\r\n  </AppContext.Provider>\r\n);\r\n\r\n  changeMainPage = (newPage) => refs.main.current.changePage(newPage);\r\n\r\n  updateUser = (data) => {\r\n    if (data === null) {\r\n      this.setState({ currentUser: defaultUser });\r\n      refs.header.current.updateUser(false);\r\n    } else {\r\n      data.dob = dateToStr(new Date(data.dob));\r\n      this.setState({ currentUser: data });\r\n      refs.header.current.updateUser(true);\r\n    }\r\n  };\r\n\r\n  updateUserProfile = (data) => {\r\n    const { currentUser } = this.state;\r\n\r\n    currentUser.username = data.username;\r\n    currentUser.email = data.email;\r\n    currentUser.firstname = data.firstname;\r\n    currentUser.lastname = data.lastname;\r\n    currentUser.dob = data.dob;\r\n    currentUser.sex = data.sex;\r\n    currentUser.describe = data.describe;\r\n    currentUser.pic = data.pic;\r\n    currentUser.diet = data.diet;\r\n\r\n    this.setState({ currentUser });\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// import { BrowserRouter } from 'react-router-dom';\r\n//\r\n// ReactDOM.render(\r\n//    <BrowserRouter>\r\n//        <Header />\r\n//        <Nav />\r\n//        <Main />\r\n//        <Footer />\r\n//    </BrowserRouter>,\r\n//    document.querySelector(\"#root\"));\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\n\r\nimport App from \"./App\";\n\r\n\r\nReactDOM.render(<App />,\r\n  document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}